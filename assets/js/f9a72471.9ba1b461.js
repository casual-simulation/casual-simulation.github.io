"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[6681],{8631:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=n(5250),s=n(5545),a=n(1623);const i={id:"listen-tags",title:"Listen Tags",sidebar_label:"Listen Tags",description:"Listen tags are tags that can receive shouts and whispers from other bots and actoins that happen from the user."},r=void 0,c={id:"listen-tags",title:"Listen Tags",description:"Listen tags are tags that can receive shouts and whispers from other bots and actoins that happen from the user.",source:"@site/docs/listen-tags.mdx",sourceDirName:".",slug:"/listen-tags",permalink:"/listen-tags",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/listen-tags.mdx",tags:[],version:"current",frontMatter:{id:"listen-tags",title:"Listen Tags",sidebar_label:"Listen Tags",description:"Listen tags are tags that can receive shouts and whispers from other bots and actoins that happen from the user."},sidebar:"docs",previous:{title:"Tags",permalink:"/tags"},next:{title:"AI",permalink:"/actions/ai"}},l={},d=[{value:"Whisper Tags",id:"whisper-tags",level:2},{value:"<code>@onCreate</code>",id:"oncreate",level:3},{value:"<code>@onDestroy</code>",id:"ondestroy",level:3},{value:"<code>@onModDrop</code>",id:"onmoddrop",level:3},{value:"Arguments:",id:"arguments",level:4},{value:"<code>@onModDropEnter</code>",id:"onmoddropenter",level:3},{value:"Arguments:",id:"arguments-1",level:4},{value:"<code>@onModDropExit</code>",id:"onmoddropexit",level:3},{value:"Arguments:",id:"arguments-2",level:4},{value:"<code>@onClick</code>",id:"onclick",level:3},{value:"Arguments:",id:"arguments-3",level:4},{value:"<code>@onKeyClick</code>",id:"onkeyclick",level:3},{value:"Arguments:",id:"arguments-4",level:4},{value:"<code>@onPointerEnter</code>",id:"onpointerenter",level:3},{value:"Arguments:",id:"arguments-5",level:4},{value:"<code>@onPointerExit</code>",id:"onpointerexit",level:3},{value:"Arguments:",id:"arguments-6",level:4},{value:"<code>@onPointerDown</code>",id:"onpointerdown",level:3},{value:"Arguments:",id:"arguments-7",level:4},{value:"<code>@onPointerUp</code>",id:"onpointerup",level:3},{value:"Arguments:",id:"arguments-8",level:4},{value:"<code>@onDrag</code>",id:"ondrag",level:3},{value:"Arguments:",id:"arguments-9",level:4},{value:"<code>@onDragging</code>",id:"ondragging",level:3},{value:"Arguments:",id:"arguments-10",level:4},{value:"<code>@onDrop</code>",id:"ondrop",level:3},{value:"Arguments",id:"arguments-11",level:4},{value:"<code>@onDropEnter</code>",id:"ondropenter",level:3},{value:"Arguments",id:"arguments-12",level:4},{value:"<code>@onDropExit</code>",id:"ondropexit",level:3},{value:"Arguments",id:"arguments-13",level:4},{value:"<code>@onSaveInput</code>",id:"onsaveinput",level:3},{value:"Arguments:",id:"arguments-14",level:4},{value:"<code>@onCloseInput</code>",id:"oncloseinput",level:3},{value:"Arguments:",id:"arguments-15",level:4},{value:"<code>@onListen</code>",id:"onlisten",level:3},{value:"Arguments:",id:"arguments-16",level:4},{value:"<code>@onMaxLODEnter</code>",id:"onmaxlodenter",level:3},{value:"Arguments:",id:"arguments-17",level:4},{value:"<code>@onMinLODEnter</code>",id:"onminlodenter",level:3},{value:"Arguments:",id:"arguments-18",level:4},{value:"<code>@onMaxLODExit</code>",id:"onmaxlodexit",level:3},{value:"Arguments:",id:"arguments-19",level:4},{value:"<code>@onMinLODExit</code>",id:"onminlodexit",level:3},{value:"Arguments:",id:"arguments-20",level:4},{value:"<code>@onFocusEnter</code>",id:"onfocusenter",level:3},{value:"Arguments:",id:"arguments-21",level:4},{value:"<code>@onFocusExit</code>",id:"onfocusexit",level:3},{value:"Arguments:",id:"arguments-22",level:4},{value:"<code>@onInputTyping</code>",id:"oninputtyping",level:3},{value:"Arguments:",id:"arguments-23",level:4},{value:"<code>@onSubmit</code>",id:"onsubmit",level:3},{value:"Arguments:",id:"arguments-24",level:4},{value:"<code>@onSetupApp</code>",id:"onsetupapp",level:3},{value:"Arguments:",id:"arguments-25",level:4},{value:"<code>@onBotAdded</code>",id:"onbotadded",level:3},{value:"<code>@onBotChanged</code>",id:"onbotchanged",level:3},{value:"Arguments:",id:"arguments-26",level:4},{value:"<code>@[groupName][stateName]OnEnter</code>",id:"groupnamestatenameonenter",level:3},{value:"Arguments:",id:"arguments-27",level:4},{value:"<code>@[groupName][stateName]OnExit</code>",id:"groupnamestatenameonexit",level:3},{value:"Arguments:",id:"arguments-28",level:4},{value:"<code>@onFormAnimationStarted</code>",id:"onformanimationstarted",level:3},{value:"Arguments:",id:"arguments-29",level:4},{value:"<code>@onFormAnimationStopped</code>",id:"onformanimationstopped",level:3},{value:"Arguments:",id:"arguments-30",level:4},{value:"<code>@onFormAnimationLooped</code>",id:"onformanimationlooped",level:3},{value:"Arguments:",id:"arguments-31",level:4},{value:"<code>@onFormAnimationFinished</code>",id:"onformanimationfinished",level:3},{value:"Arguments:",id:"arguments-32",level:4},{value:"Shout Tags",id:"shout-tags",level:2},{value:"<code>@onAnyCreate</code>",id:"onanycreate",level:3},{value:"Arguments:",id:"arguments-33",level:4},{value:"<code>@onAnyBotClicked</code>",id:"onanybotclicked",level:3},{value:"Arguments:",id:"arguments-34",level:4},{value:"<code>@onAnyBotPointerEnter</code>",id:"onanybotpointerenter",level:3},{value:"Arguments:",id:"arguments-35",level:4},{value:"<code>@onAnyBotPointerExit</code>",id:"onanybotpointerexit",level:3},{value:"Arguments:",id:"arguments-36",level:4},{value:"<code>@onAnyBotPointerDown</code>",id:"onanybotpointerdown",level:3},{value:"Arguments:",id:"arguments-37",level:4},{value:"<code>@onAnyBotPointerUp</code>",id:"onanybotpointerup",level:3},{value:"Arguments:",id:"arguments-38",level:4},{value:"<code>@onChat</code>",id:"onchat",level:3},{value:"Arguments:",id:"arguments-39",level:4},{value:"<code>@onChatTyping</code>",id:"onchattyping",level:3},{value:"Arguments:",id:"arguments-40",level:4},{value:"<code>@onFileUpload</code>",id:"onfileupload",level:3},{value:"Arguments:",id:"arguments-41",level:4},{value:"<code>@onGridClick</code>",id:"ongridclick",level:3},{value:"Arguments:",id:"arguments-42",level:4},{value:"<code>@onGridDown</code>",id:"ongriddown",level:3},{value:"Arguments:",id:"arguments-43",level:4},{value:"<code>@onGridUp</code>",id:"ongridup",level:3},{value:"Arguments:",id:"arguments-44",level:4},{value:"<code>@onPortalChanged</code>",id:"onportalchanged",level:3},{value:"Arguments:",id:"arguments-45",level:4},{value:"<code>@onBarcodeScanned</code>",id:"onbarcodescanned",level:3},{value:"Arguments:",id:"arguments-46",level:4},{value:"<code>@onBarcodeScannerOpened</code>",id:"onbarcodescanneropened",level:3},{value:"<code>@onBarcodeScannerClosed</code>",id:"onbarcodescannerclosed",level:3},{value:"<code>@onQRCodeScanned</code>",id:"onqrcodescanned",level:3},{value:"Arguments:",id:"arguments-47",level:4},{value:"<code>@onQRCodeScannerOpened</code>",id:"onqrcodescanneropened",level:3},{value:"<code>@onQRCodeScannerClosed</code>",id:"onqrcodescannerclosed",level:3},{value:"<code>@onImageClassified</code>",id:"onimageclassified",level:3},{value:"Arguments:",id:"arguments-48",level:4},{value:"<code>@onImageClassifierOpened</code>",id:"onimageclassifieropened",level:3},{value:"Arguments:",id:"arguments-49",level:4},{value:"<code>@onImageClassifierClosed</code>",id:"onimageclassifierclosed",level:3},{value:"<code>@onPhotoCaptured</code>",id:"onphotocaptured",level:3},{value:"Arguments:",id:"arguments-50",level:4},{value:"<code>@onPhotoCameraOpened</code>",id:"onphotocameraopened",level:3},{value:"<code>@onPhotoCameraClosed</code>",id:"onphotocameraclosed",level:3},{value:"<code>@onTapCode</code>",id:"ontapcode",level:3},{value:"Arguments:",id:"arguments-51",level:4},{value:"<code>@onKeyDown</code>",id:"onkeydown",level:3},{value:"Arguments:",id:"arguments-52",level:4},{value:"<code>@onKeyUp</code>",id:"onkeyup",level:3},{value:"Arguments:",id:"arguments-53",level:4},{value:"<code>@onKeyRepeat</code>",id:"onkeyrepeat",level:3},{value:"Arguments:",id:"arguments-54",level:4},{value:"<code>@onInstJoined</code>",id:"oninstjoined",level:3},{value:"Arguments:",id:"arguments-55",level:4},{value:"<code>@onInstLeave</code>",id:"oninstleave",level:3},{value:"Arguments:",id:"arguments-56",level:4},{value:"<code>@onInstStreaming</code>",id:"oninststreaming",level:3},{value:"Arguments:",id:"arguments-57",level:4},{value:"<code>@onInstStreamLost</code>",id:"oninststreamlost",level:3},{value:"Arguments:",id:"arguments-58",level:4},{value:"<code>@onCheckout</code>",id:"oncheckout",level:3},{value:"Arguments:",id:"arguments-59",level:4},{value:"<code>@onPaste</code>",id:"onpaste",level:3},{value:"Arguments:",id:"arguments-60",level:4},{value:"<code>@onPaymentSuccessful</code>",id:"onpaymentsuccessful",level:3},{value:"Arguments:",id:"arguments-61",level:4},{value:"<code>@onPaymentFailed</code>",id:"onpaymentfailed",level:3},{value:"Arguments:",id:"arguments-62",level:4},{value:"<code>@onAnyBotDrag</code>",id:"onanybotdrag",level:3},{value:"Arguments:",id:"arguments-63",level:4},{value:"<code>@onAnyBotDragging</code>",id:"onanybotdragging",level:3},{value:"Arguments:",id:"arguments-64",level:4},{value:"<code>@onAnyBotDrop</code>",id:"onanybotdrop",level:3},{value:"Arguments:",id:"arguments-65",level:4},{value:"<code>@onAnyBotDropEnter</code>",id:"onanybotdropenter",level:3},{value:"Arguments:",id:"arguments-66",level:4},{value:"<code>@onAnyBotDropExit</code>",id:"onanybotdropexit",level:3},{value:"Arguments:",id:"arguments-67",level:4},{value:"<code>@onAnyListen</code>",id:"onanylisten",level:3},{value:"Arguments:",id:"arguments-68",level:4},{value:"<code>@onAnyMaxLODEnter</code>",id:"onanymaxlodenter",level:3},{value:"Arguments:",id:"arguments-69",level:4},{value:"<code>@onAnyMinLODEnter</code>",id:"onanyminlodenter",level:3},{value:"Arguments:",id:"arguments-70",level:4},{value:"<code>@onAnyMaxLODExit</code>",id:"onanymaxlodexit",level:3},{value:"Arguments:",id:"arguments-71",level:4},{value:"<code>@onAnyMinLODExit</code>",id:"onanyminlodexit",level:3},{value:"Arguments:",id:"arguments-72",level:4},{value:"<code>@onAnyFocusEnter</code>",id:"onanyfocusenter",level:3},{value:"Arguments:",id:"arguments-73",level:4},{value:"<code>@onAnyFocusExit</code>",id:"onanyfocusexit",level:3},{value:"Arguments:",id:"arguments-74",level:4},{value:"<code>@onBeginAudioRecording</code>",id:"onbeginaudiorecording",level:3},{value:"<code>@onAudioChunk</code>",id:"onaudiochunk",level:3},{value:"Arguments:",id:"arguments-75",level:4},{value:"<code>@onEndAudioRecording</code>",id:"onendaudiorecording",level:3},{value:"Arguments:",id:"arguments-76",level:4},{value:"<code>@onEnterAR</code>",id:"onenterar",level:3},{value:"<code>@onExitAR</code>",id:"onexitar",level:3},{value:"<code>@onEnterVR</code>",id:"onentervr",level:3},{value:"<code>@onExitVR</code>",id:"onexitvr",level:3},{value:"<code>@onWebhook</code>",id:"onwebhook",level:3},{value:"Arguments:",id:"arguments-77",level:4},{value:"Return Value:",id:"return-value",level:4},{value:"Examples:",id:"examples",level:4},{value:"<code>@onAnyAction</code>",id:"onanyaction",level:3},{value:"Arguments:",id:"arguments-78",level:4},{value:"<code>@onSheetTagClick</code>",id:"onsheettagclick",level:3},{value:"Arguments:",id:"arguments-79",level:4},{value:"<code>@onSheetBotClick</code>",id:"onsheetbotclick",level:3},{value:"Arguments:",id:"arguments-80",level:4},{value:"<code>@onSheetBotIDClick</code>",id:"onsheetbotidclick",level:3},{value:"Arguments:",id:"arguments-81",level:4},{value:"<code>@onMeetLoaded</code>",id:"onmeetloaded",level:3},{value:"Arguments:",id:"arguments-82",level:4},{value:"<code>@onMeetLeave</code>",id:"onmeetleave",level:3},{value:"Arguments:",id:"arguments-83",level:4},{value:"<code>@onMeetEntered</code>",id:"onmeetentered",level:3},{value:"Arguments:",id:"arguments-84",level:4},{value:"<code>@onMeetExited</code>",id:"onmeetexited",level:3},{value:"Arguments:",id:"arguments-85",level:4},{value:"<code>@onMeetRecordingLinkAvailable</code>",id:"onmeetrecordinglinkavailable",level:3},{value:"Arguments:",id:"arguments-86",level:4},{value:"<code>@onRemoteData</code>",id:"onremotedata",level:3},{value:"Arguments:",id:"arguments-87",level:4},{value:"Examples:",id:"examples-1",level:4},{value:"<code>@onRemoteJoined</code>",id:"onremotejoined",level:3},{value:"Arguments:",id:"arguments-88",level:4},{value:"Examples:",id:"examples-2",level:4},{value:"<code>@onRemoteLeave</code>",id:"onremoteleave",level:3},{value:"Arguments:",id:"arguments-89",level:4},{value:"Examples:",id:"examples-3",level:4},{value:"<code>@onAnyBotsAdded</code>",id:"onanybotsadded",level:3},{value:"Arguments:",id:"arguments-90",level:4},{value:"<code>@onAnyBotsRemoved</code>",id:"onanybotsremoved",level:3},{value:"Arguments:",id:"arguments-91",level:4},{value:"<code>@onAnyBotsChanged</code>",id:"onanybotschanged",level:3},{value:"Arguments:",id:"arguments-92",level:4},{value:"<code>@onError</code>",id:"onerror",level:3},{value:"Arguments:",id:"arguments-93",level:4},{value:"<code>@onRoomJoined</code>",id:"onroomjoined",level:3},{value:"Arguments:",id:"arguments-94",level:4},{value:"<code>@onRoomLeave</code>",id:"onroomleave",level:3},{value:"Arguments:",id:"arguments-95",level:4},{value:"<code>@onRoomStreaming</code>",id:"onroomstreaming",level:3},{value:"Arguments:",id:"arguments-96",level:4},{value:"<code>@onRoomStreamLost</code>",id:"onroomstreamlost",level:3},{value:"Arguments:",id:"arguments-97",level:4},{value:"<code>@onRoomTrackSubscribed</code>",id:"onroomtracksubscribed",level:3},{value:"Arguments:",id:"arguments-98",level:4},{value:"<code>@onRoomTrackUnsubscribed</code>",id:"onroomtrackunsubscribed",level:3},{value:"Arguments:",id:"arguments-99",level:4},{value:"<code>@onRoomSpeakersChanged</code>",id:"onroomspeakerschanged",level:3},{value:"Arguments:",id:"arguments-100",level:4},{value:"<code>@onRoomRemoteJoined</code>",id:"onroomremotejoined",level:3},{value:"Arguments:",id:"arguments-101",level:4},{value:"<code>@onRoomRemoteLeave</code>",id:"onroomremoteleave",level:3},{value:"Arguments:",id:"arguments-102",level:4},{value:"<code>@onRoomOptionsChanged</code>",id:"onroomoptionschanged",level:3},{value:"Arguments:",id:"arguments-103",level:4},{value:"<code>@onAnyFormAnimationStarted</code>",id:"onanyformanimationstarted",level:3},{value:"Arguments:",id:"arguments-104",level:4},{value:"<code>@onAnyFormAnimationStopped</code>",id:"onanyformanimationstopped",level:3},{value:"Arguments:",id:"arguments-105",level:4},{value:"<code>@onAnyFormAnimationLooped</code>",id:"onanyformanimationlooped",level:3},{value:"Arguments:",id:"arguments-106",level:4},{value:"<code>@onAnyFormAnimationFinished</code>",id:"onanyformanimationfinished",level:3},{value:"Arguments:",id:"arguments-107",level:4},{value:"<code>@onDocumentAvailable</code>",id:"ondocumentavailable",level:3},{value:"Arguments:",id:"arguments-108",level:4},{value:"<code>@onSpaceMaxSizeReached</code>",id:"onspacemaxsizereached",level:3},{value:"Arguments:",id:"arguments-109",level:4},{value:"<code>@onSpaceRateLimitExceeded</code>",id:"onspaceratelimitexceeded",level:3},{value:"Arguments:",id:"arguments-110",level:4},{value:"<code>@onCollaborationEnabled</code>",id:"oncollaborationenabled",level:3},{value:"<code>@onAllowCollaborationUpgrade</code>",id:"onallowcollaborationupgrade",level:3},{value:"<code>@onDisallowCollaborationUpgrade</code>",id:"ondisallowcollaborationupgrade",level:3}];function h(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:'Listen tags are tags that can receive shouts and whispers from other bots and actions that happen from the user.\nTo create a listen tag, you make a normal tag and enter a "@" as the first character of the tag\'s value.'}),"\n",(0,o.jsxs)(t.p,{children:["Each listen tag has some predefined variables that can be used. You can read about those ",(0,o.jsx)(t.a,{href:"/variables",children:"here"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"whisper-tags",children:"Whisper Tags"}),"\n",(0,o.jsx)(t.p,{children:"Whispers are shouts that are sent to specific bots instead of all bots."}),"\n",(0,o.jsx)(t.h3,{id:"oncreate",children:(0,o.jsx)(t.code,{children:"@onCreate"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to a bot when it is first created."}),"\n",(0,o.jsx)(t.h3,{id:"ondestroy",children:(0,o.jsx)(t.code,{children:"@onDestroy"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to a bot when it is being destroyed."}),"\n",(0,o.jsx)(t.h3,{id:"onmoddrop",children:(0,o.jsx)(t.code,{children:"@onModDrop"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent to a bot that a mod was dropped on.\nIf a custom ",(0,o.jsx)(t.code,{children:"@onModDrop"})," is not specified, then the mod will be applied automatically.\nIf a custom ",(0,o.jsx)(t.code,{children:"@onModDrop"})," is specified, then the mod needs to be applied manually via ",(0,o.jsx)(a.vm,{action:"applyMod(bot, ...mods)"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"interface Mod {\n  [tag: string]: any;\n}\n\nlet that: {\n  mod: Mod\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmoddropenter",children:(0,o.jsx)(t.code,{children:"@onModDropEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to the bot that a mod started to be dragged onto."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-1",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  mod: Mod,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmoddropexit",children:(0,o.jsx)(t.code,{children:"@onModDropExit"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to the bot that a mod was just dragged off of."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-2",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  mod: Mod,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onclick",children:(0,o.jsx)(t.code,{children:"@onClick"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to the bot that was clicked."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-3",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  face: 'left' | 'right' | 'front' | 'back' | 'top' | 'bottom',\n  dimension: string,\n  uv: Vector2\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onkeyclick",children:(0,o.jsx)(t.code,{children:"@onKeyClick"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to the bot when a key is clicked on it."}),"\n",(0,o.jsxs)(t.p,{children:["This event will only be available for bots that have their ",(0,o.jsx)(a.k1,{tag:"form"})," set to ",(0,o.jsx)(t.code,{children:"keyboard"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-4",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  key: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onpointerenter",children:(0,o.jsx)(t.code,{children:"@onPointerEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to a bot when the mouse cursor starts to hover over it."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-5",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onpointerexit",children:(0,o.jsx)(t.code,{children:"@onPointerExit"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to a bot when the mouse cursor stops hovering over it."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-6",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onpointerdown",children:(0,o.jsx)(t.code,{children:"@onPointerDown"})}),"\n",(0,o.jsx)(t.p,{children:"A whipser that is sent to a bot when the user starts clicking it."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-7",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onpointerup",children:(0,o.jsx)(t.code,{children:"@onPointerUp"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to a bot when the user stops clicking it."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-8",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ondrag",children:(0,o.jsx)(t.code,{children:"@onDrag"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot is starting to be dragged."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-9",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  face: 'left' | 'right' | 'front' | 'back' | 'top' | 'bottom',\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  },\n  uv: Vector2\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ondragging",children:(0,o.jsx)(t.code,{children:"@onDragging"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever a bot would be moved while dragging.\nNote that this whisper is only sent for drag operations that have called ",(0,o.jsx)(a.vm,{action:"os.enableCustomDragging()"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-10",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  to: {\n    x: number,\n    y: number,\n    bot: Bot,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ondrop",children:(0,o.jsx)(t.code,{children:"@onDrop"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot has been dropped after being dragged.\nThe whisper is sent to both the bot that was dropped and the bot that was dropped on."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-11",children:"Arguments"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  to: {\n    bot: Bot,\n    x: number,\n    y: number,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ondropenter",children:(0,o.jsx)(t.code,{children:"@onDropEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to both bots when a bot is dragged onto another bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-12",children:"Arguments"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  dragBot: Bot,\n  to: {\n    bot: Bot,\n    x: number,\n    y: number,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ondropexit",children:(0,o.jsx)(t.code,{children:"@onDropExit"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent to both bots when a bot is dragged off of another bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-13",children:"Arguments"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  dragBot: Bot,\n  to: {\n    bot: Bot,\n    x: number,\n    y: number,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onsaveinput",children:(0,o.jsx)(t.code,{children:"@onSaveInput"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent when the input box for a bot has been changed by the user."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-14",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that = null;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oncloseinput",children:(0,o.jsx)(t.code,{children:"@onCloseInput"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent when the input box for a bot has been closed by the user."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-15",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that = null;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onlisten",children:(0,o.jsx)(t.code,{children:"@onListen"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever this bot receives a whisper or shout."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-16",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  name: string,\n  that: any,\n  targets: Bot[],\n  listeners: Bot[],\n  responses: any[]\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmaxlodenter",children:(0,o.jsx)(t.code,{children:"@onMaxLODEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot enters its maximum Level-Of-Detail."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-17",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onminlodenter",children:(0,o.jsx)(t.code,{children:"@onMinLODEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot enters its minimum Level-Of-Detail."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-18",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmaxlodexit",children:(0,o.jsx)(t.code,{children:"@onMaxLODExit"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot exits its maximum Level-Of-Detail."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-19",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onminlodexit",children:(0,o.jsx)(t.code,{children:"@onMinLODExit"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot exits its minimum Level-Of-Detail."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-20",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onfocusenter",children:(0,o.jsx)(t.code,{children:"@onFocusEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot starts being focused by the player."}),"\n",(0,o.jsx)(t.p,{children:"Focus is when the bot is in the center of the screen."}),"\n",(0,o.jsxs)(t.p,{children:["Only sent if ",(0,o.jsx)(a.k1,{tag:"focusable"})," is true."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-21",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onfocusexit",children:(0,o.jsx)(t.code,{children:"@onFocusExit"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever a bot stops being focused by the player."}),"\n",(0,o.jsx)(t.p,{children:"Focus is when the bot is in the center of the screen."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-22",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oninputtyping",children:(0,o.jsx)(t.code,{children:"@onInputTyping"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever the player is typing in the menu bot's input box.\nOnly sent for bots that are in a menu and have ",(0,o.jsx)(a.k1,{tag:"form"})," set to ",(0,o.jsx)(t.code,{children:"input"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-23",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  text: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onsubmit",children:(0,o.jsx)(t.code,{children:"@onSubmit"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent whenever the player submits the text in the menu bot's input box.\nThis can happen by pressing enter while there is text in the box or by clicking the send button on the right side of the box."}),"\n",(0,o.jsxs)(t.p,{children:["Only sent for bots that are in a menu and have ",(0,o.jsx)(a.k1,{tag:"form"})," set to ",(0,o.jsx)(t.code,{children:"input"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-24",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  text: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onsetupapp",children:(0,o.jsx)(t.code,{children:"@onSetupApp"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent when a ",(0,o.jsx)(t.a,{href:"/actions/os/app",children:"custom app"})," has been setup.\nCalled when ",(0,o.jsx)(a.vm,{action:"os.registerApp(appId, bot)"})," has completed its work."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-25",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The HTML document that has been setup for the app\n     * See https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument\n     */\n    document: Document\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onbotadded",children:(0,o.jsx)(t.code,{children:"@onBotAdded"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent when the bot is added to the local inst."}),"\n",(0,o.jsxs)(t.p,{children:["Unlike ",(0,o.jsx)(a.k1,{tag:"@onCreate"}),", this listen tag is triggered whenever the bot as been added to the current device's inst, even if the bot has already been created.\nAn example of this happening is when you first load an inst. Even though all the bots have already been created, they still need to be added to the inst in order for you to interact with them."]}),"\n",(0,o.jsxs)(t.p,{children:["Note that this listen tag is triggered after executing scripts have finished running. This means that if a script creates multiple bots, ",(0,o.jsx)(t.code,{children:"@onBotAdded"})," will be triggered after all the bots have been created.\nThis is in contrast to ",(0,o.jsx)(a.k1,{tag:"@onCreate"})," which is triggered immediately after the bot has been created."]}),"\n",(0,o.jsxs)(t.p,{children:["Also note that this listen tag can be triggered before ",(0,o.jsx)(a.k1,{tag:"@onInstJoined"}),". This means that it is possible for bots in other spaces to not be available when this listener is triggered."]}),"\n",(0,o.jsxs)(t.p,{children:["There is no ",(0,o.jsx)(t.code,{children:"that"})," argument for this listen tag."]}),"\n",(0,o.jsx)(t.h3,{id:"onbotchanged",children:(0,o.jsx)(t.code,{children:"@onBotChanged"})}),"\n",(0,o.jsx)(t.p,{children:"A whisper that is sent when a tag on the bot is updated."}),"\n",(0,o.jsx)(t.p,{children:"This listen tag is triggered whenever the bot has been updated in the current device's inst, even if the bot was not updated locally.\nAn example of this happening is when another player changes a tag in the sheet portal. Even though the change was made on their device, it will show up on the current device."}),"\n",(0,o.jsxs)(t.p,{children:["Note that this listen tag is triggered after executing scripts have finished running. This means that if a script updates the same tag multiple times, ",(0,o.jsx)(t.code,{children:"@onBotChanged"})," will still only be triggered once.\nThis is in contrast to ",(0,o.jsx)(a.k1,{tag:"@onCreate"})," which is triggered immediately after the bot has been created."]}),"\n",(0,o.jsxs)(t.p,{children:["Also note that this listen tag can be triggered before ",(0,o.jsx)(a.k1,{tag:"@onInstJoined"}),". This means that it is possible for bots in other spaces to not be available when this listener is triggered."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-26",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The list of tags that were changed on the bot.\n     */\n    tags: string[]\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"groupnamestatenameonenter",children:(0,o.jsx)(t.code,{children:"@[groupName][stateName]OnEnter"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever the ",(0,o.jsx)(t.code,{children:"[groupName]"})," tag is set to ",(0,o.jsx)(t.code,{children:"[stateName]"})," via the ",(0,o.jsx)(a.vm,{action:"changeState(bot, stateName, groupName?)"})," function."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-27",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  /**\n   * The stateName that the bot is coming from.\n   */\n  from: string,\n\n  /**\n   * The stateName that the bot is going to.\n   */\n  to: string,\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"groupnamestatenameonexit",children:(0,o.jsx)(t.code,{children:"@[groupName][stateName]OnExit"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever the ",(0,o.jsx)(t.code,{children:"[groupName]"})," tag is changed from ",(0,o.jsx)(t.code,{children:"[stateName]"})," via the ",(0,o.jsx)(a.vm,{action:"changeState(bot, stateName, groupName?)"})," function."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-28",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  /**\n   * The stateName that the bot is coming from.\n   */\n  from: string,\n\n  /**\n   * The stateName that the bot is going to.\n   */\n  to: string,\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onformanimationstarted",children:(0,o.jsx)(t.code,{children:"@onFormAnimationStarted"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever an animation is started via the ",(0,o.jsx)(a.vm,{action:"os.startFormAnimation(botOrBots, nameOrIndex, options?)"})," function."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-29",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The animation that was started.\n     */\n    animation: string | number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onformanimationstopped",children:(0,o.jsx)(t.code,{children:"@onFormAnimationStopped"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever an animation is stopped via the ",(0,o.jsx)(a.vm,{action:"os.stopFormAnimation(botOrBots, options?)"})," function."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-30",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The animation that was stopped.\n     */\n    animation: string | number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onformanimationlooped",children:(0,o.jsx)(t.code,{children:"@onFormAnimationLooped"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever an animation finishes and starts to repeat based on the loop rules given to ",(0,o.jsx)(a.vm,{action:"os.startFormAnimation(botOrBots, nameOrIndex, options?)"})," in the options."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-31",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The animation that was looped.\n     */\n    animation: string | number;\n\n    /**\n     * The number of loops that have been completed.\n     */\n    loopCount: number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onformanimationfinished",children:(0,o.jsx)(t.code,{children:"@onFormAnimationFinished"})}),"\n",(0,o.jsxs)(t.p,{children:["A whisper that is sent whenever an animation that was started by ",(0,o.jsx)(a.vm,{action:"os.startFormAnimation(botOrBots, nameOrIndex, options?)"})," stops.\nThis whisper is sent both for when the animation is manually stopped (by calling ",(0,o.jsx)(a.vm,{action:"os.stopFormAnimation(botOrBots, options?)"}),") and also when it stops because it shouldn't repeat."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-32",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The animation that finished.\n     */\n    animation: string | number;\n};\n"})}),"\n",(0,o.jsx)(t.h2,{id:"shout-tags",children:"Shout Tags"}),"\n",(0,o.jsx)(t.p,{children:"Shouts are events which are sent to all bots."}),"\n",(0,o.jsx)(t.h3,{id:"onanycreate",children:(0,o.jsx)(t.code,{children:"@onAnyCreate"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots when a bot is created. Sent immediately after ",(0,o.jsx)(a.k1,{tag:"@onCreate"})," is sent."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-33",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotclicked",children:(0,o.jsx)(t.code,{children:"@onAnyBotClicked"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when a bot is clicked."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-34",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  face: 'left' | 'right' | 'front' | 'back' | 'top' | 'bottom',\n  dimension: string,\n  uv: Vector2\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotpointerenter",children:(0,o.jsx)(t.code,{children:"@onAnyBotPointerEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the mouse cursor starts to hover over a bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-35",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotpointerexit",children:(0,o.jsx)(t.code,{children:"@onAnyBotPointerExit"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the mouse cursor stops hovering over a bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-36",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string1\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotpointerdown",children:(0,o.jsx)(t.code,{children:"@onAnyBotPointerDown"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent all bots when the user starts clicking a bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-37",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotpointerup",children:(0,o.jsx)(t.code,{children:"@onAnyBotPointerUp"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the user stops clicking a bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-38",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onchat",children:(0,o.jsx)(t.code,{children:"@onChat"})}),"\n",(0,o.jsx)(t.p,{children:'A shout that is sent to all bots when the player sends a chat message.\nChat messages can be sent when the player presses the Enter key while writing a message or by clicking/tapping the "Send Message" button to the right of the chat bar.'}),"\n",(0,o.jsx)(t.h4,{id:"arguments-39",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  message: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onchattyping",children:(0,o.jsx)(t.code,{children:"@onChatTyping"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the player changes the text in the chat bar.\nOnly triggered when the chat bar is visible."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-40",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  message: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onfileupload",children:(0,o.jsx)(t.code,{children:"@onFileUpload"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the user drags a file into the window."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-41",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  file: {\n    // The name of the file. Includes the file extension.\n    name: string;\n\n    // The size of the file in bytes.\n    size: number;\n\n    // The data in the file.\n    // If the file is a text file, the data will be a string.\n    // If the file is not a text file, then the data will be an ArrayBuffer.\n    //\n    // Text files have one of the following extensions:\n    // .txt\n    // .json\n    // .md\n    // .aux\n    // .html\n    // .js\n    // .ts\n    // All the other file extensions map to an ArrayBuffer\n    data: string | ArrayBuffer;\n\n    // The MIME type of the file.\n    // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types for more information.\n    mimeType: string;\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ongridclick",children:(0,o.jsx)(t.code,{children:"@onGridClick"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the user clicks on empty space."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-42",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  position: {\n    x: number,\n    y: number\n  },\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ongriddown",children:(0,o.jsx)(t.code,{children:"@onGridDown"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the user starts clicking on empty space."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-43",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  position: {\n    x: number,\n    y: number\n  },\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ongridup",children:(0,o.jsx)(t.code,{children:"@onGridUp"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the user stops clicking on empty space."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-44",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  position: {\n    x: number,\n    y: number\n  },\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onportalchanged",children:(0,o.jsx)(t.code,{children:"@onPortalChanged"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when a portal changes on the config bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-45",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  portal: string;\n  dimension: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onbarcodescanned",children:(0,o.jsx)(t.code,{children:"@onBarcodeScanned"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the player scans a barcode."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-46",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: string;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onbarcodescanneropened",children:(0,o.jsx)(t.code,{children:"@onBarcodeScannerOpened"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the barcode scanner is opened."}),"\n",(0,o.jsx)(t.h3,{id:"onbarcodescannerclosed",children:(0,o.jsx)(t.code,{children:"@onBarcodeScannerClosed"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the barcode scanner is closed."}),"\n",(0,o.jsx)(t.h3,{id:"onqrcodescanned",children:(0,o.jsx)(t.code,{children:"@onQRCodeScanned"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when a QR Code is scanned."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-47",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: string;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onqrcodescanneropened",children:(0,o.jsx)(t.code,{children:"@onQRCodeScannerOpened"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the QR Code Scanner is opened."}),"\n",(0,o.jsx)(t.h3,{id:"onqrcodescannerclosed",children:(0,o.jsx)(t.code,{children:"@onQRCodeScannerClosed"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the QR Code Scanner is closed."}),"\n",(0,o.jsx)(t.h3,{id:"onimageclassified",children:(0,o.jsx)(t.code,{children:"@onImageClassified"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when an image has been classified."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-48",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The model that the classifier is currently operating on.\n     */\n    model: {\n        /**\n         * The modelUrl that was provided to open the classifier.\n         */\n        modelUrl?: string;\n\n        /**\n         * The modelJsonUrl that was provided to open the classifier.\n         */\n        modelJsonUrl?: string;\n\n        /**\n         * The modelMetadataUrl that was provided to open the classifier.\n         */\n        modelMetadataUrl?: string;\n\n        /**\n         * The cameraType that was provided to open the classifier.\n         */\n        cameraType?: string;\n\n        /**\n         * The names of the categories that the loaded model contains.\n         */\n        classLabels: string[];\n    };\n\n    /**\n     * The list of probablities that was produced by the classifier.\n     */\n    prediction: {\n        /**\n         * The name of the class name.\n         */\n        className: string;\n\n        /**\n         * The probability (between 0 and 1) that the image belongs to this category.\n         * All of the probabilities added together will equal (or be really close to) 1.\n         */\n        probability: number;\n    }[];\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onimageclassifieropened",children:(0,o.jsx)(t.code,{children:"@onImageClassifierOpened"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the image classifier is opened."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-49",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The modelUrl that was provided to open the classifier.\n     */\n    modelUrl?: string;\n\n    /**\n     * The modelJsonUrl that was provided to open the classifier.\n     */\n    modelJsonUrl?: string;\n\n    /**\n     * The modelMetadataUrl that was provided to open the classifier.\n     */\n    modelMetadataUrl?: string;\n\n    /**\n     * The cameraType that was provided to open the classifier.\n     */\n    cameraType?: string;\n\n    /**\n     * The names of the categories that the loaded model contains.\n     */\n    classLabels: string[];\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onimageclassifierclosed",children:(0,o.jsx)(t.code,{children:"@onImageClassifierClosed"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the image classifier is closed."}),"\n",(0,o.jsx)(t.h3,{id:"onphotocaptured",children:(0,o.jsx)(t.code,{children:"@onPhotoCaptured"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when a picture has been captured from the photo camera."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-50",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    photo: {\n        /**\n         * The width of the captured photo in pixels.\n         */\n        width: number;\n\n        /**\n         * The height of the captured photo in pixels.\n         */\n        height: number;\n\n        /**\n         * The data of the captured photo.\n         */\n        data: Blob;\n    }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onphotocameraopened",children:(0,o.jsx)(t.code,{children:"@onPhotoCameraOpened"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the photo camera is opened."}),"\n",(0,o.jsx)(t.h3,{id:"onphotocameraclosed",children:(0,o.jsx)(t.code,{children:"@onPhotoCameraClosed"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when the photo camera is closed."}),"\n",(0,o.jsx)(t.h3,{id:"ontapcode",children:(0,o.jsx)(t.code,{children:"@onTapCode"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots whenever a 4-digit tap code is entered."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-51",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: string;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onkeydown",children:(0,o.jsx)(t.code,{children:"@onKeyDown"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots whenever the user starts pressing a key."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-52",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  /**\n   * The list of keys that were pressed.\n   */\n  keys: string[]\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onkeyup",children:(0,o.jsx)(t.code,{children:"@onKeyUp"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots whenever the user stops pressing a key."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-53",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  /**\n   * The list of keys that were released.\n   */\n  keys: string[]\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onkeyrepeat",children:(0,o.jsx)(t.code,{children:"@onKeyRepeat"})}),"\n",(0,o.jsx)(t.p,{children:'A shout that is sent to all bots whenever the user holds down a key and it automatically fires "repeated key event".\n(This is like when you hold down the "a" key and then the computer starts continually typing "a" characters until you stop holding the key)'}),"\n",(0,o.jsx)(t.h4,{id:"arguments-54",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  /**\n   * The list of keys that were held.\n   */\n  keys: string[]\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oninstjoined",children:(0,o.jsx)(t.code,{children:"@onInstJoined"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent when a inst is loaded.\nAn inst is considered loaded once all the bots in each space have been added (See ",(0,o.jsx)(a.k1,{tag:"@onBotAdded"}),")."]}),"\n",(0,o.jsx)(t.p,{children:"Sent to every inst that is loaded."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-55",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  inst: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oninstleave",children:(0,o.jsx)(t.code,{children:"@onInstLeave"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a inst is unloaded.\nSent to every inst that is loaded."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-56",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  inst: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oninststreaming",children:(0,o.jsx)(t.code,{children:"@onInstStreaming"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a inst is connected and fully synced."}),"\n",(0,o.jsx)(t.p,{children:"Note that this can occur multiple times throughout the lifetime of a session because the player can lose and regain its connection to the inst."}),"\n",(0,o.jsx)(t.p,{children:"Sent to every inst that is loaded."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-57",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  inst: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oninststreamlost",children:(0,o.jsx)(t.code,{children:"@onInstStreamLost"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a inst has been temporarily disconnected from the server."}),"\n",(0,o.jsx)(t.p,{children:"Note that this can occur multiple times throughout the lifetime of a session because the player can lose and regain its connection to the inst."}),"\n",(0,o.jsx)(t.p,{children:"Sent to every inst that is loaded."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-58",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  inst: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oncheckout",children:(0,o.jsx)(t.code,{children:"@onCheckout"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when the user submits their credit card info to purchase something."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-59",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  token: string, \n  productId: string, \n  user: { \n    username: string, \n    device: string, \n    token: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onpaste",children:(0,o.jsx)(t.code,{children:"@onPaste"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when some text is pasted into the server."}),"\n",(0,o.jsxs)(t.p,{children:["This happens by pressing ",(0,o.jsx)("kbd",{children:"Ctrl"}),"+",(0,o.jsx)("kbd",{children:"V"})," or ",(0,o.jsx)("kbd",{children:"Cmd"}),"+",(0,o.jsx)("kbd",{children:"V"})," while something is in your clipboard."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-60",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  text: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onpaymentsuccessful",children:(0,o.jsx)(t.code,{children:"@onPaymentSuccessful"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when payment has been approved for a checkout."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-61",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  /**\n   * The bot that was created for the transaction.\n   */\n  bot: Bot,\n  charge: any,\n  extra: any\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onpaymentfailed",children:(0,o.jsx)(t.code,{children:"@onPaymentFailed"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when payment has been rejected for a checkout."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-62",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  /**\n   * The bot that was created for the transaction.\n   */\n  bot: Bot,\n  error: any,\n  extra: any\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotdrag",children:(0,o.jsx)(t.code,{children:"@onAnyBotDrag"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot starts to be dragged."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-63",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  face: 'left' | 'right' | 'front' | 'back' | 'top' | 'bottom',\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  },\n  uv: Vector2\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotdragging",children:(0,o.jsx)(t.code,{children:"@onAnyBotDragging"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever a bot would be moved while dragging.\nNote that this whisper is only sent for drag operations that have called ",(0,o.jsx)(a.vm,{action:"os.enableCustomDragging()"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-64",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  to: {\n    bot: Bot,\n    x: number,\n    y: number,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotdrop",children:(0,o.jsx)(t.code,{children:"@onAnyBotDrop"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot is dropped after being dragged."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-65",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  to: {\n    bot: Bot,\n    x: number,\n    y: number,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotdropenter",children:(0,o.jsx)(t.code,{children:"@onAnyBotDropEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot is dragged onto another bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-66",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  dragBot: Bot,\n  to: {\n    bot: Bot,\n    x: number,\n    y: number,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotdropexit",children:(0,o.jsx)(t.code,{children:"@onAnyBotDropExit"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot is dragged off of another bot."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-67",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  dragBot: Bot,\n  to: {\n    bot: Bot,\n    x: number,\n    y: number,\n    dimension: string\n  },\n  from: {\n    x: number,\n    y: number,\n    dimension: string\n  }\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanylisten",children:(0,o.jsx)(t.code,{children:"@onAnyListen"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a whisper or shout is issued."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-68",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  name: string,\n  that: any,\n  targets: Bot[],\n  listeners: Bot[],\n  responses: any[]\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanymaxlodenter",children:(0,o.jsx)(t.code,{children:"@onAnyMaxLODEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot enters its maximum Level-Of-Detail."}),"\n",(0,o.jsxs)(t.p,{children:["Only sent for bots that have one of ",(0,o.jsx)(a.k1,{tag:"@onMaxLODEnter"}),",  ",(0,o.jsx)(a.k1,{tag:"@onMaxLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODEnter"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"maxLODThreshold"})," or ",(0,o.jsx)(a.k1,{tag:"minLODThreshold"})," specified."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-69",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyminlodenter",children:(0,o.jsx)(t.code,{children:"@onAnyMinLODEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot enters its minimum Level-Of-Detail."}),"\n",(0,o.jsxs)(t.p,{children:["Only sent for bots that have one of ",(0,o.jsx)(a.k1,{tag:"@onMaxLODEnter"}),", ",(0,o.jsx)(a.k1,{tag:"@onMaxLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODEnter"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"maxLODThreshold"})," or ",(0,o.jsx)(a.k1,{tag:"minLODThreshold"})," specified."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-70",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanymaxlodexit",children:(0,o.jsx)(t.code,{children:"@onAnyMaxLODExit"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot exits its maximum Level-Of-Detail."}),"\n",(0,o.jsxs)(t.p,{children:["Only sent for bots that have one of ",(0,o.jsx)(a.k1,{tag:"@onMaxLODEnter"}),", ",(0,o.jsx)(a.k1,{tag:"@onMaxLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODEnter"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"maxLODThreshold"})," or ",(0,o.jsx)(a.k1,{tag:"minLODThreshold"})," specified."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-71",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyminlodexit",children:(0,o.jsx)(t.code,{children:"@onAnyMinLODExit"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot exits its minimum Level-Of-Detail."}),"\n",(0,o.jsxs)(t.p,{children:["Only sent for bots that have one of ",(0,o.jsx)(a.k1,{tag:"@onMaxLODEnter"}),", ",(0,o.jsx)(a.k1,{tag:"@onMaxLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODEnter"}),", ",(0,o.jsx)(a.k1,{tag:"@onMinLODExit"}),", ",(0,o.jsx)(a.k1,{tag:"maxLODThreshold"})," or ",(0,o.jsx)(a.k1,{tag:"minLODThreshold"})," specified."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-72",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyfocusenter",children:(0,o.jsx)(t.code,{children:"@onAnyFocusEnter"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot starts being focused by the player."}),"\n",(0,o.jsx)(t.p,{children:"Focus is when the bot is in the center of the screen."}),"\n",(0,o.jsxs)(t.p,{children:["Only sent if ",(0,o.jsx)(a.k1,{tag:"focusable"})," is true."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-73",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyfocusexit",children:(0,o.jsx)(t.code,{children:"@onAnyFocusExit"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a bot stops being focused by the player."}),"\n",(0,o.jsx)(t.p,{children:"Focus is when the bot is in the center of the screen."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-74",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  bot: Bot,\n  dimension: string\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onbeginaudiorecording",children:(0,o.jsx)(t.code,{children:"@onBeginAudioRecording"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever audio recording starts."}),"\n",(0,o.jsx)(t.p,{children:"There are no arguments with this listener."}),"\n",(0,o.jsx)(t.h3,{id:"onaudiochunk",children:(0,o.jsx)(t.code,{children:"@onAudioChunk"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever a piece of audio is prepared for streaming.\nOnly called when ",(0,o.jsx)(a.vm,{action:"os.beginAudioRecording(options?)"})," is called with ",(0,o.jsx)(t.code,{children:"stream"})," set to ",(0,o.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-75",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: Blob;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onendaudiorecording",children:(0,o.jsx)(t.code,{children:"@onEndAudioRecording"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever audio recording stops.\nIf the data was streamed, ",(0,o.jsx)(t.code,{children:"that"})," is ",(0,o.jsx)(t.code,{children:"null"}),". Otherwise, ",(0,o.jsx)(t.code,{children:"that"})," is a ",(0,o.jsx)(t.code,{children:"Blob"})," object that contains the recorded data."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-76",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: Blob;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onenterar",children:(0,o.jsx)(t.code,{children:"@onEnterAR"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever the device enters augmented reality mode.",(0,o.jsx)(t.br,{}),"\n","You can enter AR by calling ",(0,o.jsx)(a.vm,{action:"os.enableAR(options?)"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"There are no arguments with this listener."}),"\n",(0,o.jsx)(t.h3,{id:"onexitar",children:(0,o.jsx)(t.code,{children:"@onExitAR"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever the device exits augmented reality mode.",(0,o.jsx)(t.br,{}),"\n","You can exit AR by calling ",(0,o.jsx)(a.vm,{action:"os.disableAR()"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"There are no arguments with this listener."}),"\n",(0,o.jsx)(t.h3,{id:"onentervr",children:(0,o.jsx)(t.code,{children:"@onEnterVR"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever the device enters virtual reality mode.",(0,o.jsx)(t.br,{}),"\n","You can exit VR by calling ",(0,o.jsx)(a.vm,{action:"os.enterVR(options?)"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"There are no arguments with this listener."}),"\n",(0,o.jsx)(t.h3,{id:"onexitvr",children:(0,o.jsx)(t.code,{children:"@onExitVR"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever the device exits virtual reality mode.",(0,o.jsx)(t.br,{}),"\n","You can exit VR by calling ",(0,o.jsx)(a.vm,{action:"os.disableVR()"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"There are no arguments with this listener."}),"\n",(0,o.jsx)(t.h3,{id:"onwebhook",children:(0,o.jsx)(t.code,{children:"@onWebhook"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a webhook is received.\nIf data is returned, the first result will be used as the HTTP response."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-77",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  method: string,\n  url: string,\n  data: any,\n  headers: any\n};\n"})}),"\n",(0,o.jsx)(t.h4,{id:"return-value",children:"Return Value:"}),"\n",(0,o.jsx)(t.p,{children:"If an object is returned, it is expected to have the following form:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let response: {\n    headers?: {\n        [key: string]: any\n    },\n    status?: number,\n    data: any,\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"headers"})," property is an object that specifies the ",(0,o.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers",children:"HTTP headers"})," that should be set on the response.\nEach property is a header name and the value is the value set on the header."]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"status"})," property is the numerical ",(0,o.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",children:"status code"})," that should be set on the response. If omitted, then status code 200 will be used."]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"data"})," property is the data that should be included in the response body."]}),"\n",(0,o.jsx)(t.h4,{id:"examples",children:"Examples:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Return an arbitrary string of data."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"return 'hello from webhook!';\n"})}),"\n",(0,o.jsxs)(t.ol,{start:"2",children:["\n",(0,o.jsx)(t.li,{children:"Return a response with a custom header."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"return {\n    headers: {\n        'Content-Type': 'text/plain',\n        MyCustomHeader: 'custom value'\n    },\n    data: 'hello from webhook!'\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyaction",children:(0,o.jsx)(t.code,{children:"@onAnyAction"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever an action happens."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-78",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n  action: any\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onsheettagclick",children:(0,o.jsx)(t.code,{children:"@onSheetTagClick"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a tag name is clicked in the sheet portal."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-79",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    tag: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onsheetbotclick",children:(0,o.jsx)(t.code,{children:"@onSheetBotClick"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a Bot is clicked in the sheet portal."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-80",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    bot: Bot;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onsheetbotidclick",children:(0,o.jsx)(t.code,{children:"@onSheetBotIDClick"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a Bot ID is clicked in the sheet portal."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-81",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    bot: Bot;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmeetloaded",children:(0,o.jsx)(t.code,{children:"@onMeetLoaded"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent when the meet portal finishes loading.\nNote that when this shout is sent, the user may not actually be in the meeting. They simply be in the meeting waiting area and not actually in the meeting.\nIf you want notification when the user has become a participant in a meeting, use ",(0,o.jsx)(a.k1,{tag:"@onMeetEntered"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["It is safe to run ",(0,o.jsx)(a.vm,{action:"os.meetCommand(command, ...args)"})," after this shout has been received."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-82",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that the meet is loaded for.\n     */\n    roomName: string;\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmeetleave",children:(0,o.jsx)(t.code,{children:"@onMeetLeave"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when the meet portal is closed."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-83",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that was left.\n     */\n    roomName: string;\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmeetentered",children:(0,o.jsx)(t.code,{children:"@onMeetEntered"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent when the user enters a meet portal meeting.\nUnlike ",(0,o.jsx)(a.k1,{tag:"@onMeetLoaded"}),', this listener is triggered only when the user becomes an active participant in a meeting. That is, after they\'ve clicked the "join" button to enter the meeting.']}),"\n",(0,o.jsx)(t.h4,{id:"arguments-84",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that the user joined.\n     * Note that this may be different from the meetPortal since a meeting can contain several breakout rooms.\n     */\n    roomName: string;\n\n    /**\n     * The ID of the participant that was created for the user.\n     */\n    participantId: string;\n\n    /**\n     * Whether the room that the user has joined is a breakout room.\n     */\n    isBreakoutRoom: boolean;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmeetexited",children:(0,o.jsx)(t.code,{children:"@onMeetExited"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent when the user exits a meet portal meeting.\nUnlike ",(0,o.jsx)(a.k1,{tag:"@onMeetLeave"}),", this listener may be triggered if the user exits a breakout room and re-enters the main meeting room."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-85",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that the user exited.\n     */\n    roomName: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onmeetrecordinglinkavailable",children:(0,o.jsx)(t.code,{children:"@onMeetRecordingLinkAvailable"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a meeting recording link is available."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-86",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The link to the meeting recording.\n     */\n    link: string;\n\n    /**\n     * The number of seconds until the meeting recording is deleted.\n     */\n    timeToLive: number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onremotedata",children:(0,o.jsx)(t.code,{children:"@onRemoteData"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a message is received from another remote device."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-87",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the message.\n     */\n    name: string,\n\n    /**\n     * The argument that was included in the message.\n     */\n    that: any,\n\n    /**\n     * The ID of the remote device that sent the message.\n     */\n    remoteId: string\n};\n"})}),"\n",(0,o.jsx)(t.h4,{id:"examples-1",children:"Examples:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:'Show a toast when a "custom" message is received.'}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'if (that.name === "custom") {\n    os.toast("Got message from " + that.remoteId + " with " + that.that);\n}\n'})}),"\n",(0,o.jsxs)(t.ol,{start:"2",children:["\n",(0,o.jsx)(t.li,{children:"Send a message back to the remote that sent the message."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'if (that.name === "hello") {\n    sendRemoteData(that.remoteId, "hi");\n}\n'})}),"\n",(0,o.jsx)(t.h3,{id:"onremotejoined",children:(0,o.jsx)(t.code,{children:"@onRemoteJoined"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is run on every other remote device when it joins the current server."}),"\n",(0,o.jsx)(t.p,{children:"Since this shout is run on every device, you should be careful about performing duplicate actions.\nWhen in doubt, elect a remote to perform all actions that should only be executed once.\nSee example 2 below."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-88",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The ID of the remote that joined the server.\n     */\n    remoteId: string\n};\n"})}),"\n",(0,o.jsx)(t.h4,{id:"examples-2",children:"Examples:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Show a toast when a remote joins."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'os.toast("Remote joined: " + that.remoteId);\n'})}),"\n",(0,o.jsx)(t.h3,{id:"onremoteleave",children:(0,o.jsx)(t.code,{children:"@onRemoteLeave"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is run on every other remote device when it leaves the current server."}),"\n",(0,o.jsx)(t.p,{children:"Since this shout is run on every device, you should be careful about performing duplicate actions.\nWhen in doubt, elect a remote to perform all actions that should only be executed once.\nSee example 2 below."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-89",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The ID of the remote that left the server.\n     */\n    remoteId: string\n};\n"})}),"\n",(0,o.jsx)(t.h4,{id:"examples-3",children:"Examples:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Show a toast when a player leaves."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'os.toast("Remote joined: " + that.remoteId);\n'})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotsadded",children:(0,o.jsx)(t.code,{children:"@onAnyBotsAdded"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a list of bots is added to the current server."}),"\n",(0,o.jsxs)(t.p,{children:["Unlike ",(0,o.jsx)(a.k1,{tag:"@onAnyCreate"}),", this listen tag is triggered whenever the bots have been added to the current device's server, even if the bots have already been created.\nAn example of this happening is when you first load a server. Even though all the bots have already been created, they still need to be added to the server in order for you to interact with them."]}),"\n",(0,o.jsxs)(t.p,{children:["Note that this listen tag is triggered after executing scripts have finished running. This means that if a script updates the same tag multiple times, ",(0,o.jsx)(t.code,{children:"@onAnyBotsAdded"})," will still only be triggered once.\nThis is in contrast to ",(0,o.jsx)(a.k1,{tag:"@onCreate"})," which is triggered immediately after the bot has been created."]}),"\n",(0,o.jsxs)(t.p,{children:["Also note that this listen tag can be triggered before ",(0,o.jsx)(a.k1,{tag:"@onInstJoined"}),". This means that it is possible for bots in other spaces to not be available when this listener is triggered."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-90",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The array of bots that were added to the server.\n     */\n    bots: Bot[];\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotsremoved",children:(0,o.jsx)(t.code,{children:"@onAnyBotsRemoved"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when a list of bots is removed from the current server."}),"\n",(0,o.jsxs)(t.p,{children:["Unlike ",(0,o.jsx)(a.k1,{tag:"@onDestroy"}),", this listen tag is triggered whenever the bots have been removed from the current device's server, even if the bots were not destroyed.\nAn example of this happening is when another player disconnects. Even though their config bots were not destroyed, they still need to be removed from the server."]}),"\n",(0,o.jsxs)(t.p,{children:["Note that this listen tag is triggered after executing scripts have finished running. This means that if a script updates the same tag multiple times, ",(0,o.jsx)(t.code,{children:"@onAnyBotsRemoved"})," will still only be triggered once.\nThis is in contrast to ",(0,o.jsx)(a.k1,{tag:"@onCreate"})," which is triggered immediately after the bot has been created."]}),"\n",(0,o.jsxs)(t.p,{children:["Also note that this listen tag can be triggered before ",(0,o.jsx)(a.k1,{tag:"@onInstJoined"}),". This means that it is possible for bots in other spaces to not be available when this listener is triggered."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-91",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The array of bot IDs that were removed from the server.\n     */\n    botIDs: string[];\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanybotschanged",children:(0,o.jsx)(t.code,{children:"@onAnyBotsChanged"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent when one or more tags are changed on a list of bots in the current server."}),"\n",(0,o.jsx)(t.p,{children:"This listen tag is triggered whenever the bots have been updated in the current device's server, even if the bots were not updated locally.\nAn example of this happening is when another player changes a tag in the sheet portal. Even though the change was made on their device, it will show up on the current device."}),"\n",(0,o.jsxs)(t.p,{children:["Note that this listen tag is triggered after executing scripts have finished running. This means that if a script updates the same tag multiple times, ",(0,o.jsx)(t.code,{children:"@onAnyBotsChanged"})," will still only be triggered once.\nThis is in contrast to ",(0,o.jsx)(a.k1,{tag:"@onCreate"})," which is triggered immediately after the bot has been created."]}),"\n",(0,o.jsxs)(t.p,{children:["Also note that this listen tag can be triggered before ",(0,o.jsx)(a.k1,{tag:"@onInstJoined"}),". This means that it is possible for bots in other spaces to not be available when this listener is triggered."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-92",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The bot that was updated.\n     */\n    bot: Bot,\n\n    /**\n     * The list of tags that were changed on the bot.\n     */\n    tags: string[]\n}[];\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onerror",children:(0,o.jsx)(t.code,{children:"@onError"})}),"\n",(0,o.jsx)(t.p,{children:'A shout that is sent when an unhandled error occurs in a listen tag.\nErrors can occur for many reasons, but common ones include data being unexpectedly missing (e.g. "Cannot read property xyz of undefined") or invalid usage (e.g. "xyz is not a function").'}),"\n",(0,o.jsxs)(t.p,{children:["Note that errors which occur in a ",(0,o.jsx)(t.code,{children:"@onError"})," listen tag will not trigger further ",(0,o.jsx)(t.code,{children:"onError"})," calls.\nTo view those errors, open the developer tools console."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-93",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The bot that the error originated from.\n     */\n    bot: Bot,\n\n    /**\n     * The tag that the error originated from.\n     */\n    tag: string,\n\n    /**\n     * The error that occurred.\n     */\n    error: Error\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomjoined",children:(0,o.jsx)(t.code,{children:"@onRoomJoined"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever a multimedia chat room is joined by using ",(0,o.jsx)(a.vm,{action:"os.joinRoom(roomName, options?)"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-94",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that was joined.\n     */\n    roomName: string;\n\n    /**\n     * The options that the room was joined with.\n     */\n    options: {\n        /**\n         * Whether the video will stream when the room is joined.\n         */\n        video: boolean;\n\n        /**\n         * Whether the audio will stream when the room is joined.\n         */\n        audio: boolean;\n    \n        /**\n         * Whether the screen will stream when the room is joined..\n         */\n        screen?: boolean;\n    };\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomleave",children:(0,o.jsx)(t.code,{children:"@onRoomLeave"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever a multimedia chat room is exited by using ",(0,o.jsx)(a.vm,{action:"os.leaveRoom(roomName, options?)"}),"."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-95",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that was left.\n     */\n    roomName: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomstreaming",children:(0,o.jsx)(t.code,{children:"@onRoomStreaming"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever the user becomes connected to a multimedia chat room. Work similarly to ",(0,o.jsx)(a.k1,{tag:"@onInstStreaming"})," except that it is only sent for chat rooms."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-96",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that started streaming.\n     */\n    roomName: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomstreamlost",children:(0,o.jsx)(t.code,{children:"@onRoomStreamLost"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent whenever the user becomes disconnected from a multimedia chat room. Work similarly to ",(0,o.jsx)(a.k1,{tag:"@onInstStreamLost"})," except that it is only sent for chat rooms."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-97",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that lost connection.\n     */\n    roomName: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomtracksubscribed",children:(0,o.jsx)(t.code,{children:"@onRoomTrackSubscribed"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a media track is discovered inside a multimedia chat room.\nMedia tracks represent streams of data like video from a camera or audio from a microphone."}),"\n",(0,o.jsx)(t.p,{children:"This shout will be triggered for each media track that is published by each user in the room, including the tracks published by the local user."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-98",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that the track was discovered in.\n     */\n    roomName: string;\n\n    /**\n     * Whether the track is streaming from a remote user.\n     */\n    isRemote: boolean;\n\n    /**\n     * The ID of the remote user that is publishing the track.\n     * This is equal to the ID of the configBot of the user that published this track.\n     */\n    remoteId: string;\n\n    /**\n     * Whether this track is locally muted.\n     */\n    muted: boolean;\n\n    /**\n     * Whether this track represents audio or video data.\n     */\n    kind: 'audio' | 'video';\n\n    /**\n     * The type of source of data for this track.\n     */\n    source: 'camera' | 'microphone' | 'screen_share' | 'screen_share_audio' | 'unknown';\n\n    /**\n     * The dimensions of the video stream.\n     * Only included for video tracks.\n     */\n    dimensions?: {\n        width: number;\n        height: number\n    };\n\n    /**\n     * The aspect ratio of the video stream.\n     * Only included for video tracks.\n     */\n    aspectRatio?: number;\n\n    /**\n     * The quality of video that is streaming to this local user.\n     * Only included for video tracks.\n     */\n    videoQuality?: 'high' | 'medium' | 'low' | 'off';\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomtrackunsubscribed",children:(0,o.jsx)(t.code,{children:"@onRoomTrackUnsubscribed"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a media track is removed from inside a multimedia chat room.\nThis can happen if a track is muted by the user that is publishing it or if the user exits the room."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-99",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room that the track was discovered in.\n     */\n    roomName: string;\n\n    /**\n     * Whether the track is streaming from a remote user.\n     */\n    isRemote: boolean;\n\n    /**\n     * The ID of the remote user that is publishing the track.\n     * This is equal to the ID of the configBot of the user that published this track.\n     */\n    remoteId: string;\n\n    /**\n     * Whether this track is locally muted.\n     */\n    muted: boolean;\n\n    /**\n     * Whether this track represents audio or video data.\n     */\n    kind: 'audio' | 'video';\n\n    /**\n     * The type of source of data for this track.\n     */\n    source: 'camera' | 'microphone' | 'screen_share' | 'screen_share_audio' | 'unknown';\n\n    /**\n     * The dimensions of the video stream.\n     * Only included for video tracks.\n     */\n    dimensions?: {\n        width: number;\n        height: number\n    };\n\n    /**\n     * The aspect ratio of the video stream.\n     * Only included for video tracks.\n     */\n    aspectRatio?: number;\n\n    /**\n     * The quality of video that is streaming to this local user.\n     * Only included for video tracks.\n     */\n    videoQuality?: 'high' | 'medium' | 'low' | 'off';\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomspeakerschanged",children:(0,o.jsx)(t.code,{children:"@onRoomSpeakersChanged"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever one or more users begin/end speaking.\nUseful for providing speaking indicators or moving the active speakers to a prominent position."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-100",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room.\n     */\n    roomName: string;\n\n    /**\n     * The array of remote IDs that are currently talkling.\n     */\n    speakerIds: string[];\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomremotejoined",children:(0,o.jsx)(t.code,{children:"@onRoomRemoteJoined"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a remote user joins a multimedia chat room that the local user is participating in."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-101",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room.\n     */\n    roomName: string;\n\n    /**\n     * The ID of the remote user that joined the room.\n     */\n    remoteId: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomremoteleave",children:(0,o.jsx)(t.code,{children:"@onRoomRemoteLeave"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever a remote user leaves a multimedia chat room that the local user is participating in."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-102",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room.\n     */\n    roomName: string;\n\n    /**\n     * The ID of the remote user that joined the room.\n     */\n    remoteId: string;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onroomoptionschanged",children:(0,o.jsx)(t.code,{children:"@onRoomOptionsChanged"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent whenever the local room options have been changed. Useful for detecting if the user's camera feed or microphone has been muted/unmuted."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-103",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The name of the room.\n     */\n    roomName: string;\n\n    /**\n     * The options that are currently set on the room.\n     */\n    options: {\n        /**\n         * Whether to stream video.\n         */\n        video: boolean;\n\n        /**\n         * Whether to stream audio.\n         */\n        audio: boolean;\n\n        /**\n         * Whether to stream the screen.\n         */\n        screen: boolean;\n    };\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyformanimationstarted",children:(0,o.jsx)(t.code,{children:"@onAnyFormAnimationStarted"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots whenever an animation is started via the ",(0,o.jsx)(a.vm,{action:"os.startFormAnimation(botOrBots, nameOrIndex, options?)"})," function."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-104",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The bot that the animation was started on.\n     */\n    bot: Bot;\n\n    /**\n     * The animation that was started.\n     */\n    animation: string | number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyformanimationstopped",children:(0,o.jsx)(t.code,{children:"@onAnyFormAnimationStopped"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots whenever an animation is stopped via the ",(0,o.jsx)(a.vm,{action:"os.stopFormAnimation(botOrBots, options?)"})," function."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-105",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The bot that the animation was stopped on.\n     */\n    bot: Bot;\n\n    /**\n     * The animation that was stopped.\n     */\n    animation: string | number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyformanimationlooped",children:(0,o.jsx)(t.code,{children:"@onAnyFormAnimationLooped"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots whenever an animation finishes and starts to repeat based on the loop rules given to ",(0,o.jsx)(a.vm,{action:"os.startFormAnimation(botOrBots, nameOrIndex, options?)"})," in the options."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-106",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The bot that the animation was looped on.\n     */\n    bot: Bot;\n\n    /**\n     * The animation that was looped.\n     */\n    animation: string | number;\n\n    /**\n     * The number of loops that have been completed.\n     */\n    loopCount: number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onanyformanimationfinished",children:(0,o.jsx)(t.code,{children:"@onAnyFormAnimationFinished"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots whenever an animation that was started by ",(0,o.jsx)(a.vm,{action:"os.startFormAnimation(botOrBots, nameOrIndex, options?)"})," stops.\nThis shout is sent both for when the animation is manually stopped (by calling ",(0,o.jsx)(a.vm,{action:"os.stopFormAnimation(botOrBots, options?)"}),") and also when it stops because it shouldn't repeat."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-107",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The bot that the animation was finished on.\n     */\n    bot: Bot;\n\n    /**\n     * The animation that finished.\n     */\n    animation: string | number;\n};\n"})}),"\n",(0,o.jsx)(t.h3,{id:"ondocumentavailable",children:(0,o.jsx)(t.code,{children:"@onDocumentAvailable"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots when the ",(0,o.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document",children:"Document"})," object is made available to scripts."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-108",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: null;\n"})}),"\n",(0,o.jsx)(t.h3,{id:"onspacemaxsizereached",children:(0,o.jsx)(t.code,{children:"@onSpaceMaxSizeReached"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when a space rejects persistent storage of one or more bot changes due to exceeding the storage limits of the space."}),"\n",(0,o.jsx)(t.p,{children:"There are a several consequences to this:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Some bot/tag changes were not persistently stored in the space."}),"\n",(0,o.jsx)(t.li,{children:"Those same bot/tag changes will still be available on the machine that the change was created on, as long as the browser tab has not been reloaded."}),"\n",(0,o.jsx)(t.li,{children:"Future changes to that space may or may not be persisted, depending on whether the individual changes would cause the space to exceed its storage limit. As a result, large changes are more likely to be rejected than small changes."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"As such, if this shout occurs in an inst that you are working in, it is highly recommended to make a manual backup so that you don't loose any data."}),"\n",(0,o.jsx)(t.h4,{id:"arguments-109",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'let that: {\n    /**\n     * The space that rejected some changes due to storage limits.\n     * Generally, this is the "shared" space.\n     */\n    space: string;\n\n    /**\n     * The storage limit for the space. Represented in bytes.\n     */\n    maxSizeInBytes: number;\n\n    /**\n     * The number of bytes that the storage limit would need to be in order to accept the changes.\n     */\n    neededSizeInBytes: number;\n};\n'})}),"\n",(0,o.jsx)(t.h3,{id:"onspaceratelimitexceeded",children:(0,o.jsx)(t.code,{children:"@onSpaceRateLimitExceeded"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when a space rejects a change because it would exceed the rate limit for the space."}),"\n",(0,o.jsxs)(t.p,{children:["Rate limits are used to prevent too many changes at one time from overloading the system, and they only apply to the ",(0,o.jsx)(t.code,{children:"shared"})," space."]}),"\n",(0,o.jsx)(t.h4,{id:"arguments-110",children:"Arguments:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"let that: {\n    /**\n     * The space that rejected some changes/messages due to rate limits.\n     */\n    space: string;\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"oncollaborationenabled",children:(0,o.jsx)(t.code,{children:"@onCollaborationEnabled"})}),"\n",(0,o.jsx)(t.p,{children:"A shout that is sent to all bots when collaboration becomes enabled for the current inst."}),"\n",(0,o.jsx)(t.h3,{id:"onallowcollaborationupgrade",children:(0,o.jsx)(t.code,{children:"@onAllowCollaborationUpgrade"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots when ",(0,o.jsx)(a.vm,{action:"os.enableCollaboration"})," is able to be called."]}),"\n",(0,o.jsx)(t.h3,{id:"ondisallowcollaborationupgrade",children:(0,o.jsx)(t.code,{children:"@onDisallowCollaborationUpgrade"})}),"\n",(0,o.jsxs)(t.p,{children:["A shout that is sent to all bots when ",(0,o.jsx)(a.vm,{action:"os.enableCollaboration"})," is no longer able to be called."]})]})}function m(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},1623:(e,t,n)=>{n.d(t,{$9:()=>P,BG:()=>g,D4:()=>j,DJ:()=>b,Dn:()=>y,E8:()=>M,EP:()=>C,Fb:()=>L,Gp:()=>R,HH:()=>q,HO:()=>A,Js:()=>w,LD:()=>B,Oc:()=>T,Oi:()=>l,PW:()=>N,QM:()=>E,Qe:()=>G,R1:()=>c,Xw:()=>r,YH:()=>F,a9:()=>v,aI:()=>d,b8:()=>D,bZ:()=>U,en:()=>W,k1:()=>h,mT:()=>m,sm:()=>I,vm:()=>x,wZ:()=>O,x8:()=>k});var o=n(79),s=n(1537),a=n(7564),i=n(5250);const r=e=>{let{children:t}=e;return(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Value"}),(0,i.jsx)("th",{children:"Description"})]})}),(0,i.jsx)("tbody",{children:t})]})},c=e=>{let{value:t,children:n,...o}=e;return(0,i.jsxs)("tr",{...o,children:[(0,i.jsx)("td",{children:t}),(0,i.jsx)("td",{children:n})]})},l=e=>{let{value:t,children:n,...o}=e;return(0,i.jsx)(c,{value:(0,i.jsx)("code",{children:t}),...o,children:n})},d=e=>{let{}=e;return(0,i.jsxs)(o.Fragment,{children:[(0,i.jsxs)(c,{value:"Any X11 Color",children:[(0,i.jsx)("a",{href:"https://en.wikipedia.org/wiki/X11_color_names",target:"_blank",children:"X11 colors"})," are a list of standard colors that web browsers support."]}),(0,i.jsxs)(c,{value:"Any Hex Color",children:[(0,i.jsx)("a",{href:"https://en.wikipedia.org/wiki/Web_colors#Hex_triplet",target:"_blank",children:"Hex colors"})," are three or six digit numbers that specify a color by its red, green, and blue components."]})]})},h=e=>{let{tag:t}=e;return t.startsWith("@")?(0,i.jsx)(p,{tag:t}):(0,i.jsx)(u,{tag:t})},m=e=>{let{}=e;return(0,i.jsxs)(o.Fragment,{children:[(0,i.jsxs)(l,{value:"auto",children:["The cursor automatically changes its look based on the context. For grid portal bots, this means that the arrow cursor is used. For menu portal bots, this means that the pointer is used when the bot has a ",(0,i.jsx)(h,{tag:"@onClick"})," and the arrow is used otherwise. (default)"]}),(0,i.jsx)(l,{value:"default",children:"The cursor looks like the default cursor for the platform. Generally, this means the arrow cursor."}),(0,i.jsx)(l,{value:"none",children:"The cursor is invisible."}),(0,i.jsx)(l,{value:"wait",children:"wait"}),(0,i.jsx)(l,{value:"context-menu",children:"context-menu"}),(0,i.jsx)(l,{value:"help",children:"help"}),(0,i.jsx)(l,{value:"pointer",children:"pointer"}),(0,i.jsx)(l,{value:"progress",children:"progress"}),(0,i.jsx)(l,{value:"cell",children:"cell"}),(0,i.jsx)(l,{value:"crosshair",children:"crosshair"}),(0,i.jsx)(l,{value:"text",children:"text"}),(0,i.jsx)(l,{value:"vertical-text",children:"vertical-text"}),(0,i.jsx)(l,{value:"alias",children:"alias"}),(0,i.jsx)(l,{value:"copy",children:"copy"}),(0,i.jsx)(l,{value:"move",children:"move"}),(0,i.jsx)(l,{value:"no-drop",children:"no-drop"}),(0,i.jsx)(l,{value:"not-allowed",children:"not-allowed"}),(0,i.jsx)(l,{value:"grab",children:"grab"}),(0,i.jsx)(l,{value:"grabbing",children:"grabbing"}),(0,i.jsx)(l,{value:"all-scroll",children:"all-scroll"}),(0,i.jsx)(l,{value:"col-resize",children:"col-resize"}),(0,i.jsx)(l,{value:"row-resize",children:"row-resize"}),(0,i.jsx)(l,{value:"n-resize",children:"n-resize"}),(0,i.jsx)(l,{value:"e-resize",children:"e-resize"}),(0,i.jsx)(l,{value:"s-resize",children:"s-resize"}),(0,i.jsx)(l,{value:"w-resize",children:"w-resize"}),(0,i.jsx)(l,{value:"ne-resize",children:"ne-resize"}),(0,i.jsx)(l,{value:"nw-resize",children:"nw-resize"}),(0,i.jsx)(l,{value:"se-resize",children:"se-resize"}),(0,i.jsx)(l,{value:"sw-resize",children:"sw-resize"}),(0,i.jsx)(l,{value:"ew-resize",children:"ew-resize"}),(0,i.jsx)(l,{value:"ns-resize",children:"ns-resize"}),(0,i.jsx)(l,{value:"nesw-resize",children:"nesw-resize"}),(0,i.jsx)(l,{value:"nwse-resize",children:"nwse-resize"}),(0,i.jsx)(l,{value:"zoom-in",children:"zoom-in"}),(0,i.jsx)(l,{value:"zoom-out",children:"zoom-out"}),(0,i.jsx)(c,{value:"Any URL",children:"The image at the given URL will be used as the cursor. Images should be 32x32 pixels or smaller otherwise they may not work."})]})},u=e=>{let{tag:t}=e;return(0,i.jsx)("a",{href:(0,s.Z)("tags")+"#"+t.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase(),children:(0,i.jsxs)(b,{children:["#",t]})})},p=e=>{let{tag:t}=e;return(0,i.jsx)("a",{href:(0,s.Z)("listen-tags")+"#"+t.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase(),children:(0,i.jsx)(b,{children:t})})},g=e=>{var t;let{type:n,children:o}=e,r=(0,i.jsx)(b,{children:null!=o?o:n});const c=null==(t=a.references)?void 0:t[n];if(!c)return console.warn("No hash for type",action),r;const l=(0,s.Z)(c)+"#"+n;return(0,i.jsx)("a",{href:l,children:r})},x=e=>{let{action:t,children:n}=e,o=null,r=t.indexOf("(");r>=0?o=t.substring(0,r):(o=t,t+="()");let c=(0,i.jsx)(b,{children:null!=n?n:t});const l=a.references[o];if(!l)return console.warn("No hash for action",t),c;const d=(0,s.Z)(l)+"#"+o;return(0,i.jsx)("a",{href:d,children:c})},b=e=>{let{children:t}=e;return o.createElement("code",{},...t)},y=e=>{let{}=e;return(0,i.jsxs)(o.Fragment,{children:[(0,i.jsx)(l,{value:"top",children:"Top of the bot facing world oriented up. (default)"}),(0,i.jsx)(l,{value:"front",children:"Front of the bot facing world oriented forward."}),(0,i.jsx)(l,{value:"back",children:"Back of the bot facing world oriented back."}),(0,i.jsx)(l,{value:"right",children:"Right of the bot facing world oriented right."}),(0,i.jsx)(l,{value:"left",children:"Left of the bot facing world oriented left."}),(0,i.jsx)(l,{value:"floating",children:"Floating above the bot."})]})},v=e=>{let{children:t}=e;return(0,i.jsx)("div",{className:"row badge-row",children:(0,i.jsx)("div",{className:"col",children:t})})},j=e=>{let{name:t,children:n,...o}=e;return(0,i.jsx)("a",{href:(0,s.Z)("variables")+"#"+t.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase(),...o,children:n||(0,i.jsx)(b,{children:t})})},f=e=>{let{type:t,title:n,children:o}=e;return(0,i.jsx)("span",{title:n,className:"badge badge--"+t,children:o})},A=e=>{let{}=e;return(0,i.jsx)(f,{type:"warning",children:"Read-Only"})},k=e=>{let{url:t}=e;return(0,i.jsx)(f,{type:"info",children:(0,i.jsx)("a",{href:t,target:"_blank",children:"Video"})})},w=e=>{let{url:t}=e;return(0,i.jsx)(f,{type:"primary",children:"Config Bot"})},T=e=>{let{url:t}=e;return(0,i.jsx)(f,{type:"primary",children:"History Bot"})},R=e=>{let{url:t}=e;return(0,i.jsx)(f,{type:"success",title:"This tag is automatically set by CasualOS.",children:"Automatic"})},S=e=>{let{bot:t}=e;return(0,i.jsx)(j,{name:t,className:"portal-badge",children:(0,i.jsx)(f,{type:"normal",title:"This tag is available on the "+t+".",children:t})})},B=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"gridPortalBot"})},O=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"miniGridPortalBot"})},N=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"miniMapPortalBot"})},C=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"mapPortalBot"})},E=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"menuPortalBot"})},D=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"meetPortalBot"})},F=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"leftWristPortalBot"})},L=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"rightWristPortalBot"})},I=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"sheetPortalBot"})},P=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"botPortalBot"})},M=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"tagPortalBot"})},G=e=>{let{url:t}=e;return(0,i.jsx)(S,{bot:"imuPortalBot"})},U=e=>{let{type:t,children:n}=e;return(0,i.jsx)("div",{className:"alert alert--"+t,role:"alert",children:n})},W=e=>{let{code:t}=e;return(0,i.jsx)(f,{type:"info",children:(0,i.jsx)("a",{target:"_blank",href:"https://casualos.com?auxCode="+t,children:"Example"})})},q=e=>{let{code:t}=e;return(0,i.jsx)("iframe",{className:"example",src:"https://casualos.com?auxCode="+t})}},7564:e=>{e.exports=JSON.parse('{"hash":"extra-types","pageTitle":null,"pageDescription":null,"pageSidebarLabel":null,"contents":[{"id":3341,"order":0,"name":"AIGenerateSkyboxOptions","reflection":{"id":3341,"name":"AIGenerateSkyboxOptions","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents options for "},{"kind":"text","text":"[`ai.generateSkybox(prompt, negativePrompt, options)`](ref:ai.generateSkybox-string)"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"AIGenerateSkyboxOptions"}]}]},"children":[{"id":3342,"name":"blockadeLabs","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options that are specific to blockade-labs."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/RecordsEvents.ts","line":146,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-runtime/runtime/RecordsEvents.ts#L146"}],"type":{"type":"reference","target":3344,"name":"AIGenerateSkyboxOptions","package":"@casual-simulation/aux-runtime","id":3344,"qualifiedName":"AIGenerateSkyboxBlockadeLabsOptions"}},{"id":3343,"name":"endpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The HTTP endpoint that the request should interface with."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/RecordsEvents.ts","line":268,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-runtime/runtime/RecordsEvents.ts#L268"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3298,"name":"RecordActionOptions.endpoint","id":3298,"qualifiedName":"RecordActionOptions.endpoint"}}],"groups":[{"title":"Properties","children":[3342,3343]}],"sources":[{"fileName":"src/aux-runtime/runtime/RecordsEvents.ts","line":142,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-runtime/runtime/RecordsEvents.ts#L142"}],"extendedTypes":[{"type":"reference","target":3297,"name":"RecordActionOptions","package":"@casual-simulation/aux-runtime","id":3297,"qualifiedName":"RecordActionOptions"}]},"comment":{"text":"Defines an interface that represents options for ai.generateSkybox-string.","tags":[{"tagName":"dochash","text":"types/ai"},{"tagName":"docname","text":"AIGenerateSkyboxOptions"}]},"group":null},{"id":3410,"order":0,"name":"Bot","reflection":{"id":3410,"name":"Bot","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface for a bot."}],"blockTags":[{"tag":"@docid","content":[{"kind":"text","text":"Bot"}]},{"tag":"@docrename","content":[{"kind":"text","text":"RuntimeBot"}]}]},"children":[{"id":3411,"name":"id","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ID of the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":340,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/Bot.ts#L340"}],"type":{"type":"intrinsic","name":"string"}},{"id":3415,"name":"masks","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The set of tag masks that have been applied to the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":360,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/Bot.ts#L360"}],"type":{"type":"reference","target":3501,"name":"TagMasks","package":"@casual-simulation/aux-common","id":3501,"qualifiedName":"BotTagMasks"}},{"id":3414,"name":"signatures","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The set of signatures that the bot contains."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":355,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/Bot.ts#L355"}],"type":{"type":"reference","target":{"sourceFileName":"../src/aux-common/bots/Bot.ts","qualifiedName":"BotSignatures"},"name":"BotSignatures","package":"@casual-simulation/aux-common"}},{"id":3412,"name":"space","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The space the bot lives in."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":345,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/Bot.ts#L345"}],"type":{"type":"reference","target":3491,"name":"Space","package":"@casual-simulation/aux-common","id":3491,"qualifiedName":"BotSpace"}},{"id":3413,"name":"tags","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The set of tags that the bot contains."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":350,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/Bot.ts#L350"}],"type":{"type":"reference","target":3416,"name":"Tags","package":"@casual-simulation/aux-common","id":3416,"qualifiedName":"BotTags"}}],"groups":[{"title":"Properties","children":[3411,3415,3414,3412,3413]}],"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":336,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/Bot.ts#L336"}]},"comment":{"text":"Defines an interface for a bot.","tags":[{"tagName":"docid","text":"Bot"},{"tagName":"docrename","text":"RuntimeBot"}]},"group":null},{"id":2577,"order":0,"name":"FocusOnBotAction","reflection":{"id":2577,"name":"FocusOnBotAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An event that is used to focus on a given bot."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"FocusOnBotAction"}]}]},"children":[{"id":2579,"name":"botId","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ID of the bot to focus on."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":550,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L550"}],"type":{"type":"intrinsic","name":"string"}},{"id":2590,"name":"columnNumber","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The column number that should be selected in the editor.\\r\\nOnly supported in the system portal, sheet portal, and tag portals."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":500,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L500"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":2697,"name":"FocusOnOptions.columnNumber","id":2697,"qualifiedName":"FocusOnOptions.columnNumber"}},{"id":2585,"name":"duration","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The duration in seconds that the animation should take.\\r\\nDefaults to 1."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":468,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L468"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":2692,"name":"FocusOnOptions.duration","id":2692,"qualifiedName":"FocusOnOptions.duration"}},{"id":2586,"name":"easing","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options for easing.\\r\\nCan be an \\"easing type\\" or an object that specifies the type and mode.\\r\\nIf an easing type is specified, then \\"inout\\" mode is used.\\r\\nIf omitted, then \\"quadratic\\" \\"inout\\" is used."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":476,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L476"}],"type":{"type":"union","types":[{"type":"reference","target":2622,"name":"Easing","package":"@casual-simulation/aux-common","id":2622,"qualifiedName":"Easing"},{"type":"reference","target":2620,"name":"EaseType","package":"@casual-simulation/aux-common","id":2620,"qualifiedName":"EaseType"}]},"inheritedFrom":{"type":"reference","target":2693,"name":"FocusOnOptions.easing","id":2693,"qualifiedName":"FocusOnOptions.easing"}},{"id":2592,"name":"endIndex","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The index of the last character that should be selected.\\r\\nOnly supported in the system portal, sheet portal, and tag portals."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":512,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L512"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":2699,"name":"FocusOnOptions.endIndex","id":2699,"qualifiedName":"FocusOnOptions.endIndex"}},{"id":2589,"name":"lineNumber","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The line number that should be selected in the editor.\\r\\nOnly supported in the system portal, sheet portal, and tag portals."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":494,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L494"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":2696,"name":"FocusOnOptions.lineNumber","id":2696,"qualifiedName":"FocusOnOptions.lineNumber"}},{"id":2581,"name":"playerId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The ID of the player that created this task.\\r\\nSet by remote action handlers when a task is recieved from a remote player."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":195,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L195"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"AsyncAction.playerId"}},{"id":2593,"name":"portal","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The portal that the bot should be focused in.\\r\\nIf not specified, then the bot will be focused in all the portals it is in. (bot, mini and menu)\\r\\nUseful if a bot is in two portals but you only want to focus it in one portal."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":519,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L519"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2700,"name":"FocusOnOptions.portal","id":2700,"qualifiedName":"FocusOnOptions.portal"}},{"id":2584,"name":"rotation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":462,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L462"}],"type":{"type":"reference","target":2701,"name":"FocusOnRotation","package":"@casual-simulation/aux-common","id":2701,"qualifiedName":"FocusOnRotation"},"inheritedFrom":{"type":"reference","target":2691,"name":"FocusOnOptions.rotation","id":2691,"qualifiedName":"FocusOnOptions.rotation"}},{"id":2588,"name":"space","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The tag space that should be focused.\\r\\nOnly supported in the system portal, sheet portal, and tag portals."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":488,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L488"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2695,"name":"FocusOnOptions.space","id":2695,"qualifiedName":"FocusOnOptions.space"}},{"id":2591,"name":"startIndex","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The index of the first character that should be selected.\\r\\nOnly supported in the system portal, sheet portal, and tag portals."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":506,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L506"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":2698,"name":"FocusOnOptions.startIndex","id":2698,"qualifiedName":"FocusOnOptions.startIndex"}},{"id":2587,"name":"tag","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The tag that should be focused.\\r\\nOnly supported in the system portal."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":482,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L482"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2694,"name":"FocusOnOptions.tag","id":2694,"qualifiedName":"FocusOnOptions.tag"}},{"id":2580,"name":"taskId","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ID of the async task."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":189,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L189"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"AsyncAction.taskId"}},{"id":2578,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":545,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L545"}],"type":{"type":"literal","value":"focus_on"},"overwrites":{"type":"reference","target":-1,"name":"AsyncAction.type"}},{"id":2582,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"AsyncAction.uncopiable"}},{"id":2583,"name":"zoom","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":455,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L455"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":2690,"name":"FocusOnOptions.zoom","id":2690,"qualifiedName":"FocusOnOptions.zoom"}}],"groups":[{"title":"Properties","children":[2579,2590,2585,2586,2592,2589,2581,2593,2584,2588,2591,2587,2580,2578,2582,2583]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":544,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L544"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/bots/BotEvents.ts","qualifiedName":"AsyncAction"},"name":"AsyncAction","package":"@casual-simulation/aux-common"},{"type":"reference","target":2689,"name":"FocusOnOptions","package":"@casual-simulation/aux-common","id":2689,"qualifiedName":"FocusOnOptions"}]},"comment":{"text":"An event that is used to focus on a given bot.","tags":[{"tagName":"docname","text":"FocusOnBotAction"}]},"group":null},{"id":2866,"order":0,"name":"GoToDimensionAction","reflection":{"id":2866,"name":"GoToDimensionAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an event that is used to send the player to a dimension."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"GoToDimensionAction"}]}]},"children":[{"id":2868,"name":"dimension","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The dimension that should be loaded."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1132,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1132"}],"type":{"type":"intrinsic","name":"string"}},{"id":2867,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1127,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1127"}],"type":{"type":"literal","value":"go_to_dimension"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2869,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2868,2867,2869]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1126,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1126"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an event that is used to send the player to a dimension.","tags":[{"tagName":"docname","text":"GoToDimensionAction"}]},"group":null},{"id":2773,"order":0,"name":"OpenBarcodeScannerAction","reflection":{"id":2773,"name":"OpenBarcodeScannerAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An event that is used to show or hide the barcode scanner."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"OpenBarcodeScannerAction"}]}]},"children":[{"id":2776,"name":"cameraType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The camera that should be used."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":624,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L624"}],"type":{"type":"reference","target":2738,"name":"CameraType","package":"@casual-simulation/aux-common","id":2738,"qualifiedName":"CameraType"}},{"id":2777,"name":"disallowSwitchingCameras","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to not allow switching the camera."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":629,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L629"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2775,"name":"open","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the barcode scanner should be visible."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":619,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L619"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2774,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":614,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L614"}],"type":{"type":"literal","value":"show_barcode_scanner"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2778,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2776,2777,2775,2774,2778]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":613,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L613"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"An event that is used to show or hide the barcode scanner.","tags":[{"tagName":"docname","text":"OpenBarcodeScannerAction"}]},"group":null},{"id":2767,"order":0,"name":"OpenQRCodeScannerAction","reflection":{"id":2767,"name":"OpenQRCodeScannerAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An event that is used to show or hide the QR Code Scanner."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"OpenQRCodeScannerAction"}]}]},"children":[{"id":2770,"name":"cameraType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The camera that should be used."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":601,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L601"}],"type":{"type":"reference","target":2738,"name":"CameraType","package":"@casual-simulation/aux-common","id":2738,"qualifiedName":"CameraType"}},{"id":2771,"name":"disallowSwitchingCameras","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to not allow switching the camera."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":606,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L606"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2769,"name":"open","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the QR Code scanner should be visible."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":596,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L596"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2768,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":591,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L591"}],"type":{"type":"literal","value":"show_qr_code_scanner"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2772,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2770,2771,2769,2768,2772]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":590,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L590"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"An event that is used to show or hide the QR Code Scanner.","tags":[{"tagName":"docname","text":"OpenQRCodeScannerAction"}]},"group":null},{"id":2508,"order":0,"name":"ReplaceDragBotAction","reflection":{"id":2508,"name":"ReplaceDragBotAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An event that is used to override dragging a bot."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"ReplaceDragBotAction"}]}]},"children":[{"id":2510,"name":"bot","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The bot that should be used to drag."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":329,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L329"}],"type":{"type":"union","types":[{"type":"reference","target":3361,"name":"Bot","package":"@casual-simulation/aux-common","id":3361,"qualifiedName":"Bot"},{"type":"reference","target":3416,"name":"Tags","package":"@casual-simulation/aux-common","id":3416,"qualifiedName":"BotTags"}]}},{"id":2509,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":324,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L324"}],"type":{"type":"literal","value":"replace_drag_bot"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2511,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2510,2509,2511]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":323,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L323"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"An event that is used to override dragging a bot.","tags":[{"tagName":"docname","text":"ReplaceDragBotAction"}]},"group":null},{"id":2796,"order":0,"name":"ShowBarcodeAction","reflection":{"id":2796,"name":"ShowBarcodeAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An event that is used to show or hide a barcode on screen."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"ShowBarcodeAction"}]}]},"children":[{"id":2799,"name":"code","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The code to display."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":821,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L821"}],"type":{"type":"intrinsic","name":"string"}},{"id":2800,"name":"format","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The format that the code should be displayed in."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":826,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L826"}],"type":{"type":"reference","target":2739,"name":"BarcodeFormat","package":"@casual-simulation/aux-common","id":2739,"qualifiedName":"BarcodeFormat"}},{"id":2798,"name":"open","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the barcode should be visible."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":816,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L816"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2797,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":811,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L811"}],"type":{"type":"literal","value":"show_barcode"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2801,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2799,2800,2798,2797,2801]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":810,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L810"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"An event that is used to show or hide a barcode on screen.","tags":[{"tagName":"docname","text":"ShowBarcodeAction"}]},"group":null},{"id":2870,"order":0,"name":"ShowInputForTagAction","reflection":{"id":2870,"name":"ShowInputForTagAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an event that is used to show an input box to edit a tag on a bot."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"ShowInputForTagAction"}]}]},"children":[{"id":2872,"name":"botId","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ID of the bot to edit."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1145,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1145"}],"type":{"type":"intrinsic","name":"string"}},{"id":2874,"name":"options","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The options for the input box."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1155,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1155"}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":2745,"name":"ShowInputOptions","package":"@casual-simulation/aux-common","id":2745,"qualifiedName":"ShowInputOptions"}],"name":"Partial","package":"typescript"}},{"id":2873,"name":"tag","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tag that should be edited on the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1150,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1150"}],"type":{"type":"intrinsic","name":"string"}},{"id":2871,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1140,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1140"}],"type":{"type":"literal","value":"show_input_for_tag"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2875,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2872,2874,2873,2871,2875]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":1139,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L1139"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an event that is used to show an input box to edit a tag on a bot.","tags":[{"tagName":"docname","text":"ShowInputForTagAction"}]},"group":null},{"id":2791,"order":0,"name":"ShowQRCodeAction","reflection":{"id":2791,"name":"ShowQRCodeAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An event that is used to show or hide a QR Code on screen."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"ShowQRCodeAction"}]}]},"children":[{"id":2794,"name":"code","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The code to display."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":783,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L783"}],"type":{"type":"intrinsic","name":"string"}},{"id":2793,"name":"open","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the QR Code should be visible."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":778,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L778"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2792,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":773,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L773"}],"type":{"type":"literal","value":"show_qr_code"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2795,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2794,2793,2792,2795]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":772,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L772"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"An event that is used to show or hide a QR Code on screen.","tags":[{"tagName":"docname","text":"ShowQRCodeAction"}]},"group":null},{"id":2826,"order":0,"name":"SuperShoutAction","reflection":{"id":2826,"name":"SuperShoutAction","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an event for actions that are shouted to every current loaded simulation."}],"blockTags":[{"tag":"@docname","content":[{"kind":"text","text":"SuperShoutAction"}]}]},"children":[{"id":2829,"name":"argument","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The argument to pass as the \\"that\\" variable to scripts."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":933,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L933"}],"type":{"type":"intrinsic","name":"any"}},{"id":2828,"name":"eventName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the event."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":928,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L928"}],"type":{"type":"intrinsic","name":"string"}},{"id":2827,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":923,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L923"}],"type":{"type":"literal","value":"super_shout"},"overwrites":{"type":"reference","target":-1,"name":"Action.type"}},{"id":2830,"name":"uncopiable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the action can be structure cloned.\\r\\nIf true, then the action should not be passed across message ports."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/Action.ts","line":18,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/common/Action.ts#L18"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Action.uncopiable"}}],"groups":[{"title":"Properties","children":[2829,2828,2827,2830]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":922,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/97a47831f/src/aux-common/bots/BotEvents.ts#L922"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/Action.ts","qualifiedName":"Action"},"name":"Action","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an event for actions that are shouted to every current loaded simulation.","tags":[{"tagName":"docname","text":"SuperShoutAction"}]},"group":null}],"references":{"CasualOSError":"types/error","id-3546":"CasualOSError","Quaternion":"types/math/rotations","id-127":"Quaternion","Rotation":"types/math/rotations","id-154":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-3565":"AIChatMessage","AIChatOptions":"types/ai","id-3334":"AIChatOptions","AIGenerateImageSuccess":"types/ai","id-2481":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-3348":"AIGenerateImageOptions","AIGenerateSkyboxOptions":"types/ai","id-3344":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-2474":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-2478":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-2484":"AIGeneratedImage","ARSupportedAction":"types/os/xr","id-3076":"ARSupportedAction","AddCountFailure":"types/records/events","id-3751":"AddCountFailure","AddCountSuccess":"types/records/events","id-3746":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-2705":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-2709":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-3279":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-2078":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-2454":"AttachDebuggerOptions","AuthData":"types/os/records","id-3218":"AuthData","CasualOSDevice":"types/os/system","id-3533":"CasualOSDevice","CasualOSVersion":"types/os/system","id-3525":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-200":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-3161":"BeginRecordingAction","BotTagMasks":"types/core","id-3501":"BotTagMasks","BotTags":"types/core","id-3416":"BotTags","BotState":"types/core","id-3514":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-3286":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-2887":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-3259":"CalculateRayFromCameraAction","CancelSoundAction":"types/os/audio","id-2893":"CancelSoundAction","CompiledBotListeners":"types/core","id-3495":"CompiledBotListeners","ConfigureWakeLockAction":"types/os/portals","id-3266":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-2651":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-2640":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-3687":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-3683":"CreatePublicRecordKeySuccess","DebuggerCallFrame":"types/debuggers/common","id-2407":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-2442":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-2436":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-2415":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-2421":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-2448":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-2644":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-2899":"DownloadAction","Easing":"types/animation","id-2622":"Easing","EnableARAction":"types/os/xr","id-3072":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-3031":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-2735":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-3090":"EnablePOVAction","EnableVRAction":"types/os/xr","id-3086":"EnableVRAction","EnableXROptions":"types/os/xr","id-2942":"EnableXROptions","EndRecordingAction":"types/os/audio","id-3169":"EndRecordingAction","EraseDataFailure":"types/records/data","id-3722":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-3718":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-3741":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-3737":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-203":"EulerAnglesRotation","ExitFullscreenAction":"types/os/portals","id-3105":"ExitFullscreenAction","FocusOnOptions":"types/os/camera","id-2689":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-2701":"FocusOnRotation","FormAnimationData":"types/os/animations","id-2987":"FormAnimationData","FromToRotation":"types/math/rotations","id-197":"FromToRotation","GenericError":"types/error","id-3543":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-3239":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-3762":"GetCountFailure","GetCountSuccess":"types/records/events","id-3756":"GetCountSuccess","GetDataFailure":"types/records/data","id-3713":"GetDataFailure","GetDataSuccess":"types/records/data","id-3704":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-3202":"GetGeolocationAction","GetRoomOptionsFailure":"types/os/portals","id-2169":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-2165":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-2212":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-2207":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-2188":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-2183":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-3197":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-3272":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-3207":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-3790":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-3788":"GrantMarkerPermissionSuccess","GrantRoleFailure":"types/records/roles","id-3776":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-3774":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-2541":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-2530":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-2551":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-2556":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os/image-classification","id-2740":"ImageClassifierOptions","InstUpdate":"types/os/spaces","id-3539":"InstUpdate","JoinRoomFailure":"types/os/portals","id-2150":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-2147":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-2159":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-2156":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-3732":"ListDataFailure","ListDataSuccess":"types/records/data","id-3727":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-2991":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-3805":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-3802":"ListStudiosSuccess","ListedStudio":"types/records/studios","id-3809":"ListedStudio","LoadInstAction":"types/os/spaces","id-2812":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-2932":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-3043":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-3057":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-3047":"LocalTweenAction","LookRotation":"types/math/rotations","id-211":"LookRotation","MediaPermissionAction":"types/os/media","id-3232":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-2939":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-3174":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-3181":"MeetFunctionAction","Debugger":"types/debuggers/debugger","id-2219":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-2426":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os/portals","id-3151":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-3158":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-2787":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-3015":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-2876":"OpenURLAction","ParsedBotLink":"types/core","id-3520":"ParsedBotLink","PartialBotState":"types/core","id-3517":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-2275":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-2431":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-2394":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-2402":"PauseTriggerOptions","Photo":"types/camera","id-3027":"Photo","PlaySoundAction":"types/os/audio","id-2880":"PlaySoundAction","PossiblePauseTriggerLocation":"types/debuggers/common","id-2389":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-2463":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-215":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-3244":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-3251":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-2143":"RaycastRay","RaycastResult":"types/os/portals","id-2140":"RaycastResult","RecordActionOptions":"types/records/extra","id-3297":"RecordActionOptions","RecordDataFailure":"types/records/data","id-3697":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-3693":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-2110":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-2106":"RecordFileSuccess","RecordedFile":"types/experimental","id-3002":"RecordedFile","Recording":"types/experimental","id-3000":"Recording","RecordingOptions":"types/experimental","id-3007":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-3115":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-3121":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-3134":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-2997":"RegisterPrefixOptions","RejectAction":"types/os/event","id-2905":"RejectAction","RemoteAction":"types/os/event","id-3815":"RemoteAction","ReportInstAction":"types/os/moderation","id-3292":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-3212":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-3103":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-3797":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-3795":"RevokeMarkerPermissionSuccess","RevokeRoleFailure":"types/records/roles","id-3783":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-3781":"RevokeRoleSuccess","RoomJoinOptions":"types/os/portals","id-3300":"RoomJoinOptions","RoomOptions":"types/os/portals","id-3309":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-3325":"RoomRemoteOptions","RoomTrackOptions":"types/os/portals","id-3313":"RoomTrackOptions","RunScriptAction":"types/os/system","id-2919":"RunScriptAction","RuntimeBot":"types/core","id-3361":"RuntimeBot","RuntimeBotLinks":"types/core","id-3507":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-3504":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-222":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-2565":"SerializableMutationRecord","SessionSelector":"types/os/event","id-2489":"SessionSelector","SetAppOutputAction":"types/os/portals","id-3146":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-2908":"SetClipboardAction","SetRoomOptionsSuccess":"types/os/portals","id-2174":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-3331":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-2200":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-2195":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-3107":"ShareAction","ShareOptions":"types/os/input","id-2685":"ShareOptions","ShowChatBarAction":"types/os/input","id-2911":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-2679":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-2761":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-2756":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-2536":"ShowHtmlAction","ShowInputOptions":"types/os/input","id-2745":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-3099":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-2516":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-2521":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-2925":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-2927":"ShowUploadFilesAction","SnapAxis":"types/os/portals","id-2659":"SnapAxis","SnapGrid":"types/os/portals","id-2714":"SnapGrid","SnapGridTarget":"types/os/portals","id-2115":"SnapGridTarget","SnapPoint":"types/os/portals","id-2671":"SnapPoint","SpeakTextAction":"types/os/audio","id-3188":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-2459":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-2968":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-2944":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-2957":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-2965":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-2626":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-3011":"SyntheticVoice","TweenOptions":"types/experimental","id-2456":"TweenOptions","UnloadInstAction":"types/os/spaces","id-2816":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-3128":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-3141":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-2636":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-3769":"UpdateEventRecordFailure","UpdateEventRecordSuccess":"types/records/events","id-3767":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-2545":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-2136":"UploadedFile","VRSupportedAction":"types/os/xr","id-3081":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-3277":"WakeLockConfiguration","WebhookOptions":"types/web","id-2059":"WebhookOptions","WebhookResult":"types/web","id-2071":"WebhookResult","AddCountResult":"types/records/events","id-3745":"AddCountResult","AvailablePermissions":"types/permissions","id-3571":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-2739":"BarcodeFormat","BotAnchorPoint":"types/core","id-3524":"BotAnchorPoint","BotFilter":"types/core","id-2093":"BotFilter","BotSpace":"types/core","id-3491":"BotSpace","CameraType":"types/os/camera","id-2738":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-3682":"CreatePublicRecordKeyResult","EaseMode":"types/animation","id-2621":"EaseMode","EaseType":"types/animation","id-2620":"EaseType","EraseDataResult":"types/records/data","id-3717":"EraseDataResult","EraseFileResult":"types/records/files","id-3736":"EraseFileResult","Geolocation":"types/os/geolocation","id-2625":"Geolocation","GetCountResult":"types/records/events","id-3755":"GetCountResult","GetDataResult":"types/records/data","id-3703":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-2164":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-2206":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-2182":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-3787":"GrantMarkerPermissionResult","GrantRoleResult":"types/records/roles","id-3773":"GrantRoleResult","JoinRoomResult":"types/os/portals","id-2146":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-2155":"LeaveRoomResult","ListDataResult":"types/records/data","id-3726":"ListDataResult","ListStudiosResult":"types/records/studios","id-3801":"ListStudiosResult","Mod":"types/core","id-2088":"Mod","PortalType":"types/core","id-3523":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-2393":"PossiblePauseTriggerStates","RecordDataResult":"types/records/data","id-3692":"RecordDataResult","RecordFileResult":"types/records/files","id-2105":"RecordFileResult","RevokeMarkerPermissionResult":"types/records/policies","id-3794":"RevokeMarkerPermissionResult","RevokeRoleResult":"types/records/roles","id-3780":"RevokeRoleResult","SetRoomOptionsResult":"types/os/portals","id-2173":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-2194":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-2755":"ShowInputSuptype","ShowInputType":"types/os/input","id-2754":"ShowInputType","SnapTarget":"types/os/portals","id-2678":"SnapTarget","TagFilter":"types/core","id-2089":"TagFilter","UpdateEventRecordResult":"types/records/events","id-3766":"UpdateEventRecordResult","animateTag-byOptions":"actions/os/animations","id-591":"animateTag-byOptions","getbot-tag":"actions/data","id-256":"getbot-tag","getbots-tag":"actions/data","id-240":"getbots-tag","animateTag-byTag":"actions/os/animations","id-585":"animateTag-byTag","changeState":"actions/data","id-401":"changeState","create":"actions/data","id-385":"create","destroy":"actions/data","id-389":"destroy","getbot-filters":"actions/data","id-249":"getbot-filters","getbots-filters":"actions/data","id-233":"getbots-filters","priorityShout":"actions/os/event","id-450":"priorityShout","shout":"actions/os/event","id-463":"shout","updateBotLinks":"actions/data","id-423":"updateBotLinks","whisper":"actions/os/event","id-489":"whisper","action.perform":"actions/os/event","id-1594":"action.perform","action.reject":"actions/os/event","id-1598":"action.reject","ai.chat-string":"actions/ai","id-650":"ai.chat-string","ai.chat-message":"actions/ai","id-653":"ai.chat-message","ai.chat-messages":"actions/ai","id-656":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-669":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-673":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-661":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-665":"ai.generateSkybox-request","applyDiffToSnapshot":"actions/data","id-306":"applyDiffToSnapshot","applyMod":"actions/mods","id-375":"applyMod","assert":"actions/debuggers","id-634":"assert","assertEqual":"actions/debuggers","id-639":"assertEqual","atPosition":"actions/bot-filters","id-520":"atPosition","byCreator":"actions/bot-filters","id-541":"byCreator","byID":"actions/bot-filters","id-508":"byID","byMod":"actions/bot-filters","id-512":"byMod","bySpace":"actions/bot-filters","id-537":"bySpace","byTag":"actions/bot-filters","id-503":"byTag","bytes.fromBase64String":"actions/bytes","id-1807":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-1824":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-1815":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-1803":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-1819":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-1811":"bytes.toHexString","clearAnimations":"actions/os/animations","id-605":"clearAnimations","clearTagMasks":"actions/data","id-329":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-1830":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-1836":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-1867":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-1860":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-1925":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-1920":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-1931":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-1916":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-1912":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-1896":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-1886":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-1891":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-1906":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-1935":"crypto.keypair","crypto.sha256":"actions/crypto","id-1852":"crypto.sha256","crypto.sha512":"actions/crypto","id-1856":"crypto.sha512","crypto.sign":"actions/crypto","id-1939":"crypto.sign","deleteTagMaskText":"actions/data","id-356":"deleteTagMaskText","deleteTagText":"actions/data","id-349":"deleteTagText","diffSnapshots":"actions/data","id-301":"diffSnapshots","either":"actions/bot-filters","id-545":"either","os.beginAudioRecording":"actions/os/audio","id-1641":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-1648":"experiment.beginRecording","os.endAudioRecording":"actions/os/audio","id-1645":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-1652":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-1631":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-1660":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-1604":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-1609":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-1620":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-1655":"experiment.speakText","getBotLinks":"actions/data","id-419":"getBotLinks","getBotPosition":"actions/data","id-275":"getBotPosition","getBotRotation":"actions/data","id-280":"getBotRotation","getBotTagValues":"actions/data","id-265":"getBotTagValues","getFormattedJSON":"actions/data","id-293":"getFormattedJSON","getID":"actions/data","id-285":"getID","getJSON":"actions/data","id-289":"getJSON","getLink":"actions/data","id-415":"getLink","getMod":"actions/mods","id-270":"getMod","getSnapshot":"actions/data","id-297":"getSnapshot","getTag":"actions/data","id-311":"getTag","inDimension":"actions/bot-filters","id-516":"inDimension","inStack":"actions/bot-filters","id-526":"inStack","insertTagMaskText":"actions/data","id-341":"insertTagMaskText","insertTagText":"actions/data","id-334":"insertTagText","math.abs":"actions/math","id-1677":"math.abs","math.addVectors":"actions/math","id-1747":"math.addVectors","math.areClose":"actions/math","id-1778":"math.areClose","math.avg":"actions/math","id-1669":"math.avg","math.degreesToRadians":"actions/math","id-1703":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-1743":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-1711":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-1685":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-1720":"math.intersectPlane","math.negateVector":"actions/math","id-1757":"math.negateVector","math.normalizeVector":"actions/math","id-1762":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-1707":"math.radiansToDegrees","math.random":"actions/math","id-1698":"math.random","math.randomInt":"actions/math","id-1693":"math.randomInt","math.scaleVector":"actions/math","id-1772":"math.scaleVector","math.setRandomSeed":"actions/math","id-1689":"math.setRandomSeed","math.sqrt":"actions/math","id-1673":"math.sqrt","math.stdDev":"actions/math","id-1681":"math.stdDev","math.subtractVectors":"actions/math","id-1752":"math.subtractVectors","math.sum":"actions/math","id-1665":"math.sum","math.vectorLength":"actions/math","id-1767":"math.vectorLength","neighboring":"actions/bot-filters","id-531":"neighboring","not":"actions/bot-filters","id-552":"not","os.attachDebugger":"actions/debuggers","id-1550":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-1539":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-1543":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-737":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-742":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-1547":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-764":"showChat-options","showChat-placeholder":"actions/os/input","id-760":"showChat-placeholder","os.showInput":"actions/os/portals","id-983":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1053":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1044":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1049":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1040":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-1502":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-808":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-1460":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1016":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-1455":"os.calculateRayFromCamera","os.cancelSound":"actions/os/audio","id-1020":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-903":"os.capturePhoto","os.closeBarcodeScanner":"actions/os/barcodes","id-881":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1032":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-896":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-907":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-867":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1167":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-1440":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-1430":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-1498":"os.createInitializationUpdate","os.device":"actions/os/system","id-782":"os.device","os.disableAR":"actions/os/xr","id-798":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-823":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-805":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-829":"os.disableWakeLock","os.download":"actions/os/files","id-835":"os.download","os.downloadBots":"actions/os/files","id-841":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-846":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-854":"os.downloadInst","os.enableAR":"actions/os/xr","id-794":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-788":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1058":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-814":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-801":"os.enableVR","os.eraseData":"actions/os/records","id-1373":"os.eraseData","os.eraseManualApprovalData":"actions/os/records","id-1379":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/os/portals","id-708":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1115":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1071":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1075":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-954":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-960":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os/spaces","id-1506":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-1355":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-973":"os.getDimensionalDepth","os.getFocusPoint":"actions/os/portals","id-1083":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1065":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1108":"os.getInputList","os.getInputState":"actions/os/portals","id-1103":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-1494":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-1361":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1111":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-963":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-966":"os.getMiniPortalDimension","os.getPointerDirection":"actions/os/portals","id-1099":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1087":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1091":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-969":"os.getPortalDimension","os.getPublicRecordKey":"actions/os/records","id-1280":"os.getPublicRecordKey","os.getRoomOptions":"actions/os/rooms","id-1133":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1148":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1137":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-1284":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-832":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-997":"os.goToDimension","os.goToURL":"actions/os/portals","id-1001":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-1302":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-1322":"os.grantInstRole","os.grantRecordMarkerPermission":"actions/os/records","id-1288":"os.grantRecordMarkerPermission","os.grantUserRole":"actions/os/records","id-1307":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1024":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-889":"os.hideBarcode","os.hideChat":"actions/os/input","id-772":"os.hideChat","os.hideHtml":"actions/os/portals","id-715":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-874":"os.hideQRCode","os.hideTips":"actions/os/portals","id-696":"os.hideTips","os.importAUX":"actions/os/files","id-938":"os.importAUX","os.inSheet":"actions/os/portals","id-1068":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-785":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-950":"os.isInDimension","os.isRecordKey":"actions/os/records","id-1337":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1118":"os.joinRoom","os.leaveRoom":"actions/os/rooms","id-1123":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-1268":"os.listBuiltinTags","os.listData":"actions/os/records","id-1367":"os.listData","os.listFormAnimations":"actions/os/animations","id-1475":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-1491":"os.listInstUpdates","os.listUserStudios":"actions/os/records","id-1436":"os.listUserStudios","os.loadInst":"actions/os/spaces","id-930":"os.loadInst","os.log":"actions/os/system","id-1061":"os.log","os.meetCommand":"actions/os/meets","id-1527":"os.meetCommand","os.meetFunction":"actions/os/meets","id-1532":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-1509":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-877":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1036":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1009":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-892":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-899":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-863":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1005":"os.openURL","os.parseBotsFromData":"actions/os/files","id-942":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1012":"os.playSound","os.raycast":"actions/os/portals","id-1449":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-1444":"os.raycastFromCamera","os.recordData":"actions/os/records","id-1341":"os.recordData","os.recordEvent":"actions/os/records","id-1424":"os.recordEvent","os.recordFile":"actions/os/records","id-1385":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-1348":"os.recordManualApprovalData","os.registerApp":"actions/os/app","id-1158":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1153":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-1513":"os.remoteCount","os.remotes":"actions/os/remotes","id-1488":"os.remotes","os.replaceDragBot":"actions/os/portals","id-946":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-1271":"os.reportInst","os.requestAuthBot":"actions/os/records","id-1274":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-1277":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-705":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-826":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-1330":"os.revokeInstRole","os.revokeRecordMarkerPermission":"actions/os/records","id-1295":"os.revokeRecordMarkerPermission","os.revokeUserRole":"actions/os/records","id-1315":"os.revokeUserRole","os.run":"actions/os/system","id-775":"os.run","os.setClipboard":"actions/os/clipboard","id-718":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1128":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1142":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1028":"os.share","os.showBarcode":"actions/os/barcodes","id-884":"os.showBarcode","os.showConfirm":"actions/os/portals","id-993":"os.showConfirm","os.showHtml":"actions/os/portals","id-711":"os.showHtml","os.showInputForTag":"actions/os/portals","id-977":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-700":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-870":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-857":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-860":"os.showUploadFiles","os.sleep":"actions/os/system","id-680":"os.sleep","os.startFormAnimation":"actions/os/animations","id-1464":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-1470":"os.stopFormAnimation","os.tip":"actions/os/portals","id-689":"os.tip","os.toast":"actions/os/portals","id-684":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-1517":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-934":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1163":"os.unregisterApp","os.version":"actions/os/system","id-779":"os.version","os.vrSupported":"actions/os/xr","id-811":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-911":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-919":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-913":"os.instLatency","os.instTimeOffset":"actions/os/time","id-915":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-917":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-909":"os.localTime","remote":"actions/os/event","id-559":"remote","sendRemoteData":"actions/os/event","id-571":"sendRemoteData","removeTags":"actions/data","id-364":"removeTags","renameTag":"actions/data","id-369":"renameTag","setTag":"actions/data","id-316":"setTag","setTagMask":"actions/data","id-322":"setTagMask","subtractMods":"actions/mods","id-380":"subtractMods","superShout":"actions/os/event","id-445":"superShout","uuid":"actions/data","id-582":"uuid","web.get":"actions/web","id-1958":"web.get","web.hook":"actions/web","id-1969":"web.hook","web.post":"actions/web","id-1963":"web.post","configBot":"actions/os/system","id-645":"configBot"}}')}}]);