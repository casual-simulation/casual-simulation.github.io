"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[2401],{9034:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>m,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var s=o(6106),a=o(7877);const i=JSON.parse('{"hash":"types/core","pageTitle":"Core Types","pageDescription":"Documentation for core types that are used throughout CasualOS.","pageSidebarLabel":"Core","contents":[{"id":37467,"order":9999,"name":"BotFilter","reflection":{"id":37467,"name":"BotFilter","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines a bot filter function.\\n\\nCommon bot filters are "},{"kind":"text","text":"[`byTag(tag, filter)`](ref:byTag)"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"BotFilter"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":900,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L900"}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":37468,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":900,"character":25,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L900"}],"signatures":[{"id":37469,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":37470,"name":"bot","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":42815,"name":"Bot","package":"@casual-simulation/aux-common","id":42815,"qualifiedName":"Bot"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},{"type":"literal","value":null}]}},"comment":{"text":"Defines a bot filter function.\\n\\nCommon bot filters are byTag","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"BotFilter"}]},"group":"01-core"},{"id":42926,"order":9999,"name":"BotSpace","reflection":{"id":42926,"name":"BotSpace","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"The possible bot spaces.\\n\\n- "},{"kind":"code","text":"`\\"shared\\"`"},{"kind":"text","text":" means that the bot is a normal bot.\\n- "},{"kind":"code","text":"`\\"local\\"`"},{"kind":"text","text":" means that the bot is stored in the [local storage](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage) partition.\\n- "},{"kind":"code","text":"`\\"tempLocal\\"`"},{"kind":"text","text":" means that the bot is stored in the [temporary](https://en.wikipedia.org/wiki/In-memory_database) partition.\\n- "},{"kind":"code","text":"`\\"tempShared\\"`"},{"kind":"text","text":" means that the bot is temporary and shared with other devices.\\n- "},{"kind":"code","text":"`\\"remoteTempShared\\"`"},{"kind":"text","text":" means that the bot is temporary and shared with this device from a remote device."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Space"}]},{"tag":"@docid","content":[{"kind":"text","text":"BotSpace"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":518,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L518"}],"type":{"type":"union","types":[{"type":"literal","value":"shared"},{"type":"literal","value":"local"},{"type":"literal","value":"tempLocal"},{"type":"literal","value":"history"},{"type":"literal","value":"admin"},{"type":"literal","value":"tempShared"},{"type":"literal","value":"remoteTempShared"},{"type":"literal","value":"certified"}]}},"comment":{"text":"The possible bot spaces.\\n\\n- `\\"shared\\"` means that the bot is a normal bot.\\n- `\\"local\\"` means that the bot is stored in the [local storage](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage) partition.\\n- `\\"tempLocal\\"` means that the bot is stored in the [temporary](https://en.wikipedia.org/wiki/In-memory_database) partition.\\n- `\\"tempShared\\"` means that the bot is temporary and shared with other devices.\\n- `\\"remoteTempShared\\"` means that the bot is temporary and shared with this device from a remote device.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Space"},{"tagName":"docid","text":"BotSpace"}]},"group":"01-core"},{"id":43014,"order":9999,"name":"BotState","reflection":{"id":43014,"name":"BotsState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that contains a set of bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with groups of bots.\\nFor example, the "},{"kind":"text","text":"[`diffSnapshots(first, second)`](ref:diffSnapshots)"},{"kind":"text","text":" function takes two bot states and produces the difference between them."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"BotState"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate a bot state with two bots\\nlet state = {\\n   [bot1.id]: bot1,\\n   [bot2.id]: bot2\\n};\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a bot by its ID from a bot state\\nlet bot = state[botId];\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":958,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L958"}],"indexSignature":{"id":43015,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets the bot in the state with the given ID."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":962,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L962"}],"parameters":[{"id":43016,"name":"id","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":42815,"name":"Bot","package":"@casual-simulation/aux-common","id":42815,"qualifiedName":"Bot"}}},"comment":{"text":"Defines an interface that contains a set of bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with groups of bots.\\nFor example, the diffSnapshots function takes two bot states and produces the difference between them.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"BotState"},{"tagName":"example","text":"```ts\\nCreate a bot state with two bots\\nlet state = {\\n   [bot1.id]: bot1,\\n   [bot2.id]: bot2\\n};\\n```"},{"tagName":"example","text":"```ts\\nGet a bot by its ID from a bot state\\nlet bot = state[botId];\\n```"}]},"group":"01-core"},{"id":42936,"order":9999,"name":"BotTagMasks","reflection":{"id":42936,"name":"BotTagMasks","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface for a map of tag masks to tag names.\\n\\nTag masks are special tags that can exist in a different space from the bot they are applied to.\\nThis makes it possible to have some local-only data applied to a shared bot for example.\\n\\nThe actual data structure is similar to the bot tags structure except that tags are additionally\\nsplit by the space that they originated from. This makes it possible to identify which space a tag came from and also\\nprevents cross-space conflicts.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface TagMasks {\\n     [space: string]: Tags;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"TagMasks"}]},{"tag":"@docid","content":[{"kind":"text","text":"BotTagMasks"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":604,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L604"}],"indexSignature":{"id":42937,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets the tag masks that are specific to the given space."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":608,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L608"}],"parameters":[{"id":42938,"name":"space","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":42939,"name":"Tags","package":"@casual-simulation/aux-common","id":42939,"qualifiedName":"BotTags"}}},"comment":{"text":"Defines an interface for a map of tag masks to tag names.\\n\\nTag masks are special tags that can exist in a different space from the bot they are applied to.\\nThis makes it possible to have some local-only data applied to a shared bot for example.\\n\\nThe actual data structure is similar to the bot tags structure except that tags are additionally\\nsplit by the space that they originated from. This makes it possible to identify which space a tag came from and also\\nprevents cross-space conflicts.\\n\\n```typescript\\ninterface TagMasks {\\n     [space: string]: Tags;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"TagMasks"},{"tagName":"docid","text":"BotTagMasks"}]},"group":"01-core"},{"id":42939,"order":9999,"name":"BotTags","reflection":{"id":42939,"name":"BotTags","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents a set of tags and their related values.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Tags {\\n     [tag: string]: any\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Tags"}]},{"tag":"@docid","content":[{"kind":"text","text":"BotTags"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":625,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L625"}],"indexSignature":{"id":43012,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets the given tag on the bot."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the #color on this bot\\nlet color = thisBot.tags.color;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a raw tag on this bot\\nlet rawTag = thisBot.raw.tag;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSet the #color tag to \\"red\\" on this bot\\nthisBot.tags.color = \\"red\\";\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSet a tempLocal tag mask for #color on this bot\\nthisBot.masks.color = \\"red\\";\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":936,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L936"}],"parameters":[{"id":43013,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},"comment":{"text":"Defines an interface that represents a set of tags and their related values.\\n\\n```typescript\\ninterface Tags {\\n     [tag: string]: any\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Tags"},{"tagName":"docid","text":"BotTags"}]},"group":"01-core"},{"id":42887,"order":9999,"name":"CompiledBotListeners","reflection":{"id":42887,"name":"CompiledBotListeners","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An interface that maps tag names to compiled listener functions.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Listeners {\\n     [tag: string]: (arg?: any) => any;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Listeners"}]},{"tag":"@docid","content":[{"kind":"text","text":"CompiledBotListeners"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":359,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L359"}],"indexSignature":{"id":42888,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the listener in the given tag.\\n\\nCan be one of the following:\\n- A function that takes an optional argument and returns a value.\\n- A function that takes the bot and tag name as arguments and returns a value."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":367,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L367"}],"parameters":[{"id":42889,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":42899,"name":"DynamicListener","package":"@casual-simulation/aux-common","id":42899,"qualifiedName":"DynamicListener"},{"type":"literal","value":null}]}}},"comment":{"text":"An interface that maps tag names to compiled listener functions.\\n\\n```typescript\\ninterface Listeners {\\n     [tag: string]: (arg?: any) => any;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Listeners"},{"tagName":"docid","text":"CompiledBotListeners"}]},"group":"01-core"},{"id":42893,"order":9999,"name":"CompiledBotModules","reflection":{"id":42893,"name":"CompiledBotModules","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An interface that maps module names to compiled modules.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Modules {\\n     [tag: string]: BotModule;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Listeners"}]},{"tag":"@docid","content":[{"kind":"text","text":"CompiledBotModules"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":402,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L402"}],"indexSignature":{"id":42894,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the listener in the given tag."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":406,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L406"}],"parameters":[{"id":42895,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../src/aux-common/bots/BotModule.ts","qualifiedName":"BotModule"},"name":"BotModule","package":"@casual-simulation/aux-common"}}},"comment":{"text":"An interface that maps module names to compiled modules.\\n\\n```typescript\\ninterface Modules {\\n     [tag: string]: BotModule;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Listeners"},{"tagName":"docid","text":"CompiledBotModules"}]},"group":"01-core"},{"id":42890,"order":9999,"name":"DynamicBotListeners","reflection":{"id":42890,"name":"DynamicBotListeners","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An interface that maps tag names to dynamic listeners which have been registered.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface DynamicListeners {\\n     [tag: string]: Listener[];\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"DynamicListeners"}]},{"tag":"@docid","content":[{"kind":"text","text":"DynamicBotListeners"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":384,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L384"}],"indexSignature":{"id":42891,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":385,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L385"}],"parameters":[{"id":42892,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"reference","target":42899,"name":"DynamicListener","package":"@casual-simulation/aux-common","id":42899,"qualifiedName":"DynamicListener"}}}},"comment":{"text":"An interface that maps tag names to dynamic listeners which have been registered.\\n\\n```typescript\\ninterface DynamicListeners {\\n     [tag: string]: Listener[];\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"DynamicListeners"},{"tagName":"docid","text":"DynamicBotListeners"}]},"group":"01-core"},{"id":37416,"order":9999,"name":"Mod","reflection":{"id":37416,"name":"Mod","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines a type that represents a mod.\\nThat is, a set of tags that can be applied to another bot."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Mod"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":621,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L621"}],"type":{"type":"union","types":[{"type":"reference","target":42939,"name":"Tags","package":"@casual-simulation/aux-common","id":42939,"qualifiedName":"BotTags"},{"type":"reference","target":42815,"name":"Bot","package":"@casual-simulation/aux-common","id":42815,"qualifiedName":"Bot"}]}},"comment":{"text":"Defines a type that represents a mod.\\nThat is, a set of tags that can be applied to another bot.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Mod"}]},"group":"01-core"},{"id":42878,"order":9999,"name":"ParsedBotLink","reflection":{"id":42878,"name":"ParsedBotLink","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents a bot link that was parsed from a tag."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"ParsedBotLink"}]}]},"children":[{"id":42880,"name":"botIDs","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The bot IDs that the link references."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":287,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L287"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":42879,"name":"tag","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tag that the link was parsed from."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":282,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L282"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[42880,42879]}],"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":278,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L278"}]},"comment":{"text":"Defines an interface that represents a bot link that was parsed from a tag.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"ParsedBotLink"}]},"group":"01-core"},{"id":43017,"order":9999,"name":"PartialBotState","reflection":{"id":43017,"name":"PartialBotsState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that contains a set of partial bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with differences between groups of bots.\\nFor example, the "},{"kind":"text","text":"[`applyDiffToSnapshot(snapshot, diff)`](ref:applyDiffToSnapshot)"},{"kind":"text","text":" function takes a bot state and a partial bot state and produces a final state that contains the combined result."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"PartialBotState"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":975,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L975"}],"indexSignature":{"id":43018,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":976,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L976"}],"parameters":[{"id":43019,"name":"id","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":42815,"name":"Bot","package":"@casual-simulation/aux-common","id":42815,"qualifiedName":"Bot"}],"name":"Partial","package":"typescript"}}},"comment":{"text":"Defines an interface that contains a set of partial bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with differences between groups of bots.\\nFor example, the applyDiffToSnapshot function takes a bot state and a partial bot state and produces a final state that contains the combined result.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"PartialBotState"}]},"group":"01-core"},{"id":42815,"order":9999,"name":"RuntimeBot","reflection":{"id":42815,"name":"RuntimeBot","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface for a bot in a script/formula.\\n\\nThe difference between this and Bot is that the tags\\nare calculated values and raw is the original tag values.\\n\\ni.e. tags will evaluate formulas while raw will return the formula scripts themselves."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Core Types"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Core"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Documentation for core types that are used throughout CasualOS."}]},{"tag":"@docid","content":[{"kind":"text","text":"RuntimeBot"}]},{"tag":"@docname","content":[{"kind":"text","text":"Bot"}]}]},"children":[{"id":42859,"name":"[ADD_BOT_LISTENER_SYMBOL]","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":224,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L224"}],"type":{"type":"reflection","declaration":{"id":42860,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":224,"character":31,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L224"}],"signatures":[{"id":42861,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Registers the given function as a listener for events that would trigger the given tag."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":224,"character":31,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L224"}],"parameters":[{"id":42862,"name":"tagName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the tag that the listener should be registered for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":42863,"name":"listener","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The listener function that should be called when the tag is triggered."}],"blockTags":[]},"type":{"type":"reference","target":42899,"name":"DynamicListener","package":"@casual-simulation/aux-common","id":42899,"qualifiedName":"DynamicListener"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":42869,"name":"[GET_DYNAMIC_LISTENERS_SYMBOL]","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":245,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L245"}],"type":{"type":"reflection","declaration":{"id":42870,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":245,"character":36,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L245"}],"signatures":[{"id":42871,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the list of dynamic listeners that are registered for the given tag."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The list of dynamic listeners for the tag, or null if none are registered."}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":245,"character":36,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L245"}],"parameters":[{"id":42872,"name":"tagName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the tag that the listeners are registered for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"reference","target":42899,"name":"DynamicListener","package":"@casual-simulation/aux-common","id":42899,"qualifiedName":"DynamicListener"}}}]}}},{"id":42864,"name":"[REMOVE_BOT_LISTENER_SYMBOL]","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":235,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L235"}],"type":{"type":"reflection","declaration":{"id":42865,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":235,"character":34,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L235"}],"signatures":[{"id":42866,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Unregisters the given function as a listener for events that would trigger the given tag."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":235,"character":34,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L235"}],"parameters":[{"id":42867,"name":"tagName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the tag that the listener should be unregistered for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":42868,"name":"listener","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The listener function that should be removed."}],"blockTags":[]},"type":{"type":"reference","target":42899,"name":"DynamicListener","package":"@casual-simulation/aux-common","id":42899,"qualifiedName":"DynamicListener"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":42824,"name":"changes","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The changes that have been made to the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":145,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L145"}],"type":{"type":"reference","target":42939,"name":"Tags","package":"@casual-simulation/aux-common","id":42939,"qualifiedName":"BotTags"}},{"id":42816,"name":"id","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ID of the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":103,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L103"}],"type":{"type":"intrinsic","name":"string"}},{"id":42817,"name":"link","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The link to the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":108,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L108"}],"type":{"type":"intrinsic","name":"string"}},{"id":42822,"name":"links","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tags on the bot that link to other bots."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":135,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L135"}],"type":{"type":"reference","target":42881,"name":"Links","package":"@casual-simulation/aux-common","id":42881,"qualifiedName":"RuntimeBotLinks"}},{"id":42827,"name":"listeners","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The calculated listener functions.\\nThis lets you get the compiled listener functions."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":163,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L163"}],"type":{"type":"reference","target":42887,"name":"Listeners","package":"@casual-simulation/aux-common","id":42887,"qualifiedName":"CompiledBotListeners"}},{"id":42825,"name":"maskChanges","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tag mask changes that have been made to the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":150,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L150"}],"type":{"type":"reference","target":42936,"name":"TagMasks","package":"@casual-simulation/aux-common","id":42936,"qualifiedName":"BotTagMasks"}},{"id":42821,"name":"masks","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tag masks that have been applied to this bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":130,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L130"}],"type":{"type":"reference","target":42939,"name":"Tags","package":"@casual-simulation/aux-common","id":42939,"qualifiedName":"BotTags"}},{"id":42820,"name":"raw","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The raw tag values. This lets you get the raw script text from formulas."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":125,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L125"}],"type":{"type":"reference","target":42939,"name":"Tags","package":"@casual-simulation/aux-common","id":42939,"qualifiedName":"BotTags"}},{"id":42818,"name":"space","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The space that the bot is in.\\nDefaults to "},{"kind":"code","text":"`\\"shared\\"`"}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":114,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L114"}],"type":{"type":"reference","target":42926,"name":"Space","package":"@casual-simulation/aux-common","id":42926,"qualifiedName":"BotSpace"}},{"id":42819,"name":"tags","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The calculated tag values.\\nThis lets you get the calculated values from formulas."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":120,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L120"}],"type":{"type":"reference","target":42939,"name":"Tags","package":"@casual-simulation/aux-common","id":42939,"qualifiedName":"ScriptTags"}},{"id":42823,"name":"vars","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The variables that the bot contains."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":140,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L140"}],"type":{"type":"reference","target":42884,"name":"Variables","package":"@casual-simulation/aux-common","id":42884,"qualifiedName":"RuntimeBotVars"}}],"groups":[{"title":"Properties","children":[42859,42869,42864,42824,42816,42817,42822,42827,42825,42821,42820,42818,42819,42823]}],"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":99,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L99"}],"indexSignature":{"id":42873,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the listener or bot property with the given name.\\n\\nIf given a property name, like "},{"kind":"code","text":"`\\"tags\\"`"},{"kind":"text","text":" or "},{"kind":"code","text":"`\\"vars\\"`"},{"kind":"text","text":", then it will return the value of that property.\\nAlternatively, if the name does not match an existing property on the bot, then it will return the listener with the given name."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the tags of a bot\\nlet tags = bot.tags;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the links of a bot\\nlet links = bot.links;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the\\n```"}]},{"tag":"@onClick","content":[{"kind":"text","text":"listener of a bot\\nlet onClick = bot.onClick;"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a property on a bot by a variable\\nlet propertyToGet = \'tags\';\\nlet tags = bot[propertyToGet];\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":268,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L268"}],"parameters":[{"id":42874,"name":"listenerOrProperty","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":42875,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":268,"character":35,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L268"}],"signatures":[{"id":42876,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":42877,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}},{"type":"intrinsic","name":"any"}]}}},"comment":{"text":"Defines an interface for a bot in a script/formula.\\n\\nThe difference between this and Bot is that the tags\\nare calculated values and raw is the original tag values.\\n\\ni.e. tags will evaluate formulas while raw will return the formula scripts themselves.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"doctitle","text":"Core Types"},{"tagName":"docsidebar","text":"Core"},{"tagName":"docdescription","text":"Documentation for core types that are used throughout CasualOS."},{"tagName":"docid","text":"RuntimeBot"},{"tagName":"docname","text":"Bot"}]},"group":"01-core"},{"id":42881,"order":9999,"name":"RuntimeBotLinks","reflection":{"id":42881,"name":"RuntimeBotLinks","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents the bot links a bot can have.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Links {\\n     [link: string]: Bot | Bot[];\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Links"}]},{"tag":"@docid","content":[{"kind":"text","text":"RuntimeBotLinks"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":304,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L304"}],"indexSignature":{"id":42882,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the bot or bots that are linked in the given tag."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a bot that is linked in the #manager tag\\nlet managerBot = thisBot.links.manager;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nLink a bot to another bot in the #manager tag\\nthisBot.links.manager = managerBot;\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":314,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L314"}],"parameters":[{"id":42883,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":42815,"name":"Bot","package":"@casual-simulation/aux-common","id":42815,"qualifiedName":"RuntimeBot"},{"type":"array","elementType":{"type":"reference","target":42815,"name":"Bot","package":"@casual-simulation/aux-common","id":42815,"qualifiedName":"RuntimeBot"}}]}}},"comment":{"text":"Defines an interface that represents the bot links a bot can have.\\n\\n```typescript\\ninterface Links {\\n     [link: string]: Bot | Bot[];\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Links"},{"tagName":"docid","text":"RuntimeBotLinks"}]},"group":"01-core"},{"id":42884,"order":9999,"name":"RuntimeBotVars","reflection":{"id":42884,"name":"RuntimeBotVars","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents the variables a bot can have.\\nVariables are useful for storing data that is not able to be saved to a tag.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Variables {\\n     [variable: string]: any;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Variables"}]},{"tag":"@docid","content":[{"kind":"text","text":"RuntimeBotVars"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":332,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L332"}],"indexSignature":{"id":42885,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets a variable on the bot."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a variable on thisBot\\nlet variable = thisBot.vars.variable;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSave a variable on thisBot\\nthisBot.vars.variable = variable;\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":342,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L342"}],"parameters":[{"id":42886,"name":"variable","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},"comment":{"text":"Defines an interface that represents the variables a bot can have.\\nVariables are useful for storing data that is not able to be saved to a tag.\\n\\n```typescript\\ninterface Variables {\\n     [variable: string]: any;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Variables"},{"tagName":"docid","text":"RuntimeBotVars"}]},"group":"01-core"},{"id":37412,"order":9999,"name":"TagFilter","reflection":{"id":37412,"name":"TagFilter","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines the possible values that can be used as a tag filter."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"TagFilter"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":605,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L605"}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":37413,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":606,"character":7,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L606"}],"signatures":[{"id":37414,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":37415,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]}},"comment":{"text":"Defines the possible values that can be used as a tag filter.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"TagFilter"}]},"group":"01-core"},{"id":43043,"order":9999,"name":"BotAnchorPoint","reflection":{"id":43043,"name":"BotAnchorPoint","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines the possible bot anchor points."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"BotAnchorPoint"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":1134,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L1134"}],"type":{"type":"union","types":[{"type":"literal","value":"top"},{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"literal","value":"left"},{"type":"literal","value":"right"},{"type":"literal","value":"bottom"},{"type":"literal","value":"center"},{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}]}},"comment":{"text":"Defines the possible bot anchor points.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"BotAnchorPoint"}]},"group":null},{"id":42929,"order":9999,"name":"PortalType","reflection":{"id":42929,"name":"PortalType","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"The possible portal types."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"PortalType"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":553,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/Bot.ts#L553"}],"type":{"type":"union","types":[{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"},{"type":"literal","value":"menu"},{"type":"literal","value":"sheet"},{"type":"literal","value":"meet"},{"type":"literal","value":"system"},{"type":"intrinsic","name":"string"}]}},"comment":{"text":"The possible portal types.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"PortalType"}]},"group":null},{"id":37812,"order":9999,"name":"PseudoRandomNumberGenerator","reflection":{"id":37812,"name":"PseudoRandomNumberGenerator","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface for a random number generator."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"PseudoRandomNumberGenerator"}]}]},"children":[{"id":37813,"name":"seed","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The seed used for this random number generator.\\nIf null then an unpredictable seed was used."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2116,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2116"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"id":37814,"name":"random","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2121,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2121"},{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2128,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2128"}],"signatures":[{"id":37815,"name":"random","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random number between 0 and 1."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2121,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2121"}],"type":{"type":"intrinsic","name":"number"}},{"id":37816,"name":"random","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random decimal number between the given min and max values."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2128,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2128"}],"parameters":[{"id":37817,"name":"min","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The minimum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":37818,"name":"max","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}]},{"id":37819,"name":"randomInt","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2135,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2135"}],"signatures":[{"id":37820,"name":"randomInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random integer between the given min and max values."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2135,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2135"}],"parameters":[{"id":37821,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The minimum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":37822,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The maximum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}]}],"groups":[{"title":"Properties","children":[37813]},{"title":"Methods","children":[37814,37819]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":2111,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-runtime/runtime/AuxLibrary.ts#L2111"}]},"comment":{"text":"Defines an interface for a random number generator.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"PseudoRandomNumberGenerator"}]},"group":null},{"id":39248,"order":9999,"name":"RegisterPrefixOptions","reflection":{"id":39248,"name":"RegisterPrefixOptions","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that contains options for register prefix actions."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"RegisterPrefixOptions"}]}]},"children":[{"id":39249,"name":"language","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The possible languages that prefixes can use."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":2533,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/BotEvents.ts#L2533"}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"javascript"},{"type":"literal","value":"typescript"},{"type":"literal","value":"json"},{"type":"literal","value":"jsx"},{"type":"literal","value":"tsx"}]}},{"id":39250,"name":"name","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the prefix."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":2538,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/BotEvents.ts#L2538"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[39249,39250]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":2529,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/11d0f0e7b/src/aux-common/bots/BotEvents.ts#L2529"}]},"comment":{"text":"Defines an interface that contains options for register prefix actions.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"RegisterPrefixOptions"}]},"group":null}],"references":{"CasualOSError":"types/error","id-43360":"CasualOSError","Rotation":"types/math/rotations","id-167":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-50560":"AIChatMessage","AIChatOptions":"types/ai","id-41150":"AIChatOptions","AICreateOpenAIRealtimeSessionTokenFailure":"types/ai","id-43519":"AICreateOpenAIRealtimeSessionTokenFailure","AICreateOpenAIRealtimeSessionTokenSuccess":"types/ai","id-43512":"AICreateOpenAIRealtimeSessionTokenSuccess","AIDataContent":"types/ai","id-50569":"AIDataContent","AIGenerateImageSuccess":"types/ai","id-37441":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-41190":"AIGenerateImageOptions","AIGenerateSkyboxAction":"types/ai","id-41157":"AIGenerateSkyboxAction","AIGenerateSkyboxBlockadeLabsOptions":"types/ai","id-41168":"AIGenerateSkyboxBlockadeLabsOptions","AIGenerateSkyboxOptions":"types/ai","id-41165":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-37434":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-37438":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-37444":"AIGeneratedImage","AISloydGenerateModelFailure":"types/ai","id-43506":"AISloydGenerateModelFailure","AISloydGenerateModelOptions":"types/ai","id-41226":"AISloydGenerateModelOptions","AISloydGenerateModelSuccess":"types/ai","id-43498":"AISloydGenerateModelSuccess","AITextContent":"types/ai","id-50567":"AITextContent","AIUrlContent":"types/ai","id-50572":"AIUrlContent","ARSupportedAction":"types/os/xr","id-39128":"ARSupportedAction","AddCountFailure":"types/records/events","id-45669":"AddCountFailure","AddCountSuccess":"types/records/events","id-45664":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-39261":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-39265":"AddDropSnapPointsAction","AddMapLayerAction":"types/os/maps","id-39662":"AddMapLayerAction","AnalyticsRecordEventAction":"types/os/portals","id-39704":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-37457":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-37752":"AttachDebuggerOptions","AuthData":"types/os/records","id-39437":"AuthData","DebuggerOptions":"types/debuggers/common","id-37768":"DebuggerOptions","AxisAndAngle":"types/math/rotations","id-213":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-39341":"BeginRecordingAction","BotIntersection":"types/os/portals","id-37961":"BotIntersection","BotTagMasks":"types/core","id-42936":"BotTagMasks","BotTags":"types/core","id-42939":"BotTags","BotState":"types/core","id-43014":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-39596":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-38968":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-39501":"CalculateRayFromCameraAction","CalculateScreenCoordinatesFromPositionAction":"types/os/portals","id-39522":"CalculateScreenCoordinatesFromPositionAction","CalculateScreenCoordinatesFromViewportCoordinatesAction":"types/os/portals","id-39515":"CalculateScreenCoordinatesFromViewportCoordinatesAction","CalculateViewportCoordinatesFromPositionAction":"types/os/portals","id-39508":"CalculateViewportCoordinatesFromPositionAction","CalculateViewportCoordinatesFromScreenCoordinatesAction":"types/os/portals","id-39529":"CalculateViewportCoordinatesFromScreenCoordinatesAction","CancelSoundAction":"types/os/audio","id-38974":"CancelSoundAction","CompiledBotListeners":"types/core","id-42887":"CompiledBotListeners","CompiledBotModules":"types/core","id-42893":"CompiledBotModules","ConfigureWakeLockAction":"types/os/portals","id-39691":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-39463":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-39459":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-44558":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-44554":"CreatePublicRecordKeySuccess","RealtimeSessionRequest":"types/ai","id-43383":"RealtimeSessionRequest","DataPermission":"types/permissions","id-355":"DataPermission","DebuggerCallFrame":"types/debuggers/common","id-37792":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-37800":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-37786":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-37746":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-37741":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-37806":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-39451":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-38980":"DownloadAction","DynamicBotListeners":"types/core","id-42890":"DynamicBotListeners","Easing":"types/animation","id-39078":"Easing","EnableARAction":"types/os/xr","id-39124":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-39055":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-39316":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-39142":"EnablePOVAction","EnableVRAction":"types/os/xr","id-39138":"EnableVRAction","EnableXROptions":"types/os/xr","id-39122":"EnableXROptions","EndRecordingAction":"types/os/audio","id-39353":"EndRecordingAction","EraseDataFailure":"types/records/data","id-45152":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-45148":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-45336":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-45332":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-216":"EulerAnglesRotation","EventPermission":"types/permissions","id-455":"EventPermission","ExitFullscreenAction":"types/os/portals","id-39157":"ExitFullscreenAction","FilePermission":"types/permissions","id-403":"FilePermission","FilePermissionOptions":"types/permissions","id-390":"FilePermissionOptions","FocusOnOptions":"types/os/camera","id-38671":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-38683":"FocusOnRotation","FormAnimationData":"types/os/animations","id-39651":"FormAnimationData","FromToRotation":"types/math/rotations","id-210":"FromToRotation","GeoJSONMapLayer":"types/os/maps","id-39678":"GeoJSONMapLayer","GetAverageFrameRateAction":"types/os/portals","id-39481":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-45680":"GetCountFailure","GetCountSuccess":"types/records/events","id-45674":"GetCountSuccess","GetDataFailure":"types/records/data","id-45143":"GetDataFailure","GetDataSuccess":"types/records/data","id-45134":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-39394":"GetGeolocationAction","GetLoomMetadataAction":"types/loom","id-39564":"GetLoomMetadataAction","GetRoomOptionsFailure":"types/os/portals","id-37913":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-37909":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-37947":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-37942":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-37923":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-37918":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-39385":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-39697":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-39421":"GoToTagAction","GrantEntitlementsRequest":"types/records/packages","id-42443":"GrantEntitlementsRequest","GrantMarkerPermissionFailure":"types/records/policies","id-49868":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-49866":"GrantMarkerPermissionSuccess","GrantResourcePermissionFailure":"types/records/policies","id-49891":"GrantResourcePermissionFailure","GrantResourcePermissionSuccess":"types/records/policies","id-49889":"GrantResourcePermissionSuccess","GrantRoleFailure":"types/records/roles","id-49950":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-49948":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-38667":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-38656":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-39213":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-39218":"HtmlAppMethodCallAction","HumePermission":"types/permissions","id-686":"HumePermission","ImageClassifierOptions":"types/os/image-classification","id-38793":"ImageClassifierOptions","InstConfig":"types/os/spaces","id-38837":"InstConfig","InstPermission":"types/permissions","id-581":"InstPermission","InstUpdate":"types/os/spaces","id-43353":"InstUpdate","JoinRoomFailure":"types/os/portals","id-37885":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-37882":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-37894":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-37891":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-45174":"ListDataFailure","ListDataSuccess":"types/records/data","id-45164":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-39645":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-44601":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-44598":"ListStudiosSuccess","ListedData":"types/records/data","id-45170":"ListedData","MarkerPermission":"types/permissions","id-50094":"MarkerPermission","ResourcePermission":"types/permissions","id-50083":"ResourcePermission","ListedStudio":"types/records/studios","id-44605":"ListedStudio","LoadInstAction":"types/os/spaces","id-38833":"LoadInstAction","LoadInstConfigAction":"types/os/spaces","id-38842":"LoadInstConfigAction","LoadSpaceAction":"types/os/spaces","id-39040":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-39071":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-39092":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-39107":"LocalTweenAction","LookRotation":"types/math/rotations","id-233":"LookRotation","LoomPermission":"types/permissions","id-616":"LoomPermission","LoomVideo":"types/loom","id-39577":"LoomVideo","LoomVideoEmbedMetadata":"types/loom","id-39588":"LoomVideoEmbedMetadata","MapLayerBase":"types/os/maps","id-39676":"MapLayerBase","MediaPermissionAction":"types/os/media","id-39474":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-39471":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-39358":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-39365":"MeetFunctionAction","NodeReference":"types/os/portals","id-39239":"NodeReference","Debugger":"types/debuggers/debugger","id-37564":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-37758":"NormalDebuggerOptions","NotificationPermission":"types/permissions","id-791":"NotificationPermission","OpenAIRealtimePermission":"types/permissions","id-721":"OpenAIRealtimePermission","OpenCircleWipeAction":"types/os/portals","id-39251":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-39258":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-38767":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-38755":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-38957":"OpenURLAction","PackagePermission":"types/permissions","id-826":"PackagePermission","PackageVersionPermission":"types/permissions","id-861":"PackageVersionPermission","ParsedBotLink":"types/core","id-42878":"ParsedBotLink","PartialBotState":"types/core","id-43017":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-37620":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-37763":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-37778":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-37773":"PauseTriggerOptions","Photo":"types/camera","id-38751":"Photo","PlaySoundAction":"types/os/audio","id-38961":"PlaySoundAction","Point2D":"types/os/portals","id-39684":"Point2D","Point3D":"types/os/portals","id-39687":"Point3D","PossiblePauseTriggerLocation":"types/debuggers/common","id-37736":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-37812":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-226":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-39486":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-39493":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-37970":"RaycastRay","RaycastResult":"types/os/portals","id-37958":"RaycastResult","RecordActionOptions":"types/records/extra","id-41237":"RecordActionOptions","RecordDataFailure":"types/records/data","id-45126":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-45122":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-37855":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-37851":"RecordFileSuccess","RecordFileRequest":"types/records/files","id-45302":"RecordFileRequest","RecordLoomAction":"types/loom","id-39549":"RecordLoomAction","RecordLoomOptions":"types/loom","id-39555":"RecordLoomOptions","RecordedFile":"types/experimental","id-39416":"RecordedFile","Recording":"types/experimental","id-39414":"Recording","RecordingOptions":"types/experimental","id-39333":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-39171":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-39177":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-39190":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-39248":"RegisterPrefixOptions","RejectAction":"types/os/event","id-39007":"RejectAction","RemoteAction":"types/os/event","id-61076":"RemoteAction","RemoveMapLayerAction":"types/os/maps","id-39669":"RemoveMapLayerAction","ReportInstAction":"types/os/moderation","id-39426":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-39431":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-39155":"RequestFullscreenAction","GrantRecordEntitlementsRequest":"types/records/packages","id-42463":"GrantRecordEntitlementsRequest","RevokeMarkerPermissionFailure":"types/records/policies","id-49879":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-49877":"RevokeMarkerPermissionSuccess","RevokePermissionFailure":"types/records/policies","id-49913":"RevokePermissionFailure","RevokePermissionSuccess":"types/records/policies","id-49911":"RevokePermissionSuccess","RevokeResourcePermissionFailure":"types/records/policies","id-49902":"RevokeResourcePermissionFailure","RevokeResourcePermissionSuccess":"types/records/policies","id-49900":"RevokeResourcePermissionSuccess","RevokeRoleFailure":"types/records/roles","id-49961":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-49959":"RevokeRoleSuccess","RolePermission":"types/permissions","id-534":"RolePermission","RolePermissionOptions":"types/permissions","id-525":"RolePermissionOptions","RoomJoinOptions":"types/os/portals","id-42571":"RoomJoinOptions","RoomOptions":"types/os/portals","id-42567":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-42626":"RoomRemoteOptions","RoomTrackOptions":"types/os/rooms","id-42604":"RoomTrackOptions","RunScriptAction":"types/os/system","id-39027":"RunScriptAction","RuntimeBot":"types/core","id-42815":"RuntimeBot","RuntimeBotLinks":"types/core","id-42881":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-42884":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-224":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-39227":"SerializableMutationRecord","SessionSelector":"types/os/event","id-37417":"SessionSelector","SetAppOutputAction":"types/os/portals","id-39202":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-39010":"SetClipboardAction","SetRoomOptionsFailure":"types/os/portals","id-37903":"SetRoomOptionsFailure","SetRoomOptionsSuccess":"types/os/portals","id-37900":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-42601":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-37935":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-37930":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-39163":"ShareAction","ShareOptions":"types/os/input","id-39159":"ShareOptions","ShowChatBarAction":"types/os/input","id-39013":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-39021":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-38938":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-38944":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-38662":"ShowHtmlAction","ShowInputItem":"types/os/input","id-38995":"ShowInputItem","ShowInputOptions":"types/os/input","id-38986":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-39151":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-38642":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-38647":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-39033":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-39035":"ShowUploadFilesAction","SloydPermission":"types/permissions","id-651":"SloydPermission","SnapAxis":"types/os/portals","id-39277":"SnapAxis","SnapGrid":"types/os/portals","id-39295":"SnapGrid","SnapGridTarget":"types/os/portals","id-37860":"SnapGridTarget","SnapPoint":"types/os/portals","id-39270":"SnapPoint","SpeakTextAction":"types/os/audio","id-39376":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-37479":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-39615":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-39602":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-39637":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-39634":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-39400":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-39390":"SyntheticVoice","TweenOptions":"types/experimental","id-37483":"TweenOptions","UnloadInstAction":"types/os/spaces","id-38846":"UnloadInstAction","UnloadInstConfigAction":"types/os/spaces","id-38850":"UnloadInstConfigAction","UnregisterCustomAppAction":"types/os/portals","id-39184":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-39197":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-39410":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-45694":"UpdateEventRecordFailure","UpdateEventRecordRequest":"types/records/events","id-45684":"UpdateEventRecordRequest","UpdateEventRecordSuccess":"types/records/events","id-45692":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-39207":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-37973":"UploadedFile","VRSupportedAction":"types/os/xr","id-39133":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-39702":"WakeLockConfiguration","WatchLoomAction":"types/loom","id-39558":"WatchLoomAction","WebhookOptions":"types/web","id-37422":"WebhookOptions","WebhookPermission":"types/permissions","id-756":"WebhookPermission","WebhookResult":"types/web","id-37843":"WebhookResult","AIChatContent":"types/ai","id-50566":"AIChatContent","AIChatMessageRole":"types/ai","id-50559":"AIChatMessageRole","AICreateOpenAIRealtimeSessionTokenResult":"types/ai","id-43511":"AICreateOpenAIRealtimeSessionTokenResult","AISloydGenerateModelResponse":"types/ai","id-43497":"AISloydGenerateModelResponse","ActionKinds":"types/permissions","id-274":"ActionKinds","AddCountResult":"types/records/events","id-45663":"AddCountResult","AvailablePermissions":"types/permissions","id-289":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-38776":"BarcodeFormat","BotAction":"types/os/event","id-38561":"BotAction","BotAnchorPoint":"types/core","id-43043":"BotAnchorPoint","BotFilter":"types/core","id-37467":"BotFilter","BotSpace":"types/core","id-42926":"BotSpace","CameraPortal":"types/os/portals","id-39683":"CameraPortal","CameraType":"types/os/camera","id-38730":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-44553":"CreatePublicRecordKeyResult","DataActionKinds":"types/permissions","id-275":"DataActionKinds","EaseMode":"types/animation","id-39077":"EaseMode","EaseType":"types/animation","id-39076":"EaseType","EraseDataResult":"types/records/data","id-45147":"EraseDataResult","EraseFileResult":"types/records/files","id-45331":"EraseFileResult","EventActionKinds":"types/permissions","id-277":"EventActionKinds","FileActionKinds":"types/permissions","id-276":"FileActionKinds","Geolocation":"types/os/geolocation","id-39399":"Geolocation","GetCountResult":"types/records/events","id-45673":"GetCountResult","GetDataResult":"types/records/data","id-45133":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-37908":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-37941":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-37917":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-49865":"GrantMarkerPermissionResult","GrantResourcePermissionResult":"types/records/policies","id-49888":"GrantResourcePermissionResult","GrantRoleResult":"types/records/roles","id-49947":"GrantRoleResult","HumeActionKinds":"types/permissions","id-283":"HumeActionKinds","InstActionKinds":"types/permissions","id-280":"InstActionKinds","JoinRoomResult":"types/os/portals","id-37881":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-37890":"LeaveRoomResult","ListDataResult":"types/records/data","id-45163":"ListDataResult","ListStudiosResult":"types/records/studios","id-44597":"ListStudiosResult","LoomActionKinds":"types/permissions","id-281":"LoomActionKinds","MapLayer":"types/os/maps","id-39675":"MapLayer","MarkerActionKinds":"types/permissions","id-278":"MarkerActionKinds","Mod":"types/core","id-37416":"Mod","NotificationActionKinds":"types/permissions","id-286":"NotificationActionKinds","OpenAIRealtimeActionKinds":"types/permissions","id-284":"OpenAIRealtimeActionKinds","PackageActionKinds":"types/permissions","id-287":"PackageActionKinds","PackageVersionActionKinds":"types/permissions","id-288":"PackageVersionActionKinds","PortalType":"types/core","id-42929":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-37740":"PossiblePauseTriggerStates","RecordDataResult":"types/records/data","id-45121":"RecordDataResult","RecordFileResult":"types/records/files","id-37850":"RecordFileResult","RecordUserPolicyType":"types/records/extra","id-41245":"RecordUserPolicyType","ResourceKinds":"types/permissions","id-253":"ResourceKinds","RevokeMarkerPermissionResult":"types/records/policies","id-49876":"RevokeMarkerPermissionResult","RevokeResourcePermissionResult":"types/records/policies","id-49899":"RevokeResourcePermissionResult","RevokeRoleResult":"types/records/roles","id-49958":"RevokeRoleResult","RoleActionKinds":"types/permissions","id-279":"RoleActionKinds","SetRoomOptionsResult":"types/os/portals","id-37899":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-37929":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-38999":"ShowInputSuptype","ShowInputType":"types/os/input","id-38998":"ShowInputType","SloydActionKinds":"types/permissions","id-282":"SloydActionKinds","SnapTarget":"types/os/portals","id-39289":"SnapTarget","StudioAssignmentRole":"types/records/studios","id-44935":"StudioAssignmentRole","SubjectType":"types/permissions","id-238":"SubjectType","TagFilter":"types/core","id-37412":"TagFilter","TrackKind":"types/records/rooms","id-42616":"TrackKind","TrackSource":"types/records/rooms","id-42617":"TrackSource","TrackVideoQuality":"types/os/rooms","id-42618":"TrackVideoQuality","UpdateEventRecordResult":"types/records/events","id-45691":"UpdateEventRecordResult","UserPolicy":"types/records/data","id-45248":"UserPolicy","WebhookActionKinds":"types/permissions","id-285":"WebhookActionKinds","animateTag-byOptions":"actions/os/animations","id-1383":"animateTag-byOptions","getbot-tag":"actions/data","id-1048":"getbot-tag","getbots-tag":"actions/data","id-1032":"getbots-tag","animateTag-byTag":"actions/os/animations","id-1377":"animateTag-byTag","changeState":"actions/data","id-1193":"changeState","create":"actions/data","id-1177":"create","destroy":"actions/data","id-1181":"destroy","getbot-filters":"actions/data","id-1041":"getbot-filters","getbots-filters":"actions/data","id-1025":"getbots-filters","priorityShout":"actions/os/event","id-1242":"priorityShout","shout":"actions/os/event","id-1255":"shout","updateBotLinks":"actions/data","id-1215":"updateBotLinks","whisper":"actions/os/event","id-1281":"whisper","action.perform":"actions/os/event","id-36890":"action.perform","action.reject":"actions/os/event","id-36894":"action.reject","ai.chat-string":"actions/ai","id-1442":"ai.chat-string","ai.chat-message":"actions/ai","id-1445":"ai.chat-message","ai.chat-messages":"actions/ai","id-1448":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-1461":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-1465":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-1453":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-1457":"ai.generateSkybox-request","ai.hume.getAccessToken":"actions/ai","id-1472":"ai.hume.getAccessToken","ai.openai.createRealtimeSession":"actions/ai","id-1498":"ai.openai.createRealtimeSession","ai.sloyd.generateModel":"actions/ai","id-1478":"ai.sloyd.generateModel","ai.stream.chat-string":"actions/ai","id-1485":"ai.stream.chat-string","ai.stream.chat-message":"actions/ai","id-1488":"ai.stream.chat-message","ai.stream.chat-messages":"actions/ai","id-1491":"ai.stream.chat-messages","applyDiffToSnapshot":"actions/data","id-1098":"applyDiffToSnapshot","applyMod":"actions/mods","id-1167":"applyMod","assert":"actions/debuggers","id-1426":"assert","assertEqual":"actions/debuggers","id-1431":"assertEqual","atPosition":"actions/bot-filters","id-1312":"atPosition","byCreator":"actions/bot-filters","id-1333":"byCreator","byID":"actions/bot-filters","id-1300":"byID","byMod":"actions/bot-filters","id-1304":"byMod","bySpace":"actions/bot-filters","id-1329":"bySpace","byTag":"actions/bot-filters","id-1295":"byTag","bytes.fromBase64String":"actions/bytes","id-37126":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-37143":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-37134":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-37122":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-37138":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-37130":"bytes.toHexString","clearAnimations":"actions/os/animations","id-1397":"clearAnimations","clearTagMasks":"actions/data","id-1121":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-37149":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-37155":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-37186":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-37179":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-37244":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-37239":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-37250":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-37235":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-37231":"crypto.asymmetric.keypair","crypto.decrypt":"actions/crypto","id-37220":"crypto.decrypt","crypto.encrypt":"actions/crypto","id-37215":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-37205":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-37210":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-37225":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-37254":"crypto.keypair","crypto.sha256":"actions/crypto","id-37171":"crypto.sha256","crypto.sha512":"actions/crypto","id-37175":"crypto.sha512","crypto.sign":"actions/crypto","id-37258":"crypto.sign","deleteTagMaskText":"actions/data","id-1148":"deleteTagMaskText","deleteTagText":"actions/data","id-1141":"deleteTagText","diffSnapshots":"actions/data","id-1093":"diffSnapshots","either":"actions/bot-filters","id-1337":"either","os.beginAudioRecording":"actions/os/audio","id-36942":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-36949":"experiment.beginRecording","experiment.createStaticHtmlFromBots":"actions/experimental","id-36937":"experiment.createStaticHtmlFromBots","os.endAudioRecording":"actions/os/audio","id-36946":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-36953":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-36927":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-36961":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-36900":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-36905":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-36916":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-36956":"experiment.speakText","getBotLinks":"actions/data","id-1211":"getBotLinks","getBotPosition":"actions/data","id-1067":"getBotPosition","getBotRotation":"actions/data","id-1072":"getBotRotation","getBotTagValues":"actions/data","id-1057":"getBotTagValues","getFormattedJSON":"actions/data","id-1085":"getFormattedJSON","getID":"actions/data","id-1077":"getID","getJSON":"actions/data","id-1081":"getJSON","getLink":"actions/data","id-1207":"getLink","getMod":"actions/mods","id-1062":"getMod","getSnapshot":"actions/data","id-1089":"getSnapshot","getTag":"actions/data","id-1103":"getTag","inDimension":"actions/bot-filters","id-1308":"inDimension","inStack":"actions/bot-filters","id-1318":"inStack","insertTagMaskText":"actions/data","id-1133":"insertTagMaskText","insertTagText":"actions/data","id-1126":"insertTagText","loom.getVideoEmbedMetadata-video":"actions/loom","id-36976":"loom.getVideoEmbedMetadata-video","loom.getVideoEmbedMetadata-sharedUrl":"actions/loom","id-36978":"loom.getVideoEmbedMetadata-sharedUrl","loom.recordVideo":"actions/loom","id-36966":"loom.recordVideo","loom.watchVideo-video":"actions/loom","id-36970":"loom.watchVideo-video","loom.watchVideo-sharedUrl":"actions/loom","id-36972":"loom.watchVideo-sharedUrl","math.abs":"actions/math","id-36996":"math.abs","math.addVectors":"actions/math","id-37066":"math.addVectors","math.areClose":"actions/math","id-37097":"math.areClose","math.avg":"actions/math","id-36988":"math.avg","math.degreesToRadians":"actions/math","id-37022":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-37062":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-37030":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-37004":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-37039":"math.intersectPlane","math.negateVector":"actions/math","id-37076":"math.negateVector","math.normalizeVector":"actions/math","id-37081":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-37026":"math.radiansToDegrees","math.random":"actions/math","id-37017":"math.random","math.randomInt":"actions/math","id-37012":"math.randomInt","math.scaleVector":"actions/math","id-37091":"math.scaleVector","math.setRandomSeed":"actions/math","id-37008":"math.setRandomSeed","math.sqrt":"actions/math","id-36992":"math.sqrt","math.stdDev":"actions/math","id-37000":"math.stdDev","math.subtractVectors":"actions/math","id-37071":"math.subtractVectors","math.sum":"actions/math","id-36984":"math.sum","math.vectorLength":"actions/math","id-37086":"math.vectorLength","neighboring":"actions/bot-filters","id-1323":"neighboring","not":"actions/bot-filters","id-1344":"not","os.attachDebugger":"actions/debuggers","id-36846":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-36835":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-36839":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-1583":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-1588":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-36843":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-1610":"showChat-options","showChat-placeholder":"actions/os/input","id-1606":"showChat-placeholder","os.showInput":"actions/os/portals","id-1860":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1930":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1921":"os.addBotDropSnap","os.addBotListener":"actions/os/event","id-1506":"os.addBotListener","os.addDropGrid":"actions/os/portals","id-1926":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1917":"os.addDropSnap","os.addMapLayer":"actions/os/maps","id-36760":"os.addMapLayer","os.applyUpdatesToInst":"actions/os/spaces","id-36783":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-1657":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-36724":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1893":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-36696":"os.calculateRayFromCamera","os.calculateScreenCoordinatesFromPosition":"actions/os/portals","id-36711":"os.calculateScreenCoordinatesFromPosition","os.calculateScreenCoordinatesFromPosition-array":"actions/os/portals","id-36714":"os.calculateScreenCoordinatesFromPosition-array","os.calculateScreenCoordinatesFromViewportCoordinates":"actions/os/portals","id-36706":"os.calculateScreenCoordinatesFromViewportCoordinates","os.calculateViewportCoordinatesFromPosition":"actions/os/portals","id-36701":"os.calculateViewportCoordinatesFromPosition","os.calculateViewportCoordinatesFromScreenCoordinates":"actions/os/portals","id-36719":"os.calculateViewportCoordinatesFromScreenCoordinates","os.cancelSound":"actions/os/audio","id-1897":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-1766":"os.capturePhoto","os.capturePortalScreenshot":"actions/os/portals","id-1773":"os.capturePortalScreenshot","os.classifyImages":"actions/os/image-classification","id-1758":"os.classifyImages","os.closeBarcodeScanner":"actions/os/barcodes","id-1740":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1909":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-1755":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-1770":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-1726":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-2044":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-36681":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-36587":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-36779":"os.createInitializationUpdate","os.device":"actions/os/system","id-1628":"os.device","os.disableAR":"actions/os/xr","id-1647":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-1672":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-1654":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-1678":"os.disableWakeLock","os.download":"actions/os/files","id-1684":"os.download","os.downloadBots":"actions/os/files","id-1690":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-1695":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-1713":"os.downloadInst","os.enableAR":"actions/os/xr","id-1643":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-1634":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1935":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-1663":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-1650":"os.enableVR","os.eraseData":"actions/os/records","id-36423":"os.eraseData","os.eraseFile-result":"actions/os/records","id-36571":"os.eraseFile-result","os.eraseFile-url":"actions/os/records","id-36575":"os.eraseFile-url","os.eraseManualApprovalData":"actions/os/records","id-36429":"os.eraseManualApprovalData","os.eraseNotification":"actions/os/records","id-36485":"os.eraseNotification","os.erasePackageVersion":"actions/os/records","id-36611":"os.erasePackageVersion","os.eraseWebhook":"actions/os/records","id-36454":"os.eraseWebhook","os.exitFullscreenMode":"actions/os/portals","id-1551":"os.exitFullscreenMode","os.formatVersionKey":"actions/os/records","id-36597":"os.formatVersionKey","os.getAuxFileForBots":"actions/os/files","id-1700":"os.getAuxFileForBots","os.getAverageFrameRate":"actions/os/portals","id-1992":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1948":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1952":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-1828":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-1834":"os.getCurrentInst","os.getCurrentInstRecord":"actions/os/portals","id-1837":"os.getCurrentInstRecord","os.getCurrentInstUpdate":"actions/os/spaces","id-36787":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-36398":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-1850":"os.getDimensionalDepth","os.getFile-result":"actions/os/records","id-36549":"os.getFile-result","os.getFile-url":"actions/os/records","id-36552":"os.getFile-url","os.getFocusPoint":"actions/os/portals","id-1960":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1942":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1985":"os.getInputList","os.getInputState":"actions/os/portals","id-1980":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-36775":"os.getInstStateFromUpdates","os.getLocalDocument":"actions/os/documents","id-36809":"os.getLocalDocument","os.getManualApprovalData":"actions/os/records","id-36404":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1988":"os.getMediaPermission","os.getMemoryDocument":"actions/os/documents","id-36813":"os.getMemoryDocument","os.getMenuDimension":"actions/os/portals","id-1840":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-1843":"os.getMiniPortalDimension","os.getWebhook":"actions/os/records","id-36479":"os.getWebhook","os.getPackageContainer":"actions/os/records","id-36657":"os.getPackageContainer","os.getPackageVersion":"actions/os/records","id-36624":"os.getPackageVersion","os.getPointerDirection":"actions/os/portals","id-1976":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1964":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1968":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-1846":"os.getPortalDimension","os.getPrivateFile-result":"actions/os/records","id-36563":"os.getPrivateFile-result","os.getPrivateFile-url":"actions/os/records","id-36566":"os.getPrivateFile-url","os.getPublicFile-result":"actions/os/records","id-36557":"os.getPublicFile-result","os.getPublicFile-url":"actions/os/records","id-36559":"os.getPublicFile-url","os.getPublicRecordKey":"actions/os/records","id-36325":"os.getPublicRecordKey","os.getRecordsEndpoint":"actions/os/records","id-36678":"os.getRecordsEndpoint","os.getRoomOptions":"actions/os/rooms","id-2010":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-2025":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-2014":"os.getRoomTrackOptions","os.getShareDocument-name":"actions/os/documents","id-36801":"os.getShareDocument-name","os.getSharedDocument-recordName-inst-name":"actions/os/documents","id-36803":"os.getSharedDocument-recordName-inst-name","os.getSubjectlessPublicRecordKey":"actions/os/records","id-36329":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-1681":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-1874":"os.goToDimension","os.goToURL":"actions/os/portals","id-1878":"os.goToURL","os.grantEntitlements":"actions/os/records","id-36601":"os.grantEntitlements","os.grantInstAdminPermission":"actions/os/records","id-36345":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-36365":"os.grantInstRole","os.grantPermission":"actions/os/records","id-36333":"os.grantPermission","os.grantUserRole":"actions/os/records","id-36350":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1901":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-1748":"os.hideBarcode","os.hideChat":"actions/os/input","id-1618":"os.hideChat","os.hideHtml":"actions/os/portals","id-1561":"os.hideHtml","os.hideLoadingScreen":"actions/os/portals","id-1554":"os.hideLoadingScreen","os.hideQRCode":"actions/os/barcodes","id-1733":"os.hideQRCode","os.hideTips":"actions/os/portals","id-1539":"os.hideTips","os.importAUX":"actions/os/files","id-1812":"os.importAUX","os.inSheet":"actions/os/portals","id-1945":"os.inSheet","os.installAuxFile":"actions/os/files","id-1705":"os.installAuxFile","os.installPackage":"actions/os/records","id-36663":"os.installPackage","os.isCollaborative":"actions/os/spaces","id-1631":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-1824":"os.isInDimension","os.isRecordKey":"actions/os/records","id-36380":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1995":"os.joinRoom","os.ldrawCountTextBuildSteps":"actions/os/ldraw","id-36743":"os.ldrawCountTextBuildSteps","os.leaveRoom":"actions/os/rooms","id-2000":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-36313":"os.listBuiltinTags","os.listData":"actions/os/records","id-36410":"os.listData","os.listDataByMarker":"actions/os/records","id-36416":"os.listDataByMarker","os.listFormAnimations":"actions/os/animations","id-36739":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-36772":"os.listInstUpdates","os.listInstalledPackages":"actions/os/records","id-36670":"os.listInstalledPackages","os.listNotificationSubscriptions":"actions/os/records","id-36532":"os.listNotificationSubscriptions","os.listNotifications":"actions/os/records","id-36491":"os.listNotifications","os.listNotificationsByMarker":"actions/os/records","id-36497":"os.listNotificationsByMarker","os.listPackageContainers":"actions/os/records","id-36644":"os.listPackageContainers","os.listPackageContainersByMarker":"actions/os/records","id-36650":"os.listPackageContainersByMarker","os.listPackageVersions":"actions/os/records","id-36618":"os.listPackageVersions","os.listUserNotificationSubscriptions":"actions/os/records","id-36538":"os.listUserNotificationSubscriptions","os.listUserStudios":"actions/os/records","id-36674":"os.listUserStudios","os.listWebhooks":"actions/os/records","id-36460":"os.listWebhooks","os.listWebhooksByMarker":"actions/os/records","id-36466":"os.listWebhooksByMarker","os.loadInst":"actions/os/spaces","id-1800":"os.loadInst","os.loadInst-config":"actions/os/spaces","id-1802":"os.loadInst-config","os.log":"actions/os/system","id-1938":"os.log","os.meetCommand":"actions/os/meets","id-36823":"os.meetCommand","os.meetFunction":"actions/os/meets","id-36828":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-36790":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-1736":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1913":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1886":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-1751":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-1762":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-1722":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1882":"os.openURL","os.parseBotsFromData":"actions/os/files","id-1816":"os.parseBotsFromData","os.parseVersionKey":"actions/os/records","id-36593":"os.parseVersionKey","os.playSound":"actions/os/audio","id-1889":"os.playSound","os.raycast":"actions/os/portals","id-36690":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-36685":"os.raycastFromCamera","os.recordData":"actions/os/records","id-36384":"os.recordData","os.recordEvent":"actions/os/records","id-36581":"os.recordEvent","os.recordFile":"actions/os/records","id-36542":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-36391":"os.recordManualApprovalData","os.recordNotification":"actions/os/records","id-36473":"os.recordNotification","os.recordPackageContainer":"actions/os/records","id-36631":"os.recordPackageContainer","os.recordPackageVersion":"actions/os/records","id-36606":"os.recordPackageVersion","os.recordWebhook":"actions/os/records","id-36435":"os.recordWebhook","os.registerApp":"actions/os/app","id-2035":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-2030":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-36794":"os.remoteCount","os.remotes":"actions/os/remotes","id-36769":"os.remotes","os.removeBotListener":"actions/os/event","id-1512":"os.removeBotListener","os.removeMapLayer":"actions/os/maps","id-36765":"os.removeMapLayer","os.replaceDragBot":"actions/os/portals","id-1820":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-36316":"os.reportInst","os.requestAuthBot":"actions/os/records","id-36319":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-36322":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-1548":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-1675":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-36373":"os.revokeInstRole","os.revokePermission":"actions/os/records","id-36339":"os.revokePermission","os.revokeUserRole":"actions/os/records","id-36358":"os.revokeUserRole","os.run":"actions/os/system","id-1621":"os.run","os.runWebhook":"actions/os/records","id-36441":"os.runWebhook","os.sendNotification":"actions/os/records","id-36515":"os.sendNotification","os.setClipboard":"actions/os/clipboard","id-1564":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-2005":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-2019":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1905":"os.share","os.showAccountInfo":"actions/os/system","id-1637":"os.showAccountInfo","os.showBarcode":"actions/os/barcodes","id-1743":"os.showBarcode","os.showConfirm":"actions/os/portals","id-1870":"os.showConfirm","os.showHtml":"actions/os/portals","id-1557":"os.showHtml","os.showInputForTag":"actions/os/portals","id-1854":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-1543":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-1729":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-1716":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-1719":"os.showUploadFiles","os.sleep":"actions/os/system","id-1518":"os.sleep","os.startFormAnimation":"actions/os/animations","id-36728":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-36734":"os.stopFormAnimation","os.subscribeToNotification":"actions/os/records","id-36504":"os.subscribeToNotification","os.tip":"actions/os/portals","id-1532":"os.tip","os.toast":"actions/os/portals","id-1522":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-36798":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-1806":"os.unloadInst","os.unloadInst-config":"actions/os/spaces","id-1808":"os.unloadInst-config","os.unregisterApp":"actions/os/app","id-2040":"os.unregisterApp","os.unsubscribeFromNotification":"actions/os/records","id-36510":"os.unsubscribeFromNotification","os.version":"actions/os/system","id-1625":"os.version","os.vrSupported":"actions/os/xr","id-1660":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-1777":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-1785":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-1779":"os.instLatency","os.instTimeOffset":"actions/os/time","id-1781":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-1783":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-1775":"os.localTime","remote":"actions/os/event","id-1351":"remote","sendRemoteData":"actions/os/event","id-1363":"sendRemoteData","removeTags":"actions/data","id-1156":"removeTags","renameTag":"actions/data","id-1161":"renameTag","setTag":"actions/data","id-1108":"setTag","setTagMask":"actions/data","id-1114":"setTagMask","subtractMods":"actions/mods","id-1172":"subtractMods","superShout":"actions/os/event","id-1237":"superShout","uuid":"actions/data","id-1374":"uuid","web.get":"actions/web","id-37277":"web.get","web.hook":"actions/web","id-37288":"web.hook","web.post":"actions/web","id-37282":"web.post","configBot":"actions/os/system","id-1437":"configBot"}}');var n=o(1314);o(3473),o(2396);const r={id:"core",title:"Core Types",sidebar_label:"Core",description:"Documentation for core types that are used throughout CasualOS."},c=void 0,d={id:"types/core",title:"Core Types",description:"Documentation for core types that are used throughout CasualOS.",source:"@site/docs/types/core.mdx",sourceDirName:"types",slug:"/types/core",permalink:"/types/core",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/types/core.mdx",tags:[],version:"current",frontMatter:{id:"core",title:"Core Types",sidebar_label:"Core",description:"Documentation for core types that are used throughout CasualOS."},sidebar:"docs",previous:{title:"AI",permalink:"/types/ai"},next:{title:"Common",permalink:"/types/debuggers/common"}},m={},l=[...(0,n.G$)(i)];function p(t){return(0,s.jsx)(n.D1,{doc:i})}function u(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(p,{...t})}):p()}}}]);