"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[9440],{7276:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var n=o(5250),s=o(5545);const i=JSON.parse('{"hash":"actions/event","pageTitle":"Event Actions","pageDescription":"Event actions are used to send events to bots.","pageSidebarLabel":"Events","contents":[{"id":1591,"order":9999,"name":"action.perform","reflection":{"id":1591,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the given action.\\nThis function can be used to perform actions that you have stored as data without having to find out which function to call. You can find a list of action types [here](https://github.com/casual-simulation/casualos/blob/develop/src/aux-common/bots/BotEvents.ts#L40)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPerform a toast action\\naction.perform({\\n    type: \'show_toast\',\\n    message: \'Hello, world!\',\\n    duration: 2000\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPerform an add bot action\\naction.perform({\\n    type: \'add_bot\',\\n    id: \'bot_id\',\\n    bot: {\\n        id: \'bot_id\',\\n        tags: {\\n            home: true,\\n            label: \'Hello, World!\'\\n        }\\n    }\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"action.perform"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":10685,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L10685"}],"parameters":[{"id":1592,"name":"action","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the action that should be performed."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Performs the given action.\\nThis function can be used to perform actions that you have stored as data without having to find out which function to call. You can find a list of action types [here](https://github.com/casual-simulation/casualos/blob/develop/src/aux-common/bots/BotEvents.ts#L40).","tags":[{"tagName":"example","text":"```ts\\nPerform a toast action\\naction.perform({\\n    type: \'show_toast\',\\n    message: \'Hello, world!\',\\n    duration: 2000\\n});\\n```"},{"tagName":"example","text":"```ts\\nPerform an add bot action\\naction.perform({\\n    type: \'add_bot\',\\n    id: \'bot_id\',\\n    bot: {\\n        id: \'bot_id\',\\n        tags: {\\n            home: true,\\n            label: \'Hello, World!\'\\n        }\\n    }\\n});\\n```"},{"tagName":"dochash","text":"actions/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"action.perform"}]},"group":"01-event-actions"},{"id":1595,"order":9999,"name":"action.reject","reflection":{"id":1595,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Prevents a previous action from being performed.\\n\\nThis is especially useful when used in a "},{"kind":"text","text":"[`@onAnyAction`](tags:@onAnyAction)"},{"kind":"text","text":" listener since it lets you reject actions before they are performed."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPrevent a toast message from being performed.\\nconst toastAction = os.toast(\\"my message\\");\\naction.reject(toastAction);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"action.reject"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":10752,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L10752"}],"parameters":[{"id":1596,"name":"action","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the action that should be prevented/rejected."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":2902,"name":"RejectAction","package":"@casual-simulation/aux-common","id":2902,"qualifiedName":"RejectAction"}},"comment":{"text":"Prevents a previous action from being performed.\\n\\nThis is especially useful when used in a @onAnyAction listener since it lets you reject actions before they are performed.","tags":[{"tagName":"example","text":"```ts\\nPrevent a toast message from being performed.\\nconst toastAction = os.toast(\\"my message\\");\\naction.reject(toastAction);\\n```"},{"tagName":"dochash","text":"actions/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"action.reject"}]},"group":"01-event-actions"},{"id":450,"order":9999,"name":"priorityShout","reflection":{"id":450,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shouts to all bots that are "},{"kind":"text","text":"[`#listening`](tags:listening)"},{"kind":"text","text":" and have a listen tag for the specified events until one of the bots returns a value.\\nOptionally includes a custom that argument.\\nAlso triggers "},{"kind":"text","text":"[`@onListen`](tags:@onListen)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onAnyListen`](tags:@onAnyListen)"},{"kind":"text","text":" for the bots that the shout was sent to.\\n\\nThis function is useful when you want to shout but only want one bot to process the shout."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShout to the first bot that handles\\n```"}]},{"tag":"@onClick","content":[{"kind":"text","text":"priorityShout([\'onClick\']);"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShout to the first bot that handles\\n```"}]},{"tag":"@myTest","content":[{"kind":"text","text":"or"}]},{"tag":"@mySecondTest","content":[{"kind":"text","text":"priorityShout([\'myTest\', \'mySecondTest\']);"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPriority shout with a color\\npriorityShout([\'myTest\', \'mySecondTest\'], \\"blue\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"priorityShout"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13938,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L13938"}],"parameters":[{"id":451,"name":"eventNames","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the array of event names that should be shouted. e.g. Using onClick for the name will trigger the "},{"kind":"text","text":"[`@onClick`](tags:@onClick)"},{"kind":"text","text":" listener until a bot returns a value."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":452,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Shouts to all bots that are listening and have a listen tag for the specified events until one of the bots returns a value.\\nOptionally includes a custom that argument.\\nAlso triggers @onListen and @onAnyListen for the bots that the shout was sent to.\\n\\nThis function is useful when you want to shout but only want one bot to process the shout.","tags":[{"tagName":"example","text":"```ts\\nShout to the first bot that handles\\n```"},{"tagName":"onClick","text":"priorityShout([\'onClick\']);"},{"tagName":"example","text":"```ts\\nShout to the first bot that handles\\n```"},{"tagName":"myTest","text":"or"},{"tagName":"mySecondTest","text":"priorityShout([\'myTest\', \'mySecondTest\']);"},{"tagName":"example","text":"```ts\\nPriority shout with a color\\npriorityShout([\'myTest\', \'mySecondTest\'], \\"blue\\");\\n```"},{"tagName":"dochash","text":"actions/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"priorityShout"}]},"group":"01-event-actions"},{"id":559,"order":9999,"name":"remote","reflection":{"id":559,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends the given action to another remote.\\n\\nIn CasualOS, all actions are messages which are placed in a queue and processed one at at time.\\n\\nFor example, the "},{"kind":"text","text":"[`os.toast(message, duration)`](ref:os.toast)"},{"kind":"text","text":" action queues a message which, when processed, will show a toast message.\\nHowever, before any action is performed, it is run through the "},{"kind":"text","text":"[`@onAnyAction`](tags:@onAnyAction)"},{"kind":"text","text":" listener which can decide whether to reject an action using "},{"kind":"text","text":"[`action.reject(action)`](ref:action.reject)"},{"kind":"text","text":".\\nThis lets you write rules for what actions each player is allowed to take.\\n\\nThere are a couple special cases. First, when you send/receive an action from someone else (i.e. they sent an action to you using the "},{"kind":"text","text":"[`remote(action, selector, allowBatching)`](ref:remote)"},{"kind":"text","text":" function), it won\'t run by default.\\nInstead it is wrapped as a device action and sent to "},{"kind":"text","text":"[`@onAnyAction`](tags:@onAnyAction)"},{"kind":"text","text":" for processing. This lets you decide whether to allow players to send messages to each other and what the effect of those messages are.\\nIf you want to perform the action, you can use "},{"kind":"text","text":"[`action.perform(action)`](ref:action.perform)"},{"kind":"text","text":" on the inner device action to queue it for execution."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a toast message to another remote.\\n// Get the configBot ID of the other remote.\\nconst otherRemoteId = \'otherRemoteId\';\\n\\n// Create a toast action\\nconst toastAction = os.toast(\'My message!\');\\n\\n// Send the action to the other remote\\n// The toastAction will not be performed locally because\\n// it is being sent to another remote.\\nremote(toastAction, otherRemoteId);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"remote"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9823,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9823"}],"parameters":[{"id":560,"name":"action","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the action to send."}],"blockTags":[]},"type":{"type":"reference","target":{"sourceFileName":"../src/aux-common/bots/BotEvents.ts","qualifiedName":"BotAction"},"name":"BotAction","package":"@casual-simulation/aux-common"}},{"id":561,"name":"selector","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the object specifing which remote to send the action to.\\nIf not specified, then the action is sent to the server.\\nIf specified, then the action is sent to all remotes that match the given values.\\nIf given a string, then the action is sent to the remote with the matching ID."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":2486,"name":"SessionSelector","package":"@casual-simulation/aux-runtime","id":2486,"qualifiedName":"SessionSelector"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":2486,"name":"SessionSelector","package":"@casual-simulation/aux-runtime","id":2486,"qualifiedName":"SessionSelector"}]}}]}},{"id":562,"name":"allowBatching","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to allow batching this remote event with other remote events. This will preserve ordering between remote events but may not preserve ordering\\n                     with respect to other events. Defaults to true."}],"blockTags":[]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"reference","target":3807,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":3807,"qualifiedName":"RemoteAction"},{"type":"array","elementType":{"type":"reference","target":3807,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":3807,"qualifiedName":"RemoteAction"}}]}},"comment":{"text":"Sends the given action to another remote.\\n\\nIn CasualOS, all actions are messages which are placed in a queue and processed one at at time.\\n\\nFor example, the os.toast action queues a message which, when processed, will show a toast message.\\nHowever, before any action is performed, it is run through the @onAnyAction listener which can decide whether to reject an action using action.reject.\\nThis lets you write rules for what actions each player is allowed to take.\\n\\nThere are a couple special cases. First, when you send/receive an action from someone else (i.e. they sent an action to you using the remote function), it won\'t run by default.\\nInstead it is wrapped as a device action and sent to @onAnyAction for processing. This lets you decide whether to allow players to send messages to each other and what the effect of those messages are.\\nIf you want to perform the action, you can use action.perform on the inner device action to queue it for execution.","tags":[{"tagName":"example","text":"```ts\\nSend a toast message to another remote.\\n// Get the configBot ID of the other remote.\\nconst otherRemoteId = \'otherRemoteId\';\\n\\n// Create a toast action\\nconst toastAction = os.toast(\'My message!\');\\n\\n// Send the action to the other remote\\n// The toastAction will not be performed locally because\\n// it is being sent to another remote.\\nremote(toastAction, otherRemoteId);\\n```"},{"tagName":"dochash","text":"actions/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"remote"}]},"group":"01-event-actions"},{"id":571,"order":9999,"name":"sendRemoteData","reflection":{"id":571,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a "},{"kind":"text","text":"[`@onRemoteData`](tags:@onRemoteData)"},{"kind":"text","text":" shout to the remote with the given ID or remotes if given a list of IDs. This is useful for sending arbitrary messages to specific remotes.\\n\\nIn effect, this allows remotes to communicate with each other by sending arbitrary events."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a \\"custom\\" message to another remote.\\nconst otherRemoteId = \\"otherRemoteId\\";\\n\\n// The other remote will receive a\\n```"}]},{"tag":"@onRemoteData","content":[{"kind":"text","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemoteId, \\"custom\\", \\"Hello\\");"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to all other remotes.\\nconst remotes = await os.remotes();\\nconst remoteId = getID(configBot);\\nconst otherRemotes = remotes.filter(id => id !== remoteId);\\n\\n// All other remotes will receive a\\n```"}]},{"tag":"@onRemoteData","content":[{"kind":"text","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemotes, \\"custom\\", \\"Hello\\");"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"sendRemoteData"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9879,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9879"}],"parameters":[{"id":572,"name":"remoteId","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the remote ID or list of remote IDs that the shout should be sent to."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":573,"name":"name","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the event that is being sent. This is useful for telling the difference between different messages."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":574,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the that argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"union","types":[{"type":"reference","target":3807,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":3807,"qualifiedName":"RemoteAction"},{"type":"array","elementType":{"type":"reference","target":3807,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":3807,"qualifiedName":"RemoteAction"}}]}},"comment":{"text":"Sends a @onRemoteData shout to the remote with the given ID or remotes if given a list of IDs. This is useful for sending arbitrary messages to specific remotes.\\n\\nIn effect, this allows remotes to communicate with each other by sending arbitrary events.","tags":[{"tagName":"example","text":"```ts\\nSend a \\"custom\\" message to another remote.\\nconst otherRemoteId = \\"otherRemoteId\\";\\n\\n// The other remote will receive a\\n```"},{"tagName":"onRemoteData","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemoteId, \\"custom\\", \\"Hello\\");"},{"tagName":"example","text":"```ts\\nSend a message to all other remotes.\\nconst remotes = await os.remotes();\\nconst remoteId = getID(configBot);\\nconst otherRemotes = remotes.filter(id => id !== remoteId);\\n\\n// All other remotes will receive a\\n```"},{"tagName":"onRemoteData","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemotes, \\"custom\\", \\"Hello\\");"},{"tagName":"dochash","text":"actions/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"sendRemoteData"}]},"group":"01-event-actions"},{"id":463,"order":9999,"name":"shout","reflection":{"id":463,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a shout to all bots that are "},{"kind":"text","text":"[`#listening`](tags:listening)"},{"kind":"text","text":" and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers "},{"kind":"text","text":"[`@onListen`](tags:@onListen)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onAnyListen`](tags:@onAnyListen)"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a list which contains the values returned from each script that was run for the shout."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a\\n```"}]},{"tag":"@reset","content":[{"kind":"text","text":"event to all bots\\nshout(\\"reset\\");"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a\\n```"}]},{"tag":"@hello","content":[{"kind":"text","text":"event with your name\\nshout(\\"hello\\", \\"Bob\\");"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Event Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Events"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Event actions are used to send events to bots."}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"shout"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13984,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L13984"}],"parameters":[{"id":464,"name":"name","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the shout. e.g. Using "},{"kind":"code","text":"`onClick`"},{"kind":"text","text":" for the name will trigger all [@onClick](tags:@onClick) listeners."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":465,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Sends a shout to all bots that are listening and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers @onListen and @onAnyListen.","tags":[{"tagName":"returns","text":"Returns a list which contains the values returned from each script that was run for the shout."},{"tagName":"example","text":"```ts\\nSend a\\n```"},{"tagName":"reset","text":"event to all bots\\nshout(\\"reset\\");"},{"tagName":"example","text":"```ts\\nSend a\\n```"},{"tagName":"hello","text":"event with your name\\nshout(\\"hello\\", \\"Bob\\");"},{"tagName":"dochash","text":"actions/event"},{"tagName":"doctitle","text":"Event Actions"},{"tagName":"docsidebar","text":"Events"},{"tagName":"docdescription","text":"Event actions are used to send events to bots."},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"shout"}]},"group":"01-event-actions"},{"id":445,"order":9999,"name":"superShout","reflection":{"id":445,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a shout to all of the other instances that are loaded."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a hello super shout to all the loaded instances.\\nsuperShout(\\"hello\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"superShout"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13910,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L13910"}],"parameters":[{"id":446,"name":"eventName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the shout. e.g. Using onClick for the name will trigger all the "},{"kind":"text","text":"[`@onClick`](tags:@onClick)"},{"kind":"text","text":" listeners."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":447,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the optional "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to include with the shout."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":2823,"name":"SuperShoutAction","package":"@casual-simulation/aux-common","id":2823,"qualifiedName":"SuperShoutAction"}},"comment":{"text":"Sends a shout to all of the other instances that are loaded.","tags":[{"tagName":"example","text":"```ts\\nSend a hello super shout to all the loaded instances.\\nsuperShout(\\"hello\\");\\n```"},{"tagName":"dochash","text":"actions/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"superShout"}]},"group":"01-event-actions"},{"id":489,"order":9999,"name":"whisper","reflection":{"id":489,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a whisper to all bots that are "},{"kind":"text","text":"[`#listening`](tags:listening)"},{"kind":"text","text":" and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers "},{"kind":"text","text":"[`@onListen`](tags:@onListen)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onAnyListen`](tags:@onAnyListen)"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a list which contains the values returned from each script that was run for the shout."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a\\n```"}]},{"tag":"@reset","content":[{"kind":"text","text":"event to all bots named \\"Bob\\"\\nlet bots = getBots(\\"#name\\", \\"Bob\\");\\nwhisper(bots, \\"reset\\");"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a\\n```"}]},{"tag":"@setColor","content":[{"kind":"text","text":"event to ourself\\nwhisper(this, \\"setColor\\", \\"red\\");"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"whisper"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14014,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L14014"}],"parameters":[{"id":490,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot, array of bots, bot "},{"kind":"text","text":"[`#id`](tags:id)"},{"kind":"text","text":", or array of bot "},{"kind":"text","text":"[`#id`](tags:id)"},{"kind":"text","text":" that the whisper should be sent to."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3355,"name":"Bot","package":"@casual-simulation/aux-common","id":3355,"qualifiedName":"Bot"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3355,"name":"Bot","package":"@casual-simulation/aux-common","id":3355,"qualifiedName":"Bot"}]}}]}},{"id":491,"name":"eventName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the whisper. e.g. Using "},{"kind":"code","text":"`onClick`"},{"kind":"text","text":" for the name will trigger the ["},{"kind":"code","text":"`@onClick`"},{"kind":"text","text":"](tags:@onClick) listener for the specified bots."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":492,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Sends a whisper to all bots that are listening and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers @onListen and @onAnyListen.","tags":[{"tagName":"returns","text":"Returns a list which contains the values returned from each script that was run for the shout."},{"tagName":"example","text":"```ts\\nSend a\\n```"},{"tagName":"reset","text":"event to all bots named \\"Bob\\"\\nlet bots = getBots(\\"#name\\", \\"Bob\\");\\nwhisper(bots, \\"reset\\");"},{"tagName":"example","text":"```ts\\nSend a\\n```"},{"tagName":"setColor","text":"event to ourself\\nwhisper(this, \\"setColor\\", \\"red\\");"},{"tagName":"dochash","text":"actions/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"whisper"}]},"group":"01-event-actions"}],"references":{"CasualOSError":"types/error","id-3539":"CasualOSError","Quaternion":"types/math/rotations","id-127":"Quaternion","Rotation":"types/math/rotations","id-154":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-3558":"AIChatMessage","AIChatOptions":"types/ai","id-3328":"AIChatOptions","AIGenerateImageSuccess":"types/ai","id-2478":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-3342":"AIGenerateImageOptions","AIGenerateSkyboxOptions":"types/ai","id-3338":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-2471":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-2475":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-2481":"AIGeneratedImage","ARSupportedAction":"types/os","id-3073":"ARSupportedAction","AddCountFailure":"types/records/events","id-3743":"AddCountFailure","AddCountSuccess":"types/records/events","id-3738":"AddCountSuccess","AddDropSnapAction":"types/os","id-2702":"AddDropSnapAction","AddDropSnapPointsAction":"types/os","id-2706":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os","id-3278":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-2075":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-2451":"AttachDebuggerOptions","AuthData":"types/os","id-3217":"AuthData","CasualOSDevice":"types/os","id-3526":"CasualOSDevice","CasualOSVersion":"types/os","id-3518":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-200":"AxisAndAngle","BeginRecordingAction":"types/os","id-3160":"BeginRecordingAction","BotTagMasks":"types/core","id-3495":"BotTagMasks","BotTags":"types/core","id-3410":"BotTags","BotState":"types/core","id-3508":"BotState","BufferFormAddressGLTFAction":"types/os","id-3285":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os","id-2884":"BufferSoundAction","CalculateRayFromCameraAction":"types/os","id-3258":"CalculateRayFromCameraAction","CancelSoundAction":"types/os","id-2890":"CancelSoundAction","CompiledBotListeners":"types/core","id-3489":"CompiledBotListeners","ConfigureWakeLockAction":"types/os","id-3265":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os","id-2648":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os","id-2637":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-3680":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-3676":"CreatePublicRecordKeySuccess","CustomAppContainerAvailableAction":"types/os","id-3117":"CustomAppContainerAvailableAction","DebuggerCallFrame":"types/debuggers/common","id-2404":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-2439":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-2433":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-2412":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-2418":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-2445":"DebuggerVariable","DefineGlobalBotAction":"types/os","id-2641":"DefineGlobalBotAction","DownloadAction":"types/os","id-2896":"DownloadAction","Easing":"types/animation","id-2619":"Easing","EnableARAction":"types/os","id-3069":"EnableARAction","EnableCollaborationAction":"types/os","id-3028":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os","id-2732":"EnableCustomDraggingAction","EnablePOVAction":"types/os","id-3087":"EnablePOVAction","EnableVRAction":"types/os","id-3083":"EnableVRAction","EnableXROptions":"types/os","id-2939":"EnableXROptions","EndRecordingAction":"types/os","id-3168":"EndRecordingAction","EraseDataFailure":"types/records/data","id-3714":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-3710":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-3733":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-3729":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-203":"EulerAnglesRotation","ExitFullscreenAction":"types/os","id-3102":"ExitFullscreenAction","FocusOnOptions":"types/os","id-2686":"FocusOnOptions","FocusOnRotation":"types/os","id-2698":"FocusOnRotation","FormAnimationData":"types/os","id-2984":"FormAnimationData","FromToRotation":"types/math/rotations","id-197":"FromToRotation","GenericError":"types/error","id-3536":"GenericError","GetAverageFrameRateAction":"types/os","id-3238":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-3754":"GetCountFailure","GetCountSuccess":"types/records/events","id-3748":"GetCountSuccess","GetDataFailure":"types/records/data","id-3705":"GetDataFailure","GetDataSuccess":"types/records/data","id-3696":"GetDataSuccess","GetGeolocationAction":"types/os","id-3201":"GetGeolocationAction","GetRoomOptionsFailure":"types/os","id-2166":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os","id-2162":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os","id-2209":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os","id-2204":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os","id-2185":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os","id-2180":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os","id-3196":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os","id-3271":"GetWakeLockConfigurationAction","GoToTagAction":"types/os","id-3206":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-3782":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-3780":"GrantMarkerPermissionSuccess","GrantRoleFailure":"types/records/roles","id-3768":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-3766":"GrantRoleSuccess","HtmlAppEventAction":"types/os","id-2548":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os","id-2553":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os","id-2737":"ImageClassifierOptions","InstUpdate":"types/os","id-3532":"InstUpdate","JoinRoomFailure":"types/os","id-2147":"JoinRoomFailure","JoinRoomSuccess":"types/os","id-2144":"JoinRoomSuccess","LeaveRoomFailure":"types/os","id-2156":"LeaveRoomFailure","LeaveRoomSuccess":"types/os","id-2153":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-3724":"ListDataFailure","ListDataSuccess":"types/records/data","id-3719":"ListDataSuccess","ListFormAnimationsAction":"types/os","id-2988":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-3797":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-3794":"ListStudiosSuccess","ListedStudio":"types/records/studios","id-3801":"ListedStudio","LoadBotsAction":"types/os","id-3033":"LoadBotsAction","LoadSpaceAction":"types/os","id-2929":"LoadSpaceAction","LocalFormAnimationAction":"types/os","id-3040":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os","id-3054":"LocalPositionTweenAction","LocalTweenAction":"types/os","id-3044":"LocalTweenAction","LookRotation":"types/math/rotations","id-211":"LookRotation","MediaPermissionAction":"types/os","id-3231":"MediaPermissionAction","MediaPermissionOptions":"types/os","id-2936":"MediaPermissionOptions","MeetCommandAction":"types/os","id-3173":"MeetCommandAction","MeetFunctionAction":"types/os","id-3180":"MeetFunctionAction","Debugger":"types/debuggers/debugger","id-2216":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-2423":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os","id-3150":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os","id-3157":"OpenCircleWipeOptions","PhotoCameraOptions":"types/camera","id-3012":"PhotoCameraOptions","OpenURLAction":"types/os","id-2873":"OpenURLAction","ParsedBotLink":"types/core","id-3514":"ParsedBotLink","PartialBotState":"types/core","id-3511":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-2272":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-2428":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-2391":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-2399":"PauseTriggerOptions","Photo":"types/camera","id-3024":"Photo","PlaySoundAction":"types/os","id-2877":"PlaySoundAction","PossiblePauseTriggerLocation":"types/debuggers/common","id-2386":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-2460":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-215":"QuaternionRotation","RaycastFromCameraAction":"types/os","id-3243":"RaycastFromCameraAction","RaycastInPortalAction":"types/os","id-3250":"RaycastInPortalAction","RaycastRay":"types/os","id-2140":"RaycastRay","RaycastResult":"types/os","id-2137":"RaycastResult","RecordActionOptions":"types/records/extra","id-3291":"RecordActionOptions","RecordDataFailure":"types/records/data","id-3690":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-3686":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-2107":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-2103":"RecordFileSuccess","RecordedFile":"types/experimental","id-2999":"RecordedFile","Recording":"types/experimental","id-2997":"Recording","RecordingOptions":"types/experimental","id-3004":"RecordingOptions","RegisterBuiltinPortalAction":"types/os","id-3112":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os","id-3120":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os","id-3133":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-2994":"RegisterPrefixOptions","RejectAction":"types/os","id-2902":"RejectAction","RemoteAction":"types/os","id-3807":"RemoteAction","RequestAuthDataAction":"types/os","id-3211":"RequestAuthDataAction","RequestFullscreenAction":"types/os","id-3100":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-3789":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-3787":"RevokeMarkerPermissionSuccess","RevokeRoleFailure":"types/records/roles","id-3775":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-3773":"RevokeRoleSuccess","RoomJoinOptions":"types/os","id-3294":"RoomJoinOptions","RoomOptions":"types/os","id-3303":"RoomOptions","RoomRemoteOptions":"types/os","id-3319":"RoomRemoteOptions","RoomTrackOptions":"types/os","id-3307":"RoomTrackOptions","RunScriptAction":"types/os","id-2916":"RunScriptAction","RuntimeBot":"types/core","id-3355":"RuntimeBot","RuntimeBotLinks":"types/core","id-3501":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-3498":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-222":"SequenceRotation","SerializableMutationRecord":"types/os","id-2562":"SerializableMutationRecord","SessionSelector":"types/os","id-2486":"SessionSelector","SetAppOutputAction":"types/os","id-3145":"SetAppOutputAction","SetClipboardAction":"types/os","id-2905":"SetClipboardAction","SetRoomOptionsSuccess":"types/os","id-2171":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os","id-3325":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os","id-2197":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os","id-2192":"SetRoomTrackOptionsSuccess","ShareAction":"types/os","id-3104":"ShareAction","ShareOptions":"types/os","id-2682":"ShareOptions","ShowChatBarAction":"types/os","id-2908":"ShowChatBarAction","ShowChatOptions":"types/os","id-2676":"ShowChatOptions","ShowConfirmAction":"types/os","id-2758":"ShowConfirmAction","ShowConfirmOptions":"types/os","id-2753":"ShowConfirmOptions","ShowInputOptions":"types/os","id-2742":"ShowInputOptions","ShowJoinCodeAction":"types/os","id-3096":"ShowJoinCodeAction","ShowUploadAuxFileAction":"types/os","id-2922":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os","id-2924":"ShowUploadFilesAction","SnapAxis":"types/os","id-2656":"SnapAxis","SnapGrid":"types/os","id-2711":"SnapGrid","SnapGridTarget":"types/os","id-2112":"SnapGridTarget","SnapPoint":"types/os","id-2668":"SnapPoint","SpeakTextAction":"types/os","id-3187":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-2456":"SpeakTextOptions","StartFormAnimationAction":"types/os","id-2965":"StartFormAnimationAction","StartFormAnimationOptions":"types/os","id-2941":"StartFormAnimationOptions","StopFormAnimationAction":"types/os","id-2954":"StopFormAnimationAction","StopFormAnimationOptions":"types/os","id-2962":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os","id-2623":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-3008":"SyntheticVoice","TweenOptions":"types/experimental","id-2453":"TweenOptions","UnregisterCustomAppAction":"types/os","id-3127":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os","id-3140":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os","id-2633":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-3761":"UpdateEventRecordFailure","UpdateEventRecordSuccess":"types/records/events","id-3759":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os","id-2542":"UpdateHtmlAppAction","UploadedFile":"types/os","id-2133":"UploadedFile","VRSupportedAction":"types/os","id-3078":"VRSupportedAction","WakeLockConfiguration":"types/os","id-3276":"WakeLockConfiguration","WebhookOptions":"types/web","id-2056":"WebhookOptions","WebhookResult":"types/web","id-2068":"WebhookResult","AddCountResult":"types/records/events","id-3737":"AddCountResult","AvailablePermissions":"types/permissions","id-3564":"AvailablePermissions","BarcodeFormat":"types/os","id-2736":"BarcodeFormat","BotFilter":"types/core","id-2090":"BotFilter","BotSpace":"types/core","id-3485":"BotSpace","CameraType":"types/os","id-2735":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-3675":"CreatePublicRecordKeyResult","CustomAppOutputType":"types/os","id-3115":"CustomAppOutputType","CustomPortalOutputMode":"types/os","id-3116":"CustomPortalOutputMode","EaseMode":"types/animation","id-2618":"EaseMode","EaseType":"types/animation","id-2617":"EaseType","EraseDataResult":"types/records/data","id-3709":"EraseDataResult","EraseFileResult":"types/records/files","id-3728":"EraseFileResult","Geolocation":"types/os","id-2622":"Geolocation","GetCountResult":"types/records/events","id-3747":"GetCountResult","GetDataResult":"types/records/data","id-3695":"GetDataResult","GetRoomOptionsResult":"types/os","id-2161":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os","id-2203":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os","id-2179":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-3779":"GrantMarkerPermissionResult","GrantRoleResult":"types/records/roles","id-3765":"GrantRoleResult","JoinRoomResult":"types/os","id-2143":"JoinRoomResult","LeaveRoomResult":"types/os","id-2152":"LeaveRoomResult","ListDataResult":"types/records/data","id-3718":"ListDataResult","ListStudiosResult":"types/records/studios","id-3793":"ListStudiosResult","Mod":"types/core","id-2085":"Mod","PortalType":"types/core","id-3517":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-2390":"PossiblePauseTriggerStates","RecordDataResult":"types/records/data","id-3685":"RecordDataResult","RecordFileResult":"types/records/files","id-2102":"RecordFileResult","RevokeMarkerPermissionResult":"types/records/policies","id-3786":"RevokeMarkerPermissionResult","RevokeRoleResult":"types/records/roles","id-3772":"RevokeRoleResult","SetRoomOptionsResult":"types/os","id-2170":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os","id-2191":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os","id-2752":"ShowInputSuptype","ShowInputType":"types/os","id-2751":"ShowInputType","SnapTarget":"types/os","id-2675":"SnapTarget","TagFilter":"types/core","id-2086":"TagFilter","UpdateEventRecordResult":"types/records/events","id-3758":"UpdateEventRecordResult","animateTag-byOptions":"actions/utility","id-591":"animateTag-byOptions","getbot-tag":"actions/data","id-256":"getbot-tag","getbots-tag":"actions/data","id-240":"getbots-tag","animateTag-byTag":"actions/utility","id-585":"animateTag-byTag","changeState":"actions/data","id-401":"changeState","create":"actions/data","id-385":"create","destroy":"actions/data","id-389":"destroy","getbot-filters":"actions/data","id-249":"getbot-filters","getbots-filters":"actions/data","id-233":"getbots-filters","priorityShout":"actions/event","id-450":"priorityShout","shout":"actions/event","id-463":"shout","updateBotLinks":"actions/data","id-423":"updateBotLinks","whisper":"actions/event","id-489":"whisper","action.perform":"actions/event","id-1591":"action.perform","action.reject":"actions/event","id-1595":"action.reject","ai.chat-string":"actions/ai","id-650":"ai.chat-string","ai.chat-message":"actions/ai","id-653":"ai.chat-message","ai.chat-messages":"actions/ai","id-656":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-669":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-673":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-661":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-665":"ai.generateSkybox-request","applyDiffToSnapshot":"actions/data","id-306":"applyDiffToSnapshot","applyMod":"actions/mods","id-375":"applyMod","assert":"actions/debuggers","id-634":"assert","assertEqual":"actions/debuggers","id-639":"assertEqual","atPosition":"actions/bot-filters","id-520":"atPosition","byCreator":"actions/bot-filters","id-541":"byCreator","byID":"actions/bot-filters","id-508":"byID","byMod":"actions/bot-filters","id-512":"byMod","bySpace":"actions/bot-filters","id-537":"bySpace","byTag":"actions/bot-filters","id-503":"byTag","bytes.fromBase64String":"actions/bytes","id-1804":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-1821":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-1812":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-1800":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-1816":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-1808":"bytes.toHexString","clearAnimations":"actions/utility","id-605":"clearAnimations","clearTagMasks":"actions/data","id-329":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-1827":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-1833":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-1864":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-1857":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-1922":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-1917":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-1928":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-1913":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-1909":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-1893":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-1883":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-1888":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-1903":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-1932":"crypto.keypair","crypto.sha256":"actions/crypto","id-1849":"crypto.sha256","crypto.sha512":"actions/crypto","id-1853":"crypto.sha512","crypto.sign":"actions/crypto","id-1936":"crypto.sign","deleteTagMaskText":"actions/data","id-356":"deleteTagMaskText","deleteTagText":"actions/data","id-349":"deleteTagText","diffSnapshots":"actions/data","id-301":"diffSnapshots","either":"actions/bot-filters","id-545":"either","os.beginAudioRecording":"actions/audio","id-1638":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-1645":"experiment.beginRecording","os.endAudioRecording":"actions/audio","id-1642":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-1649":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-1628":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-1657":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-1601":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-1606":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-1617":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-1652":"experiment.speakText","getBotLinks":"actions/data","id-419":"getBotLinks","getBotPosition":"actions/data","id-275":"getBotPosition","getBotRotation":"actions/data","id-280":"getBotRotation","getBotTagValues":"actions/data","id-265":"getBotTagValues","getFormattedJSON":"actions/data","id-293":"getFormattedJSON","getID":"actions/data","id-285":"getID","getJSON":"actions/data","id-289":"getJSON","getLink":"actions/data","id-415":"getLink","getMod":"actions/mods","id-270":"getMod","getSnapshot":"actions/data","id-297":"getSnapshot","getTag":"actions/data","id-311":"getTag","inDimension":"actions/bot-filters","id-516":"inDimension","inStack":"actions/bot-filters","id-526":"inStack","insertTagMaskText":"actions/data","id-341":"insertTagMaskText","insertTagText":"actions/data","id-334":"insertTagText","math.abs":"actions/math","id-1674":"math.abs","math.addVectors":"actions/math","id-1744":"math.addVectors","math.areClose":"actions/math","id-1775":"math.areClose","math.avg":"actions/math","id-1666":"math.avg","math.degreesToRadians":"actions/math","id-1700":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-1740":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-1708":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-1682":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-1717":"math.intersectPlane","math.negateVector":"actions/math","id-1754":"math.negateVector","math.normalizeVector":"actions/math","id-1759":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-1704":"math.radiansToDegrees","math.random":"actions/math","id-1695":"math.random","math.randomInt":"actions/math","id-1690":"math.randomInt","math.scaleVector":"actions/math","id-1769":"math.scaleVector","math.setRandomSeed":"actions/math","id-1686":"math.setRandomSeed","math.sqrt":"actions/math","id-1670":"math.sqrt","math.stdDev":"actions/math","id-1678":"math.stdDev","math.subtractVectors":"actions/math","id-1749":"math.subtractVectors","math.sum":"actions/math","id-1662":"math.sum","math.vectorLength":"actions/math","id-1764":"math.vectorLength","neighboring":"actions/bot-filters","id-531":"neighboring","not":"actions/bot-filters","id-552":"not","os.attachDebugger":"actions/debuggers","id-1547":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-1536":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-1540":"os.createDebugger-pausable","os.focusOn-bot":"actions/portals","id-737":"os.focusOn-bot","os.focusOn-position":"actions/portals","id-742":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-1544":"os.getExecutingDebugger","showChat-options":"actions/os","id-764":"showChat-options","showChat-placeholder":"actions/os","id-760":"showChat-placeholder","os.showInput":"actions/portals","id-983":"os.showInput","os.addBotDropGrid":"actions/portals","id-1053":"os.addBotDropGrid","os.addBotDropSnap":"actions/portals","id-1044":"os.addBotDropSnap","os.addDropGrid":"actions/portals","id-1049":"os.addDropGrid","os.addDropSnap":"actions/portals","id-1040":"os.addDropSnap","os.applyUpdatesToInst":"actions/os","id-1499":"os.applyUpdatesToInst","os.arSupported":"actions/xr","id-808":"os.arSupported","os.bufferFormAddressGLTF":"actions/animations","id-1457":"os.bufferFormAddressGLTF","os.bufferSound":"actions/audio","id-1016":"os.bufferSound","os.calculateRayFromCamera":"actions/portals","id-1452":"os.calculateRayFromCamera","os.cancelSound":"actions/audio","id-1020":"os.cancelSound","os.capturePhoto":"actions/camera","id-903":"os.capturePhoto","os.closeBarcodeScanner":"actions/barcodes","id-881":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/portals","id-1032":"os.closeCircleWipe","os.closeImageClassifier":"actions/image-classification","id-896":"os.closeImageClassifier","os.closePhotoCamera":"actions/camera","id-907":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/barcodes","id-867":"os.closeQRCodeScanner","os.compileApp":"actions/app","id-1167":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os","id-1437":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/records","id-1427":"os.countEvents","os.createInitializationUpdate":"actions/os","id-1495":"os.createInitializationUpdate","os.device":"actions/os","id-782":"os.device","os.disableAR":"actions/xr","id-798":"os.disableAR","os.disablePointOfView":"actions/portals","id-823":"os.disablePointOfView","os.disableVR":"actions/xr","id-805":"os.disableVR","os.disableWakeLock":"actions/os","id-829":"os.disableWakeLock","os.download":"actions/files","id-835":"os.download","os.downloadBots":"actions/files","id-841":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/files","id-846":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/files","id-854":"os.downloadInst","os.enableAR":"actions/xr","id-794":"os.enableAR","os.enableCollaboration":"actions/os","id-788":"os.enableCollaboration","os.enableCustomDragging":"actions/portals","id-1058":"os.enableCustomDragging","os.enablePointOfView":"actions/portals","id-814":"os.enablePointOfView","os.enableVR":"actions/xr","id-801":"os.enableVR","os.eraseData":"actions/records","id-1370":"os.eraseData","os.eraseManualApprovalData":"actions/records","id-1376":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/portals","id-708":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os","id-1115":"os.getAverageFrameRate","os.getCameraPosition":"actions/portals","id-1071":"os.getCameraPosition","os.getCameraRotation":"actions/portals","id-1075":"os.getCameraRotation","os.getCurrentDimension":"actions/portals","id-954":"os.getCurrentDimension","os.getCurrentInst":"actions/portals","id-960":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os","id-1503":"os.getCurrentInstUpdate","os.getData":"actions/records","id-1352":"os.getData","os.getDimensionalDepth":"actions/portals","id-973":"os.getDimensionalDepth","os.getFocusPoint":"actions/portals","id-1083":"os.getFocusPoint","os.getGeolocation":"actions/os","id-1065":"os.getGeolocation","os.getInputList":"actions/portals","id-1108":"os.getInputList","os.getInputState":"actions/portals","id-1103":"os.getInputState","os.getInstStateFromUpdates":"actions/os","id-1491":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/records","id-1358":"os.getManualApprovalData","os.getMediaPermission":"actions/os","id-1111":"os.getMediaPermission","os.getMenuDimension":"actions/portals","id-963":"os.getMenuDimension","os.getMiniPortalDimension":"actions/portals","id-966":"os.getMiniPortalDimension","os.getPointerDirection":"actions/portals","id-1099":"os.getPointerDirection","os.getPointerPosition":"actions/portals","id-1087":"os.getPointerPosition","os.getPointerRotation":"actions/portals","id-1091":"os.getPointerRotation","os.getPortalDimension":"actions/portals","id-969":"os.getPortalDimension","os.getPublicRecordKey":"actions/records","id-1277":"os.getPublicRecordKey","os.getRoomOptions":"actions/rooms","id-1133":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/rooms","id-1148":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/rooms","id-1137":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/records","id-1281":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os","id-832":"os.getWakeLockConfiguration","os.goToDimension":"actions/portals","id-997":"os.goToDimension","os.goToURL":"actions/portals","id-1001":"os.goToURL","os.grantInstAdminPermission":"actions/records","id-1299":"os.grantInstAdminPermission","os.grantInstRole":"actions/records","id-1319":"os.grantInstRole","os.grantRecordMarkerPermission":"actions/records","id-1285":"os.grantRecordMarkerPermission","os.grantUserRole":"actions/records","id-1304":"os.grantUserRole","os.hasBotInMiniPortal":"actions/portals","id-1024":"os.hasBotInMiniPortal","os.hideBarcode":"actions/barcodes","id-889":"os.hideBarcode","os.hideChat":"actions/os","id-772":"os.hideChat","os.hideHtml":"actions/os","id-715":"os.hideHtml","os.hideQRCode":"actions/barcodes","id-874":"os.hideQRCode","os.hideTips":"actions/portals","id-696":"os.hideTips","os.importAUX":"actions/files","id-938":"os.importAUX","os.inSheet":"actions/portals","id-1068":"os.inSheet","os.isCollaborative":"actions/os","id-785":"os.isCollaborative","os.isInDimension":"actions/portals","id-950":"os.isInDimension","os.isRecordKey":"actions/records","id-1334":"os.isRecordKey","os.joinRoom":"actions/rooms","id-1118":"os.joinRoom","os.leaveRoom":"actions/rooms","id-1123":"os.leaveRoom","os.listBuiltinTags":"actions/app","id-1268":"os.listBuiltinTags","os.listData":"actions/records","id-1364":"os.listData","os.listFormAnimations":"actions/animations","id-1472":"os.listFormAnimations","os.listInstUpdates":"actions/os","id-1488":"os.listInstUpdates","os.listUserStudios":"actions/records","id-1433":"os.listUserStudios","os.loadInst":"actions/os","id-930":"os.loadInst","os.log":"actions/os","id-1061":"os.log","os.meetCommand":"actions/os","id-1524":"os.meetCommand","os.meetFunction":"actions/os","id-1529":"os.meetFunction","os.openBarcodeScanner":"actions/barcodes","id-877":"os.openBarcodeScanner","os.openCircleWipe":"actions/portals","id-1036":"os.openCircleWipe","os.openDevConsole":"actions/os","id-1009":"os.openDevConsole","os.openImageClassifier":"actions/image-classification","id-892":"os.openImageClassifier","os.openPhotoCamera":"actions/camera","id-899":"os.openPhotoCamera","os.openQRCodeScanner":"actions/barcodes","id-863":"os.openQRCodeScanner","os.openURL":"actions/portals","id-1005":"os.openURL","os.parseBotsFromData":"actions/files","id-942":"os.parseBotsFromData","os.playSound":"actions/audio","id-1012":"os.playSound","os.raycast":"actions/portals","id-1446":"os.raycast","os.raycastFromCamera":"actions/portals","id-1441":"os.raycastFromCamera","os.recordData":"actions/records","id-1338":"os.recordData","os.recordEvent":"actions/records","id-1421":"os.recordEvent","os.recordFile":"actions/records","id-1382":"os.recordFile","os.recordManualApprovalData":"actions/records","id-1345":"os.recordManualApprovalData","os.registerApp":"actions/app","id-1158":"os.registerApp","os.registerTagPrefix":"actions/app","id-1153":"os.registerTagPrefix","os.remoteCount":"actions/os","id-1510":"os.remoteCount","os.remotes":"actions/os","id-1485":"os.remotes","os.replaceDragBot":"actions/portals","id-946":"os.replaceDragBot","os.requestAuthBot":"actions/records","id-1271":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/records","id-1274":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/portals","id-705":"os.requestFullscreenMode","os.requestWakeLock":"actions/os","id-826":"os.requestWakeLock","os.revokeInstRole":"actions/records","id-1327":"os.revokeInstRole","os.revokeRecordMarkerPermission":"actions/records","id-1292":"os.revokeRecordMarkerPermission","os.revokeUserRole":"actions/records","id-1312":"os.revokeUserRole","os.run":"actions/os","id-775":"os.run","os.setClipboard":"actions/os","id-718":"os.setClipboard","os.setRoomOptions":"actions/rooms","id-1128":"os.setRoomOptions","os.setRoomTrackOptions":"actions/rooms","id-1142":"os.setRoomTrackOptions","os.share":"actions/os","id-1028":"os.share","os.showBarcode":"actions/barcodes","id-884":"os.showBarcode","os.showConfirm":"actions/portals","id-993":"os.showConfirm","os.showHtml":"actions/os","id-711":"os.showHtml","os.showInputForTag":"actions/portals","id-977":"os.showInputForTag","os.showJoinCode":"actions/barcodes","id-700":"os.showJoinCode","os.showQRCode":"actions/barcodes","id-870":"os.showQRCode","os.showUploadAuxFile":"actions/files","id-857":"os.showUploadAuxFile","os.showUploadFiles":"actions/files","id-860":"os.showUploadFiles","os.sleep":"actions/os","id-680":"os.sleep","os.startFormAnimation":"actions/animations","id-1461":"os.startFormAnimation","os.stopFormAnimation":"actions/animations","id-1467":"os.stopFormAnimation","os.tip":"actions/portals","id-689":"os.tip","os.toast":"actions/os","id-684":"os.toast","os.totalRemoteCount":"actions/os","id-1514":"os.totalRemoteCount","os.unloadInst":"actions/os","id-934":"os.unloadInst","os.unregisterApp":"actions/app","id-1163":"os.unregisterApp","os.version":"actions/os","id-779":"os.version","os.vrSupported":"actions/xr","id-811":"os.vrSupported","os.agreedUponTime":"actions/time","id-911":"os.agreedUponTime","os.deadReckoningTime":"actions/time","id-919":"os.deadReckoningTime","os.instLatency":"actions/time","id-913":"os.instLatency","os.instTimeOffset":"actions/time","id-915":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/time","id-917":"os.instTimeOffsetSpread","os.localTime":"actions/time","id-909":"os.localTime","remote":"actions/event","id-559":"remote","sendRemoteData":"actions/event","id-571":"sendRemoteData","removeTags":"actions/data","id-364":"removeTags","renameTag":"actions/data","id-369":"renameTag","setTag":"actions/data","id-316":"setTag","setTagMask":"actions/data","id-322":"setTagMask","subtractMods":"actions/mods","id-380":"subtractMods","superShout":"actions/event","id-445":"superShout","uuid":"actions/data","id-582":"uuid","web.get":"actions/web","id-1955":"web.get","web.hook":"actions/web","id-1966":"web.hook","web.post":"actions/web","id-1960":"web.post","configBot":"actions/os","id-645":"configBot"}}');var a=o(1601);o(5058),o(6967);const r={id:"event",title:"Event Actions",sidebar_label:"Events",description:"Event actions are used to send events to bots."},c=void 0,d={id:"actions/event",title:"Event Actions",description:"Event actions are used to send events to bots.",source:"@site/docs/actions/event.mdx",sourceDirName:"actions",slug:"/actions/event",permalink:"/actions/event",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/event.mdx",tags:[],version:"current",frontMatter:{id:"event",title:"Event Actions",sidebar_label:"Events",description:"Event actions are used to send events to bots."},sidebar:"docs",previous:{title:"Debuggers",permalink:"/actions/debuggers"},next:{title:"Experimental",permalink:"/actions/experimental"}},l={},m=[...(0,a.KO)(i)];function p(e){return(0,n.jsx)(a.hl,{doc:i})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p()}},1601:(e,t,o)=>{o.d(t,{hl:()=>F,KO:()=>O});var n=o(79),s=o(5058),i=o(6144),a=o(8405),r=o(1888),c=o(5250);class d extends n.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const o="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw o;console.error(o)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var l=o(1537),m=o(6967),p=o(7544),u=o(3324),g=o(5834);function h(e){void 0===e&&(e={});const t=e.references;return e=>{(0,g.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,l.Z)("listen-tags")+y(t.slice(1)):e.url=(0,l.Z)("tags")+y(t)}else if(e.url.startsWith("ref:")){const o=e.url.slice(4),n=t[o];e.url=(0,l.Z)(n)+"#"+o}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,l.Z)("glossary")+"#"+f(t)}else if(e.url.startsWith("page:")){const[t,o]=e.url.slice(5).split("#");e.url=(0,l.Z)(t)+"#"+o}}))}}function y(e){return"#"+f(e)}function f(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function x(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const b={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",b);const k=new Map([[b.Property,["type"]],["reflection",["declaration"]],[b.TypeLiteral,["children","signatures"]],[b.CallSignature,["parameters","comment","type"]]]);function R(e,t,o){void 0===o&&(o=null),function(e,t,o){var n;void 0===o&&(o=null);let s=k.get(null!=(n=e.kind)?n:e.type)||[];for(let i of s){let n=e[i];if(Array.isArray(n))for(let e of n)e&&t(e,o,i);else n&&t(n,o,i)}}(e,((e,o,n)=>{t(e,o,n),R(e,t,e)}))}function A(e,t){let o=[];return t(e)&&o.push(e),R(e,((e,n,s)=>{t(e,n,s)&&o.push(e)})),o}const v=["first","second","third","fourth","fifth"];function S(e,t){return e.name+"-"+t.name}function T(e,t){const o=S(e,t);let n;var s;return n=t.kind===b.Constructor||t.kind===b.Method?ee(t.signatures[0]):t.kind===b.Accessor?(s=t).name+": "+de(s.getSignature.type):ie(t),n="<code>"+n+"</code>",{value:n,id:o,level:3}}function w(e){let t=[],{properties:o,constructors:n,methods:s}=function(e){let t=[],o=[],n=[];if(!e)return{properties:t,constructors:o,methods:n};for(let s of e)s.flags.isPrivate||(s.kind===b.Property||s.kind===b.Accessor?t.push(s):s.kind===b.Constructor?o.push(s):s.kind===b.Method&&n.push(s));return{properties:t,constructors:o,methods:n}}(e.children);return o.length>0&&t.push(...o.map((t=>T(e,t)))),n.length>0&&t.push(...n.map((t=>T(e,t)))),s.length>0&&t.push(...s.map((t=>T(e,t)))),t}function C(e){let t=[];const o=Ce(e);for(let n of o){const e=Te(n);t.push({value:e,id:n.group,level:2}),t.push(...n.children.map((e=>j(e))))}return t}function j(e){let{reflection:t,child:o,group:n,name:s,namespace:i}=e;const a=i?i+"."+s:s;let r;if(me(o)){var c;const e=o.type.declaration.signatures;r=ee(null!=(c=Ae(e))?c:e[0],a)}else if(ue(o)){r=ee(ve(o),a)}else r=ie(o,a);return r="<code>"+r+"</code>",{value:r,id:t.name+"-"+o.name,level:3}}function O(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let o of e.contents)if(o.reflection.kind===b.Interface||o.reflection.kind===b.Class){const e=be(o.reflection),n=ke(o.reflection);t.push({value:e,id:n,level:2}),t.push(...w(o.reflection))}else if(o.reflection.kind===b.CallSignature){const e=be(o.reflection),n=ke(o.reflection);t.push({value:"<code>"+ee(o.reflection,e)+"</code>",id:n,level:3})}else if(o.reflection.kind===b.TypeAlias){const e=be(o.reflection),n=ke(o.reflection);t.push({value:e,id:n,level:2})}else if(o.reflection.kind===b.GetSignature||o.reflection.kind===b.SetSignature){const e=be(o.reflection),n=ke(o.reflection);t.push({value:"<code>"+ee(o.reflection,e)+"</code>",id:n,level:3})}else{const e=be(o.reflection),n=ke(o.reflection);t.push({value:e,id:n,level:2}),t.push(...C(o.reflection))}return t}function F(e){let{doc:t}=e;const o=t.contents,n=t.references;return(0,c.jsx)("div",{className:"api",children:o.map((e=>(0,c.jsx)(D,{reflection:e.reflection,references:n},e.id)))})}function D(e){let{reflection:t,references:o}=e;return t.kind===b.Interface||t.kind===b.Class?(0,c.jsx)(B,{reflection:t,references:o}):t.kind===b.CallSignature||t.kind===b.GetSignature||t.kind===b.SetSignature?(0,c.jsx)(E,{reflection:t,references:o}):t.kind===b.TypeAlias?(0,c.jsx)(P,{reflection:t,references:o}):(0,c.jsx)(N,{reflection:t,references:o})}function P(e){let{reflection:t,references:o}=e;const n=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h2",id:i,children:n}),(0,c.jsx)(W,{reflection:t,references:o}),(0,c.jsx)(I,{reflection:t,name:n,references:o}),(0,c.jsx)(oe,{member:t})]})}function I(e){let{reflection:t,name:o,references:n}=e,s="";return"union"===t.type.type&&(s=(0,c.jsx)(L,{type:t.type,name:o,references:n})),s}function L(e){let{type:t,name:o,references:n}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",o," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(G,{type:e,references:n},t)))})]})}function G(e){let{type:t,references:o}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:o})})})}function B(e){let{reflection:t,references:o}=e;const n=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h2",id:i,children:n}),(0,c.jsx)(M,{reflection:t,references:o}),(0,c.jsx)(oe,{member:t})]})}function N(e){let{reflection:t,references:o}=e;const n=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h2",id:i,children:n}),(0,c.jsx)(_,{reflection:t,references:o}),(0,c.jsx)(oe,{member:t})]})}function E(e){let{reflection:t,references:o}=e;const n=be(t),s=ke(t);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:t,sig:t,name:n,link:s,references:o})})}function M(e){var t;const o=e.reflection;if(!o)throw new Error("Unable to find "+e.name+"!");const n=function(e){return(0,r.sortBy)(e,(e=>e.kind===b.Property||e.kind===b.Accessor?0:e.kind===b.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=o.children)?t:[]);return(0,c.jsx)(d,{reflection:o,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(W,{reflection:o,references:e.references}),o.indexSignature?(0,c.jsx)(U,{reflection:o,index:o.indexSignature,references:e.references}):"",o.references?(0,c.jsx)(V,{prop:o,references:e.references}):"",n.map((t=>(0,c.jsx)(q,{member:t,link:S(o,t),references:e.references},t.name)))]})})}function U(e){let{reflection:t,index:o,references:n}=e;const i=o.parameters[0];return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(W,{reflection:o,references:n}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",i.name,": ",(0,c.jsx)(ce,{type:i.type,references:n}),"]: ",(0,c.jsx)(ce,{type:o.type,references:n})]})}),(0,c.jsx)(oe,{member:o})]})}function W(e){let{reflection:t,references:o}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(z,{comment:t.comment,references:o})})}function q(e){let t;return t=e.member.kind===b.Property?function(e){let t,o=e.member,n="";o.references?(n=(0,c.jsx)(H,{prop:o,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:o.typeReference})):"reflection"===o.type.type&&o.typeText&&o.typeReference?(t=(0,c.jsx)(c.Fragment,{children:o.typeReference}),n=(0,c.jsx)(i.Z,{language:"typescript",children:o.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!n&&o.typeText&&o.typeReference&&(n=(0,c.jsx)(i.Z,{language:"typescript",children:o.typeText}));const a=be(o);ke(o);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[a,e.member.flags.isOptional?"?":"",": ",t]})}),(0,c.jsx)(W,{reflection:e.member,references:e.references}),n]})}(e):e.member.kind===b.Constructor?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===b.Method?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===b.Accessor?function(e){var t;return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.member.name,": ",(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})]})}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsx)(d,{reflection:e.member,children:(0,c.jsx)("div",{children:t})})}function V(e){let{prop:t,references:o}=e;const n=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:n+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(a.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Y,{children:t.references,references:o})]})]})}function H(e){let{prop:t,references:o}=e;return(0,c.jsxs)(a.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Y,{children:t.references,references:o})]})}function _(e){const t=e.reflection,o=(t.type.declaration,Ce(t));return(0,c.jsx)(d,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(W,{reflection:t,references:e.references}),o.map((t=>(0,c.jsx)(K,{group:t,references:e.references},t.group)))]})})}function K(e){let{group:t,references:o}=e;const n=t.children,i=Te(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:t.group,children:i}),n.map((e=>(0,c.jsx)(Z,{namespace:e.namespace,name:e.name,property:e.child,link:S(e.reflection,e.child),references:o},e.child.id)))]})}function Z(e){let t;if(me(e.property)){var o;const n=e.namespace?e.namespace+"."+e.name:e.name,s=e.property.type.declaration;t=J({name:n,func:e.property,sig:null!=(o=Ae(s.signatures))?o:s.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){const o=e.namespace?e.namespace+"."+e.name:e.name,n=ve(e.property);t=J({name:o,func:e.property,sig:n,link:e.link,references:e.references})}else t=he(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===b.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(W,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(d,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function J(e){let{func:t,sig:o,link:n,name:i,references:a}=e;const r=o.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:n,children:(0,c.jsx)($,{func:t,sig:o,name:i,references:a})}),(0,c.jsx)(Q,{sig:o,references:a}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(te,{param:e,index:t,references:a},e.name)))}):"",(0,c.jsx)(oe,{member:o})]})}function Q(e){let{sig:t,references:o}=e;return(0,c.jsx)(z,{comment:t.comment,references:o})}function z(e){let{comment:t,references:o}=e;return(0,c.jsx)(Y,{references:o,children:X(t)})}function Y(e){let{children:t,remarkPlugins:o,rehypePlugins:n,references:s}=e;return(0,c.jsx)(p.U,{remarkPlugins:[[h,{references:s}],...o||[]],rehypePlugins:[u.Z,...n||[]],children:t})}function X(e){let t="";if(e&&e.summary)for(let o of e.summary)t+=o.text;return t}function $(e){let{func:t,sig:o,name:n,references:s}=e;const i=o.parameters||[];let a="";return t.kind!==b.GetSignature&&(a=(0,c.jsxs)(c.Fragment,{children:["(",i.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:s})]},e.name))),")"]})),(0,c.jsxs)("code",{children:[(t.flags.isStatic?"static ":"")+(n||o.name),a,": ",(0,c.jsx)(ce,{type:o.type,references:s})]})}function ee(e,t){void 0===t&&(t=e.name);const o=e.parameters||[];let n="";return e.kind!==b.GetSignature&&(n="("+o.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+n+": "+de(e.type)}function te(e){let t,{param:o,index:n,references:s}=e;return t=o.flags.isRest&&o.type.elementType?0===n?(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:s})," and are ",(0,c.jsx)(ae,{param:o,isRest:!0,references:s})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:s})," and are ",(0,c.jsx)(ae,{param:o,isRest:!0,references:s})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("strong",{children:[se(n)," parameter"]})," is",o.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:o.type,references:s})," and ",(0,c.jsx)(ae,{param:o,references:s})]}),t}function oe(e){var t;let{member:o}=e;if(null==(t=o.comment)||!t.blockTags)return"";const n=o.comment.blockTags.filter((e=>"@example"===e.tag));return n.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h4",{children:"Examples"}),n.map(((e,t)=>(0,c.jsx)(ne,{example:e},t)))]}):""}function ne(e){let{example:t}=e;const o=t.content.map((e=>e.text)).join(""),n=o.indexOf("\n"),s=o.indexOf("\n",n+1);let a="typescript";n>3&&(a=o.substring(3,n).trim());const r=o.lastIndexOf("```"),d=o.substring(n,s),l=o.substring(s,r);return(0,c.jsx)(i.Z,{language:a,title:d.trim(),children:l.trim()})}function se(e){return v[e]}function ie(e,t){let o;return void 0===t&&(t=e.name),o=e.typeReference?e.typeReference:de(e.type),t+(e.flags.isOptional?"?":"")+": "+o}function ae(e){let{param:t,isRest:o,references:n}=e;return(0,c.jsx)(Y,{remarkPlugins:[x],references:n,children:re(t,o)})}function re(e,t){let o=X(e.comment);return o?(o=o.slice(0,1).toLowerCase()+o.slice(1),o.startsWith("the")&&!t&&(o="is "+o),o):""}function ce(e){let{type:t,references:o,isInUnionOrArray:s}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var i,a;if("Promise"===t.name&&"Promise"===(null==(i=t.target)?void 0:i.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Partial"===t.name&&"Partial"===(null==(a=t.target)?void 0:a.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});let e="#"+t.name;const n=t.id?null==o?void 0:o["id-"+t.id]:null;if(n){const t=null==o?void 0:o[n];t&&(e=(0,l.Z)(t)+"#"+n)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry");return(0,c.jsx)(m.Z,{href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(n.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:o,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===b.TypeLiteral&&e.signatures&&!e.children){var r;const t=null!=(r=Ae(e.signatures))?r:e.signatures[0],n=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[s?"(":"","(",n.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:o})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:o}),s?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})))}return""+JSON.stringify(t)}function de(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+de(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>de(e))).join(" | ")+")":"array"===e.type?de(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function le(e){return me(e)||ue(e)}function me(e){return e&&pe(e.type)}function pe(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===b.CallSignature))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>pe(e)))}function ge(e){return e&&e.kind===b.CallSignature}function he(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===b.TypeLiteral&&e.type.declaration.children}function ye(e,t){var o;const n=null==(o=e.comment)||null==(o=o.blockTags)?void 0:o.find((e=>e.tag===t));return n?n.content.map((e=>e.text)).join(""):null}function fe(e){if(e)for(let t of e){const e=ye(t,"@docname");if(e)return e.trim()}return null}function xe(e){if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let n=Re(null==o?void 0:o.signatures);if(n)return n}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=Re(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=Re([e]);if(t)return t}return"99-default"}function be(e){if(e.kind===b.Method){let t=fe(e.signatures);if(t)return t}else if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let n=fe(null==o?void 0:o.signatures);if(n)return n}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=fe(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=fe([e]);if(t)return t}return ye(o=e,"@docname")||o.name;var o}function ke(e){const t=ye(e,"@docid");if(t)return t;const o=function(e,t){let o=[];return R(e,((e,n,s)=>{"comment"===s&&(console.log(e),o.push(...e.blockTags.filter((e=>e.tag===t))))})),o}(e,"@docid");return o.length>0?o[0].text.trim():be(e)}function Re(e){if(e)for(let t of e){const e=ye(t,"@docgroup");if(e)return e.trim()}return null}function Ae(e){for(let t of e){if(ye(t,"@docgroup"))return t}return null}function ve(e){const t=e.type.types;let o=null;for(let n of t)if(pe(n)){const e=n.declaration.signatures;o||(o=e[0]);let t=Ae(e);if(t)return t}return o}function Se(e){const t=(o=e,n=b.CallSignature,A(o,(e=>e.kind===n)));var o,n;for(let s of t){const e=ye(s,"@docgrouptitle");if(e)return e.trim()}return null}function Te(e){for(let t of e.children){let e=Se(t.child);if(e)return e}return e.group}function we(e){if(e.kind===b.CallSignature)return ge(e)||le(e)||he(e)?[{group:xe(e),name:be(e),reflection:e,child:e}]:[];if(e.kind===b.TypeAlias||e.kind===b.GetSignature||e.kind===b.SetSignature)return[];const t=e.type.declaration.children.filter((e=>ge(e)||le(e)||he(e))),o=null!==ye(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>le(t)?{group:xe(t),name:be(t),namespace:o,reflection:e,child:t}:we(t)))}function Ce(e){const t=we(e),o=(0,r.groupBy)(t,(e=>e.group));let n=[];for(let s in o)n.push({group:s,children:o[s]});return n=(0,r.sortBy)(n,(e=>e.group)),n}}}]);