"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[4993],{4649:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var a=o(5250),s=o(5545);const n=JSON.parse('{"hash":"actions/os","pageTitle":"OS Actions","pageDescription":"OS actions are used to interact with the player\'s current session.","pageSidebarLabel":"OS","contents":[{"id":645,"order":9999,"name":"configBot","reflection":{"id":645,"name":"_configBot","variant":"signature","kind":524288,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the config bot (formerly known as the player bot).\\nThis is the bot that represents the player\'s browser tab.\\n\\nIt is "},{"kind":"code","text":"`tempLocal`"},{"kind":"text","text":" and is used to configure various portals."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the config bot and set a username on it.\\nconfigBot.tags.username = \\"bob\\";\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nOpen the sheetPortal to \\"testDimension\\".\\nconfigBot.tags.sheetPortal = \\"testDimension\\";\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"OS Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"OS"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"OS actions are used to interact with the player\'s current session."}]},{"tag":"@docname","content":[{"kind":"text","text":"configBot"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-os"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":3004,"character":16,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L3004"}],"type":{"type":"reference","target":3355,"name":"Bot","package":"@casual-simulation/aux-common","id":3355,"qualifiedName":"RuntimeBot"}},"comment":{"text":"Gets the config bot (formerly known as the player bot).\\nThis is the bot that represents the player\'s browser tab.\\n\\nIt is `tempLocal` and is used to configure various portals.","tags":[{"tagName":"example","text":"```ts\\nGet the config bot and set a username on it.\\nconfigBot.tags.username = \\"bob\\";\\n```"},{"tagName":"example","text":"```ts\\nOpen the sheetPortal to \\"testDimension\\".\\nconfigBot.tags.sheetPortal = \\"testDimension\\";\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"doctitle","text":"OS Actions"},{"tagName":"docsidebar","text":"OS"},{"tagName":"docdescription","text":"OS actions are used to interact with the player\'s current session."},{"tagName":"docname","text":"configBot"},{"tagName":"docgroup","text":"01-os"}]},"group":"01-os"},{"id":772,"order":9999,"name":"os.hideChat","reflection":{"id":772,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hides the \\"chat bar\\" at the top of the screen in CasualOS."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nHide the chat bar.\\nos.hideChat();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.hideChat"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-chat"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5556,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5556"}],"type":{"type":"reference","target":2908,"name":"ShowChatBarAction","package":"@casual-simulation/aux-common","id":2908,"qualifiedName":"ShowChatBarAction"}},"comment":{"text":"Hides the \\"chat bar\\" at the top of the screen in CasualOS.","tags":[{"tagName":"example","text":"```ts\\nHide the chat bar.\\nos.hideChat();\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.hideChat"},{"tagName":"docgroup","text":"10-chat"}]},"group":"10-chat"},{"id":764,"order":9999,"name":"showChat-options","reflection":{"id":764,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows the \\"chat bar\\" at the top of the screen in CasualOS, optionally using the given text as the placeholder.\\nTyping in the chat bar will send "},{"kind":"text","text":"[`@onChatTyping`](tags:@onChatTyping)"},{"kind":"text","text":" shouts and pressing Enter will send a "},{"kind":"text","text":"[`@onChat`](tags:@onChat)"},{"kind":"text","text":" shout and clear the chat bar."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar with a placeholder.\\nos.showChat({\\n    placeholder: \\"hello\\"\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar with some prefilled text.\\nos.showChat({\\n    prefill: \\"this is prefilled\\"\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar with some prefilled text and a placeholder.\\nos.showChat({\\n    prefill: \\"this is prefilled\\",\\n    placeholder: \\"hello\\"\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar with a custom placeholder color.\\nos.showChat({\\n    placeholder: \\"hello\\",\\n    placeholderColor: \'#44a471\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar with a custom background color.\\nos.showChat({\\n    placeholder: \\"hello\\",\\n    backgroundColor: \'#f1abe2\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar with a custom foreground color.\\nos.showChat({\\n    placeholder: \\"hello\\",\\n    foregroundColor: \'#531234\'\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.showChat"}]},{"tag":"@docid","content":[{"kind":"text","text":"showChat-options"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-chat"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5520,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5520"}],"parameters":[{"id":765,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the options that the chat bar should use."}],"blockTags":[]},"type":{"type":"reference","target":2676,"name":"ShowChatOptions","package":"@casual-simulation/aux-common","id":2676,"qualifiedName":"ShowChatOptions"}}],"type":{"type":"intrinsic","name":"void"}},"comment":{"text":"Shows the \\"chat bar\\" at the top of the screen in CasualOS, optionally using the given text as the placeholder.\\nTyping in the chat bar will send @onChatTyping shouts and pressing Enter will send a @onChat shout and clear the chat bar.","tags":[{"tagName":"example","text":"```ts\\nShow the chat bar with a placeholder.\\nos.showChat({\\n    placeholder: \\"hello\\"\\n});\\n```"},{"tagName":"example","text":"```ts\\nShow the chat bar with some prefilled text.\\nos.showChat({\\n    prefill: \\"this is prefilled\\"\\n});\\n```"},{"tagName":"example","text":"```ts\\nShow the chat bar with some prefilled text and a placeholder.\\nos.showChat({\\n    prefill: \\"this is prefilled\\",\\n    placeholder: \\"hello\\"\\n});\\n```"},{"tagName":"example","text":"```ts\\nShow the chat bar with a custom placeholder color.\\nos.showChat({\\n    placeholder: \\"hello\\",\\n    placeholderColor: \'#44a471\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nShow the chat bar with a custom background color.\\nos.showChat({\\n    placeholder: \\"hello\\",\\n    backgroundColor: \'#f1abe2\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nShow the chat bar with a custom foreground color.\\nos.showChat({\\n    placeholder: \\"hello\\",\\n    foregroundColor: \'#531234\'\\n});\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.showChat"},{"tagName":"docid","text":"showChat-options"},{"tagName":"docgroup","text":"10-chat"}]},"group":"10-chat"},{"id":760,"order":9999,"name":"showChat-placeholder","reflection":{"id":760,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows the \\"chat bar\\" at the top of the screen in CasualOS, optionally using the given text as the placeholder.\\nTyping in the chat bar will send "},{"kind":"text","text":"[`@onChatTyping`](tags:@onChatTyping)"},{"kind":"text","text":" shouts and pressing Enter will send a "},{"kind":"text","text":"[`@onChat`](tags:@onChat)"},{"kind":"text","text":" shout and clear the chat bar."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar.\\nos.showChat();\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the chat bar with some placeholder text.\\nos.showChat(\\"hello\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.showChat"}]},{"tag":"@docid","content":[{"kind":"text","text":"showChat-placeholder"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-chat"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5473,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5473"}],"parameters":[{"id":761,"name":"placeholder","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the text that the chat bar should show as the placeholder."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},"comment":{"text":"Shows the \\"chat bar\\" at the top of the screen in CasualOS, optionally using the given text as the placeholder.\\nTyping in the chat bar will send @onChatTyping shouts and pressing Enter will send a @onChat shout and clear the chat bar.","tags":[{"tagName":"example","text":"```ts\\nShow the chat bar.\\nos.showChat();\\n```"},{"tagName":"example","text":"```ts\\nShow the chat bar with some placeholder text.\\nos.showChat(\\"hello\\");\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.showChat"},{"tagName":"docid","text":"showChat-placeholder"},{"tagName":"docgroup","text":"10-chat"}]},"group":"10-chat"},{"id":1437,"order":9999,"name":"os.convertGeolocationToWhat3Words","reflection":{"id":1437,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given geolocation to a [what3words](https://what3words.com/) address. Returns a promise that resolves with the 3 word address."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the current geolocation as a 3 word address\\nconst location = await os.getGeolocation();\\n\\nif (location.success) {\\n    const address = await os.convertGeolocationToWhat3Words(location);\\n    os.toast(address);\\n} else {\\n    os.tost(\\"Could not get geolocation\\");\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the location of the Amway Grand as a 3 word address\\nconst address = await os.convertGeolocationToWhat3Words({\\n    latitude: 42.966824756903755,\\n    longitude: -85.67309821404483,\\n});\\nos.toast(address);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.convertGeolocationToWhat3Words"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-geolocation"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9189,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9189"}],"parameters":[{"id":1438,"name":"location","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The latitude and longitude that should be converted to a 3 word address."}],"blockTags":[]},"type":{"type":"reference","target":2637,"name":"ConvertGeolocationToWhat3WordsOptions","package":"@casual-simulation/aux-common","id":2637,"qualifiedName":"ConvertGeolocationToWhat3WordsOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Converts the given geolocation to a [what3words](https://what3words.com/) address. Returns a promise that resolves with the 3 word address.","tags":[{"tagName":"example","text":"```ts\\nGet the current geolocation as a 3 word address\\nconst location = await os.getGeolocation();\\n\\nif (location.success) {\\n    const address = await os.convertGeolocationToWhat3Words(location);\\n    os.toast(address);\\n} else {\\n    os.tost(\\"Could not get geolocation\\");\\n}\\n```"},{"tagName":"example","text":"```ts\\nGet the location of the Amway Grand as a 3 word address\\nconst address = await os.convertGeolocationToWhat3Words({\\n    latitude: 42.966824756903755,\\n    longitude: -85.67309821404483,\\n});\\nos.toast(address);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.convertGeolocationToWhat3Words"},{"tagName":"docgroup","text":"10-geolocation"}]},"group":"10-geolocation"},{"id":1065,"order":9999,"name":"os.getGeolocation","reflection":{"id":1065,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the geographic location that the current device is at in the world.\\n\\nReturns a promise that resolves with the location."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the current geolocation.\\nconst location = await os.getGeolocation();\\n\\nif (location.success) {\\n    os.toast(`You are at (${location.latitude}, ${location.longitude})`);\\n} else {\\n    os.toast(location.errorMessage);\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getGeolocation"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-geolocation"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7655,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L7655"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":2622,"name":"Geolocation","package":"@casual-simulation/aux-common","id":2622,"qualifiedName":"Geolocation"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets the geographic location that the current device is at in the world.\\n\\nReturns a promise that resolves with the location.","tags":[{"tagName":"example","text":"```ts\\nGet the current geolocation.\\nconst location = await os.getGeolocation();\\n\\nif (location.success) {\\n    os.toast(`You are at (${location.latitude}, ${location.longitude})`);\\n} else {\\n    os.toast(location.errorMessage);\\n}\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.getGeolocation"},{"tagName":"docgroup","text":"10-geolocation"}]},"group":"10-geolocation"},{"id":715,"order":9999,"name":"os.hideHtml","reflection":{"id":715,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Closes the HTML popup modal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nHide the HTML popup.\\nos.hideHtml();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.hideHtml"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-html"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5251,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5251"}],"type":{"type":"reference","target":2538,"name":"HideHtmlAction","package":"@casual-simulation/aux-common","id":2538,"qualifiedName":"HideHtmlAction"}},"comment":{"text":"Closes the HTML popup modal.","tags":[{"tagName":"example","text":"```ts\\nHide the HTML popup.\\nos.hideHtml();\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.hideHtml"},{"tagName":"docgroup","text":"10-html"}]},"group":"10-html"},{"id":711,"order":9999,"name":"os.showHtml","reflection":{"id":711,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows some HTML to the player in a popup modal. This can be useful for loading a separate webpage or providing some formatted text."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a header with some text.\\nos.showHtml(`\\n  <h1>This is some text!</h1>\\n`);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a YouTube video.\\nos.showHtml(`\\n  <iframe\\n      width=\\"560\\"\\n      height=\\"315\\"\\n      src=\\"https://www.youtube.com/embed/BHACKCNDMW8\\"\\n      frameborder=\\"0\\"\\n      allow=\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\"\\n      allowfullscreen>\\n  </iframe>\\n`);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.showHtml"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-html"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5237,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5237"}],"parameters":[{"id":712,"name":"html","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the HTML that should be shown to the user."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2533,"name":"ShowHtmlAction","package":"@casual-simulation/aux-common","id":2533,"qualifiedName":"ShowHtmlAction"}},"comment":{"text":"Shows some HTML to the player in a popup modal. This can be useful for loading a separate webpage or providing some formatted text.","tags":[{"tagName":"example","text":"```ts\\nShow a header with some text.\\nos.showHtml(`\\n  <h1>This is some text!</h1>\\n`);\\n```"},{"tagName":"example","text":"```ts\\nShow a YouTube video.\\nos.showHtml(`\\n  <iframe\\n      width=\\"560\\"\\n      height=\\"315\\"\\n      src=\\"https://www.youtube.com/embed/BHACKCNDMW8\\"\\n      frameborder=\\"0\\"\\n      allow=\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\"\\n      allowfullscreen>\\n  </iframe>\\n`);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.showHtml"},{"tagName":"docgroup","text":"10-html"}]},"group":"10-html"},{"id":930,"order":9999,"name":"os.loadInst","reflection":{"id":930,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Loads the given inst into the current browser tab. When the inst is loaded, the "},{"kind":"text","text":"[`@onInstJoined`](tags:@onInstJoined)"},{"kind":"text","text":" shout will be triggered.\\n\\nNote that separate instances cannot interact directly. They must instead interact via super shouts"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nLoad the \\"fun\\" inst.\\nos.loadInst(\\"fun\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.loadInst"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-load-inst"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6439,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L6439"}],"parameters":[{"id":931,"name":"id","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ID of the inst to load."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2809,"name":"LoadServerAction","package":"@casual-simulation/aux-common","id":2809,"qualifiedName":"LoadServerAction"}},"comment":{"text":"Loads the given inst into the current browser tab. When the inst is loaded, the @onInstJoined shout will be triggered.\\n\\nNote that separate instances cannot interact directly. They must instead interact via super shouts","tags":[{"tagName":"example","text":"```ts\\nLoad the \\"fun\\" inst.\\nos.loadInst(\\"fun\\");\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.loadInst"},{"tagName":"docgroup","text":"10-load-inst"}]},"group":"10-load-inst"},{"id":934,"order":9999,"name":"os.unloadInst","reflection":{"id":934,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Unloads the given inst from the current browser tab. When the inst is unloaded, the "},{"kind":"text","text":"[`@onInstLeave`](tags:@onInstLeave)"},{"kind":"text","text":" shout will be triggered."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nUnload the \\"fun\\" inst.\\nos.unloadInst(\\"fun\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.unloadInst"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-load-inst"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6456,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L6456"}],"parameters":[{"id":935,"name":"id","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the inst to unload."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2813,"name":"UnloadServerAction","package":"@casual-simulation/aux-common","id":2813,"qualifiedName":"UnloadServerAction"}},"comment":{"text":"Unloads the given inst from the current browser tab. When the inst is unloaded, the @onInstLeave shout will be triggered.","tags":[{"tagName":"example","text":"```ts\\nUnload the \\"fun\\" inst.\\nos.unloadInst(\\"fun\\");\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.unloadInst"},{"tagName":"docgroup","text":"10-load-inst"}]},"group":"10-load-inst"},{"id":782,"order":9999,"name":"os.device","reflection":{"id":782,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets information about the device that the player is using."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the device info and popup a message with it.\\nconst info = os.device();\\nos.toast(info);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.device"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-os-info"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5619,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5619"}],"type":{"type":"reference","target":3526,"name":"CasualOSDevice","package":"@casual-simulation/aux-runtime","id":3526,"qualifiedName":"AuxDevice"}},"comment":{"text":"Gets information about the device that the player is using.","tags":[{"tagName":"example","text":"```ts\\nGet the device info and popup a message with it.\\nconst info = os.device();\\nos.toast(info);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.device"},{"tagName":"docgroup","text":"10-os-info"}]},"group":"10-os-info"},{"id":788,"order":9999,"name":"os.enableCollaboration","reflection":{"id":788,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Attempts to enable collaboration features on the device."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nEnable collaboration on this device.\\nawait os.enableCollaboration();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.enableCollaboration"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-os-info"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5664,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5664"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Attempts to enable collaboration features on the device.","tags":[{"tagName":"example","text":"```ts\\nEnable collaboration on this device.\\nawait os.enableCollaboration();\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.enableCollaboration"},{"tagName":"docgroup","text":"10-os-info"}]},"group":"10-os-info"},{"id":785,"order":9999,"name":"os.isCollaborative","reflection":{"id":785,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets whether the current session was loaded with collaborative features enabled.\\n\\nWhen "},{"kind":"code","text":"`true`"},{"kind":"text","text":", CasualOS will attempt to sync the "},{"kind":"code","text":"`shared`"},{"kind":"text","text":" (including "},{"kind":"code","text":"`tempShared`"},{"kind":"text","text":" and "},{"kind":"code","text":"`remoteTempShared`"},{"kind":"text","text":") spaces with other players.\\nWhen "},{"kind":"code","text":"`false`"},{"kind":"text","text":", CasualOS will treat all the shared spaces like they are all "},{"kind":"code","text":"`tempLocal`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nToast whether the current session is collaborative.\\nconst isCollaborative = os.isCollaborative();\\nos.toast(isCollaborative ? \\"We are collaborative!\\" : \\"We are not collaborative!\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.isCollaborative"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-os-info"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5646,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5646"}],"type":{"type":"intrinsic","name":"boolean"}},"comment":{"text":"Gets whether the current session was loaded with collaborative features enabled.\\n\\nWhen `true`, CasualOS will attempt to sync the `shared` (including `tempShared` and `remoteTempShared`) spaces with other players.\\nWhen `false`, CasualOS will treat all the shared spaces like they are all `tempLocal`.","tags":[{"tagName":"example","text":"```ts\\nToast whether the current session is collaborative.\\nconst isCollaborative = os.isCollaborative();\\nos.toast(isCollaborative ? \\"We are collaborative!\\" : \\"We are not collaborative!\\");\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.isCollaborative"},{"tagName":"docgroup","text":"10-os-info"}]},"group":"10-os-info"},{"id":779,"order":9999,"name":"os.version","reflection":{"id":779,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets information about the version of CasualOS."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the current version and popup a message with it.\\nconst info = os.version();\\nos.toast(info.version);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCheck whether the current inst is for playing AUXes.\\nconst info = os.version();\\nconst isPlayer = info.playerMode === \\"player\\";\\nos.toast(\'Is Player: \' + isPlayer);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.version"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-os-info"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5604,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5604"}],"type":{"type":"reference","target":3518,"name":"CasualOSVersion","package":"@casual-simulation/aux-runtime","id":3518,"qualifiedName":"AuxVersion"}},"comment":{"text":"Gets information about the version of CasualOS.","tags":[{"tagName":"example","text":"```ts\\nGet the current version and popup a message with it.\\nconst info = os.version();\\nos.toast(info.version);\\n```"},{"tagName":"example","text":"```ts\\nCheck whether the current inst is for playing AUXes.\\nconst info = os.version();\\nconst isPlayer = info.playerMode === \\"player\\";\\nos.toast(\'Is Player: \' + isPlayer);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.version"},{"tagName":"docgroup","text":"10-os-info"}]},"group":"10-os-info"},{"id":1510,"order":9999,"name":"os.remoteCount","reflection":{"id":1510,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the number of remotes that are viewing the current inst.\\nOptionally takes a parameter which is the inst that the number of remotes should be retrieved for.\\nIf omitted, then the current inst will be checked. Returns a promise that resolves with the number of active remotes."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the number of remotes in the current inst.\\nconst numberOfRemotes = await os.remoteCount();\\nos.toast(\\"Number of Remotes: \\" + numberOfRemotes);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the number of remotes in the `test` inst.\\nconst numberOfRemotes = await os.remoteCount(\'test\');\\nos.toast(\\"Number of Remotes: \\" + numberOfRemotes);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.remoteCount"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-remotes"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9531,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9531"}],"parameters":[{"id":1511,"name":"inst","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the name of the inst that the number of remotes should be retrieved for. If not specified, then the current inst current inst will be used."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets the number of remotes that are viewing the current inst.\\nOptionally takes a parameter which is the inst that the number of remotes should be retrieved for.\\nIf omitted, then the current inst will be checked. Returns a promise that resolves with the number of active remotes.","tags":[{"tagName":"example","text":"```ts\\nGet the number of remotes in the current inst.\\nconst numberOfRemotes = await os.remoteCount();\\nos.toast(\\"Number of Remotes: \\" + numberOfRemotes);\\n```"},{"tagName":"example","text":"```ts\\nGet the number of remotes in the `test` inst.\\nconst numberOfRemotes = await os.remoteCount(\'test\');\\nos.toast(\\"Number of Remotes: \\" + numberOfRemotes);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.remoteCount"},{"tagName":"docgroup","text":"10-remotes"}]},"group":"10-remotes"},{"id":1485,"order":9999,"name":"os.remotes","reflection":{"id":1485,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the list of remote IDs that are connected to the current inst. Returns a promise that resolves with the list of remote IDs.\\n\\nThe resolved list will always have at least one value that represents the current remote."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the list of remote IDs.\\nconst remotes = await os.remotes();\\nos.toast(\\"Remotes \\" + remotes.join(\',\'));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.remotes"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-remotes"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9578,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9578"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets the list of remote IDs that are connected to the current inst. Returns a promise that resolves with the list of remote IDs.\\n\\nThe resolved list will always have at least one value that represents the current remote.","tags":[{"tagName":"example","text":"```ts\\nGet the list of remote IDs.\\nconst remotes = await os.remotes();\\nos.toast(\\"Remotes \\" + remotes.join(\',\'));\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.remotes"},{"tagName":"docgroup","text":"10-remotes"}]},"group":"10-remotes"},{"id":1514,"order":9999,"name":"os.totalRemoteCount","reflection":{"id":1514,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the number of devices that are connected to the server. Returns a promise that resolves with the number of active devices."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the number of devices on the server.\\nconst numberOfDevices = await os.totalRemoteCount();\\nos.toast(\\"Number of Devices: \\" + numberOfDevices);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.totalRemoteCount"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-remotes"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9554,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9554"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets the number of devices that are connected to the server. Returns a promise that resolves with the number of active devices.","tags":[{"tagName":"example","text":"```ts\\nGet the number of devices on the server.\\nconst numberOfDevices = await os.totalRemoteCount();\\nos.toast(\\"Number of Devices: \\" + numberOfDevices);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.totalRemoteCount"},{"tagName":"docgroup","text":"10-remotes"}]},"group":"10-remotes"},{"id":1499,"order":9999,"name":"os.applyUpdatesToInst","reflection":{"id":1499,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Applies the given updates to the current inst. Returns a promise that resolves once the updates have been applied.\\n\\nNote that you can call this function with the same update multiple times and you will end up with only one version of the bots saved in the update. Additionally, future changes to the bots will be preserved even if the update is applied again.\\n\\nThis feature makes inst updates useful when you want to ensure that an experience starts in an initial state but also able to change over time."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nApply an update that was saved to a tag\\nawait os.applyUpdatesToInst([ tags.savedUpdate ]);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.applyUpdatesToInst"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-updates"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9719,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9719"}],"parameters":[{"id":1500,"name":"updates","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the list of updates that should be applied to this inst."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":3532,"name":"InstUpdate","package":"@casual-simulation/aux-common","id":3532,"qualifiedName":"InstUpdate"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Applies the given updates to the current inst. Returns a promise that resolves once the updates have been applied.\\n\\nNote that you can call this function with the same update multiple times and you will end up with only one version of the bots saved in the update. Additionally, future changes to the bots will be preserved even if the update is applied again.\\n\\nThis feature makes inst updates useful when you want to ensure that an experience starts in an initial state but also able to change over time.","tags":[{"tagName":"example","text":"```ts\\nApply an update that was saved to a tag\\nawait os.applyUpdatesToInst([ tags.savedUpdate ]);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.applyUpdatesToInst"},{"tagName":"docgroup","text":"10-updates"}]},"group":"10-updates"},{"id":1495,"order":9999,"name":"os.createInitializationUpdate","reflection":{"id":1495,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an inst update that, when applied, ensures the given bots are created on this inst. Returns a promise that resolves with the inst update.\\n\\nNote that you can apply the same update multiple times and you will end up with only one version of the bots saved in the update. Additionally, future changes to the bots will be preserved even if the update is applied again.\\n\\nThis feature makes inst updates useful when you want to ensure that an experience starts in an initial state but also able to change over time.\\n\\nUnlike "},{"kind":"text","text":"[`os.getCurrentInstUpdate()`](ref:os.getCurrentInstUpdate)"},{"kind":"text","text":", this function creates an update that is not linked to this inst. This means that applying the update to the inst it was created in will create duplicate bots."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate an update with this bot and save it to a tag\\nconst update = await os.createInitializationUpdate([thisBot]);\\ntags.savedUpdate = update;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate an update with all the bots in the home dimension\\nconst update = await os.createInitializationUpdate(getBots(inDimension(\'home\')));\\ntags.savedUpdate = update;\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.createInitializationUpdate"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-updates"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9687,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9687"}],"parameters":[{"id":1496,"name":"bots","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the list of bots that should be included in the update."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":3355,"name":"Bot","package":"@casual-simulation/aux-common","id":3355,"qualifiedName":"RuntimeBot"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3532,"name":"InstUpdate","package":"@casual-simulation/aux-common","id":3532,"qualifiedName":"InstUpdate"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Creates an inst update that, when applied, ensures the given bots are created on this inst. Returns a promise that resolves with the inst update.\\n\\nNote that you can apply the same update multiple times and you will end up with only one version of the bots saved in the update. Additionally, future changes to the bots will be preserved even if the update is applied again.\\n\\nThis feature makes inst updates useful when you want to ensure that an experience starts in an initial state but also able to change over time.\\n\\nUnlike os.getCurrentInstUpdate, this function creates an update that is not linked to this inst. This means that applying the update to the inst it was created in will create duplicate bots.","tags":[{"tagName":"example","text":"```ts\\nCreate an update with this bot and save it to a tag\\nconst update = await os.createInitializationUpdate([thisBot]);\\ntags.savedUpdate = update;\\n```"},{"tagName":"example","text":"```ts\\nCreate an update with all the bots in the home dimension\\nconst update = await os.createInitializationUpdate(getBots(inDimension(\'home\')));\\ntags.savedUpdate = update;\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.createInitializationUpdate"},{"tagName":"docgroup","text":"10-updates"}]},"group":"10-updates"},{"id":1503,"order":9999,"name":"os.getCurrentInstUpdate","reflection":{"id":1503,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves an inst update that represents the current local shared state of the inst. Returns a promise that resolves with the update.\\n\\nNote that the inst update only contains bots and tag masks from the "},{"kind":"code","text":"`shared`"},{"kind":"text","text":" space. Useful for saving the current shared state of the inst so that it can be restored later or transferred to another inst.\\n\\nUnlike "},{"kind":"text","text":"[`os.createInitializationUpdate(bots)`](ref:os.createInitializationUpdate)"},{"kind":"text","text":", this function creates an update that is linked to this inst. This means that applying the update to the inst it was created in will not create duplicate bots. It is still possible to apply the update to other insts, but it may create duplicate bots depending on the history of the other inst."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSave the current inst state to a local bot\\nconst update = await os.getCurrentInstUpdate();\\ncreate({\\n    space: \'local\',\\n    backup: true,\\n    timestamp: update.timestamp,\\n    update: update\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nRestore from a local bot\\nconst savedUpdates = getBots(bySpace(\'local\'), byTag(\'backup\', true));\\nsavedUpdates.sort((a, b) => b.timestamp - a.timestamp);\\n\\nif (savedUpdates.length > 0) {\\n    const update = savedUpdates[0].tags.update;\\n    await os.applyUpdatesToInst([update]);\\n    os.toast(\\"Restored!\\");\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getCurrentInstUpdate"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-updates"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9760,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9760"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3532,"name":"InstUpdate","package":"@casual-simulation/aux-common","id":3532,"qualifiedName":"InstUpdate"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Retrieves an inst update that represents the current local shared state of the inst. Returns a promise that resolves with the update.\\n\\nNote that the inst update only contains bots and tag masks from the `shared` space. Useful for saving the current shared state of the inst so that it can be restored later or transferred to another inst.\\n\\nUnlike os.createInitializationUpdate, this function creates an update that is linked to this inst. This means that applying the update to the inst it was created in will not create duplicate bots. It is still possible to apply the update to other insts, but it may create duplicate bots depending on the history of the other inst.","tags":[{"tagName":"example","text":"```ts\\nSave the current inst state to a local bot\\nconst update = await os.getCurrentInstUpdate();\\ncreate({\\n    space: \'local\',\\n    backup: true,\\n    timestamp: update.timestamp,\\n    update: update\\n});\\n```"},{"tagName":"example","text":"```ts\\nRestore from a local bot\\nconst savedUpdates = getBots(bySpace(\'local\'), byTag(\'backup\', true));\\nsavedUpdates.sort((a, b) => b.timestamp - a.timestamp);\\n\\nif (savedUpdates.length > 0) {\\n    const update = savedUpdates[0].tags.update;\\n    await os.applyUpdatesToInst([update]);\\n    os.toast(\\"Restored!\\");\\n}\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.getCurrentInstUpdate"},{"tagName":"docgroup","text":"10-updates"}]},"group":"10-updates"},{"id":1491,"order":9999,"name":"os.getInstStateFromUpdates","reflection":{"id":1491,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the inst state from the given list of updates. Returns a promise that resolves with the bot state that the updates produce.\\n\\nUseful for tracking the history of an inst over time."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the last 5 inst states in the shared space\\nconst updates = await os.listInstUpdates();\\n\\nlet states = [];\\nfor(let i = 5; i >= 0; i--) {\\n    const state = await os.getInstStateFromUpdates(updates.slice(0, updates.length - i));\\n    states.push(state);\\n}\\n\\nconsole.log(\'States: \', states);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the last deltas from shared space updates\\nconst updates = await os.listInstUpdates();\\n\\nlet lastState;\\nlet deltas = [];\\nfor(let i = 5; i >= 0; i--) {\\n    const state = await os.getInstStateFromUpdates(updates.slice(0, updates.length - i));\\n\\n    if (lastState) {\\n        const delta = diffSnapshots(lastState, state);\\n        deltas.push(delta);\\n    }\\n\\n    lastState = state;\\n}\\nconsole.log(\'Deltas: \', deltas);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getInstStateFromUpdates"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-updates"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9651,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9651"}],"parameters":[{"id":1492,"name":"updates","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The updates that the state should be calculated from."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":3532,"name":"InstUpdate","package":"@casual-simulation/aux-common","id":3532,"qualifiedName":"InstUpdate"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3508,"name":"BotState","package":"@casual-simulation/aux-common","id":3508,"qualifiedName":"BotsState"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Calculates the inst state from the given list of updates. Returns a promise that resolves with the bot state that the updates produce.\\n\\nUseful for tracking the history of an inst over time.","tags":[{"tagName":"example","text":"```ts\\nGet the last 5 inst states in the shared space\\nconst updates = await os.listInstUpdates();\\n\\nlet states = [];\\nfor(let i = 5; i >= 0; i--) {\\n    const state = await os.getInstStateFromUpdates(updates.slice(0, updates.length - i));\\n    states.push(state);\\n}\\n\\nconsole.log(\'States: \', states);\\n```"},{"tagName":"example","text":"```ts\\nCalculate the last deltas from shared space updates\\nconst updates = await os.listInstUpdates();\\n\\nlet lastState;\\nlet deltas = [];\\nfor(let i = 5; i >= 0; i--) {\\n    const state = await os.getInstStateFromUpdates(updates.slice(0, updates.length - i));\\n\\n    if (lastState) {\\n        const delta = diffSnapshots(lastState, state);\\n        deltas.push(delta);\\n    }\\n\\n    lastState = state;\\n}\\nconsole.log(\'Deltas: \', deltas);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.getInstStateFromUpdates"},{"tagName":"docgroup","text":"10-updates"}]},"group":"10-updates"},{"id":1488,"order":9999,"name":"os.listInstUpdates","reflection":{"id":1488,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the list of updates that have occurred in the shared space. Returns a promise that resolves with the list of updates.\\n\\nUseful when combined with "},{"kind":"text","text":"[`os.getInstStateFromUpdates(updates)`](ref:os.getInstStateFromUpdates)"},{"kind":"text","text":" to track the history of an inst over time."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a list of updates to shared space\\nconst updates = await os.listInstUpdates();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.listInstUpdates"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-updates"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9601,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L9601"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3532,"name":"InstUpdate","package":"@casual-simulation/aux-common","id":3532,"qualifiedName":"InstUpdate"}}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets the list of updates that have occurred in the shared space. Returns a promise that resolves with the list of updates.\\n\\nUseful when combined with os.getInstStateFromUpdates to track the history of an inst over time.","tags":[{"tagName":"example","text":"```ts\\nGet a list of updates to shared space\\nconst updates = await os.listInstUpdates();\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.listInstUpdates"},{"tagName":"docgroup","text":"10-updates"}]},"group":"10-updates"},{"id":829,"order":9999,"name":"os.disableWakeLock","reflection":{"id":829,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Disables the wake lock that was previously enabled. Returns a promise that resolves once the wake lock has been disabled."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nDisable the wake lock\\nawait os.disableWakeLock();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.disableWakeLock"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-wake-lock"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5891,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5891"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Disables the wake lock that was previously enabled. Returns a promise that resolves once the wake lock has been disabled.","tags":[{"tagName":"example","text":"```ts\\nDisable the wake lock\\nawait os.disableWakeLock();\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.disableWakeLock"},{"tagName":"docgroup","text":"10-wake-lock"}]},"group":"10-wake-lock"},{"id":832,"order":9999,"name":"os.getWakeLockConfiguration","reflection":{"id":832,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the current wake lock state. Returns a promise that resolves with an object that contains information about the current wake lock state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the current wake lock state\\nconst configuration = await os.getWakeLockConfiguration();\\n\\nif (configuration.enabled) {\\n    os.toast(\'Wake lock is enabled!\');\\n} else {\\n    os.toast(\'Wake lock is disabled.\');\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getWakeLockConfiguration"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-wake-lock"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5913,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5913"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3276,"name":"WakeLockConfiguration","package":"@casual-simulation/aux-common","id":3276,"qualifiedName":"WakeLockConfiguration"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Retrieves the current wake lock state. Returns a promise that resolves with an object that contains information about the current wake lock state.","tags":[{"tagName":"example","text":"```ts\\nGet the current wake lock state\\nconst configuration = await os.getWakeLockConfiguration();\\n\\nif (configuration.enabled) {\\n    os.toast(\'Wake lock is enabled!\');\\n} else {\\n    os.toast(\'Wake lock is disabled.\');\\n}\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.getWakeLockConfiguration"},{"tagName":"docgroup","text":"10-wake-lock"}]},"group":"10-wake-lock"},{"id":826,"order":9999,"name":"os.requestWakeLock","reflection":{"id":826,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Requests a wake lock that will keep the device screen awake.\\nThis will ask the user for permission to keep the screen awake.\\nReturns a promise that resolves once the wake lock has been granted. If the wake lock is denied, then an error will be thrown.\\n\\nUseful for a kiosk mode where the screen is always supposed to be on."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nRequest a wake lock from the user.\\nawait os.requestWakeLock();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.requestWakeLock"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-wake-lock"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5875,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5875"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Requests a wake lock that will keep the device screen awake.\\nThis will ask the user for permission to keep the screen awake.\\nReturns a promise that resolves once the wake lock has been granted. If the wake lock is denied, then an error will be thrown.\\n\\nUseful for a kiosk mode where the screen is always supposed to be on.","tags":[{"tagName":"example","text":"```ts\\nRequest a wake lock from the user.\\nawait os.requestWakeLock();\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.requestWakeLock"},{"tagName":"docgroup","text":"10-wake-lock"}]},"group":"10-wake-lock"},{"id":1009,"order":9999,"name":"os.openDevConsole","reflection":{"id":1009,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs CasualOS to open the built-in developer console.\\nThe dev console provides easy access to error messages and debug logs for formulas and actions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nOpen the developer console.\\nos.openDevConsole();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.openDevConsole"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"12-dev"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7149,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L7149"}],"type":{"type":"reference","target":2784,"name":"OpenConsoleAction","package":"@casual-simulation/aux-common","id":2784,"qualifiedName":"OpenConsoleAction"}},"comment":{"text":"Instructs CasualOS to open the built-in developer console.\\nThe dev console provides easy access to error messages and debug logs for formulas and actions.","tags":[{"tagName":"example","text":"```ts\\nOpen the developer console.\\nos.openDevConsole();\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.openDevConsole"},{"tagName":"docgroup","text":"12-dev"}]},"group":"12-dev"},{"id":1524,"order":9999,"name":"os.meetCommand","reflection":{"id":1524,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Send a [command](https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-iframe-commands) to the Jitsi Meet API. The commands are only valid if the meet portal is fully loaded (see "},{"kind":"text","text":"[`@onMeetLoaded`](tags:@onMeetLoaded)"},{"kind":"text","text":").\\n\\nReturns a promise that resolves when the command has been executed."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nChange user\'s meet display name\\nos.meetCommand(\'displayName\', \'ABC123\');\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nClose the meet.\\nos.meetCommand(\'hangup\')\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.meetCommand"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"12-meet"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":11138,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L11138"}],"parameters":[{"id":1525,"name":"command","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the command to execute."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1526,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The arguments for the command (if any)."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Send a [command](https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-iframe-commands) to the Jitsi Meet API. The commands are only valid if the meet portal is fully loaded (see @onMeetLoaded).\\n\\nReturns a promise that resolves when the command has been executed.","tags":[{"tagName":"example","text":"```ts\\nChange user\'s meet display name\\nos.meetCommand(\'displayName\', \'ABC123\');\\n```"},{"tagName":"example","text":"```ts\\nClose the meet.\\nos.meetCommand(\'hangup\')\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.meetCommand"},{"tagName":"docgroup","text":"12-meet"}]},"group":"12-meet"},{"id":1529,"order":9999,"name":"os.meetFunction","reflection":{"id":1529,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Executes the given [function](https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-iframe-functions) on the Jitsi Meet API and returns a promise that resolves with the result. The functions are only valid if the meet portal is fully loaded (see @onMeetLoaded)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a list of all the participants.\\nconst participants = await os.meetFunction(\'getParticipantsInfo\')\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a list of available breakout rooms.\\nconst rooms = await os.meetFunction(\'listBreakoutRooms\');\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.meetFunction"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"12-meet"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":11160,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L11160"}],"parameters":[{"id":1530,"name":"functionName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the function to execute."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1531,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the arguments to provide to the function."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Executes the given [function](https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-iframe-functions) on the Jitsi Meet API and returns a promise that resolves with the result. The functions are only valid if the meet portal is fully loaded (see @onMeetLoaded).","tags":[{"tagName":"example","text":"```ts\\nGet a list of all the participants.\\nconst participants = await os.meetFunction(\'getParticipantsInfo\')\\n```"},{"tagName":"example","text":"```ts\\nGet a list of available breakout rooms.\\nconst rooms = await os.meetFunction(\'listBreakoutRooms\');\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.meetFunction"},{"tagName":"docgroup","text":"12-meet"}]},"group":"12-meet"},{"id":1115,"order":9999,"name":"os.getAverageFrameRate","reflection":{"id":1115,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the number of frames that have occurred over the last second.\\nReturns a promise that resolves with the number of frames that have ocurred in the last second."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the current frames per second.\\nlet fps = await os.getAverageFrameRate();\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate a basic FPS counter.\\nsetInterval(async () => {\\n    masks.label = await os.getAverageFrameRate();\\n}, 1000);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getAverageFrameRate"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14365,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L14365"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets the number of frames that have occurred over the last second.\\nReturns a promise that resolves with the number of frames that have ocurred in the last second.","tags":[{"tagName":"example","text":"```ts\\nGet the current frames per second.\\nlet fps = await os.getAverageFrameRate();\\n```"},{"tagName":"example","text":"```ts\\nCreate a basic FPS counter.\\nsetInterval(async () => {\\n    masks.label = await os.getAverageFrameRate();\\n}, 1000);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.getAverageFrameRate"}]},"group":null},{"id":1111,"order":9999,"name":"os.getMediaPermission","reflection":{"id":1111,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets permission from user to access audio and/or video streams from the device.\\n\\nReturns a promise that resolves if the user grants the specified media permission(s).\\nIf the user blocks permission or has previously blocked permission or any other problem occurs, an error will be thrown."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet permission for the device\'s microphone.\\ntry {\\n    await os.getMediaPermission({ audio: true });\\n} catch (e) {\\n    console.error(\'Could not get permission for microphone:\', e);\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet permission for the device\'s microphone and camera.\\ntry {\\n    await os.getMediaPermission({ audio: true, video: true });\\n} catch (e) {\\n    console.error(\'Could not get permission for microphone and/or camera:\', e);\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getMediaPermission"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14344,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L14344"}],"parameters":[{"id":1112,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The options that should be used for requesting media permissions. At least one of "},{"kind":"code","text":"`audio`"},{"kind":"text","text":" or "},{"kind":"code","text":"`video`"},{"kind":"text","text":" must be set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}],"blockTags":[]},"type":{"type":"reference","target":2936,"name":"MediaPermissionOptions","package":"@casual-simulation/aux-common","id":2936,"qualifiedName":"MediaPermssionOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets permission from user to access audio and/or video streams from the device.\\n\\nReturns a promise that resolves if the user grants the specified media permission(s).\\nIf the user blocks permission or has previously blocked permission or any other problem occurs, an error will be thrown.","tags":[{"tagName":"example","text":"```ts\\nGet permission for the device\'s microphone.\\ntry {\\n    await os.getMediaPermission({ audio: true });\\n} catch (e) {\\n    console.error(\'Could not get permission for microphone:\', e);\\n}\\n```"},{"tagName":"example","text":"```ts\\nGet permission for the device\'s microphone and camera.\\ntry {\\n    await os.getMediaPermission({ audio: true, video: true });\\n} catch (e) {\\n    console.error(\'Could not get permission for microphone and/or camera:\', e);\\n}\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.getMediaPermission"}]},"group":null},{"id":1061,"order":9999,"name":"os.log","reflection":{"id":1061,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Logs the given data to the developer console."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nLog \\"Hello, World!\\" to the browser developer console.\\nos.log(\\"Hello, World!\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.log"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7633,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L7633"}],"parameters":[{"id":1062,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the data that should be logged."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}},"comment":{"text":"Logs the given data to the developer console.","tags":[{"tagName":"example","text":"```ts\\nLog \\"Hello, World!\\" to the browser developer console.\\nos.log(\\"Hello, World!\\");\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.log"}]},"group":null},{"id":775,"order":9999,"name":"os.run","reflection":{"id":775,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Runs the given script.\\nThe script will be executed in a separate environment with no "},{"kind":"code","text":"`bot`"},{"kind":"text","text":", "},{"kind":"code","text":"`tags`"},{"kind":"text","text":", "},{"kind":"code","text":"`this`"},{"kind":"text","text":", "},{"kind":"code","text":"`thisBot`"},{"kind":"text","text":", "},{"kind":"code","text":"`data`"},{"kind":"text","text":", and "},{"kind":"code","text":"`that`"},{"kind":"text","text":" variables.\\nThis means that you need to use the "},{"kind":"text","text":"[`getBot(...filters)`](ref:getbot-filters)"},{"kind":"text","text":" or "},{"kind":"text","text":"[`getBots(...filters)`](ref:getbots-filters)"},{"kind":"text","text":" functions to read bot data.\\n\\nReturns a promise that resolves with the returned script value after it has been executed."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nRun a script that says \\"hello\\".\\nos.run(\\"os.toast(\'hello\');\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nRun a script from the #script tag on the current bot.\\nos.run(tags.script);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nRun a script and toast the result.\\nconst result = await os.run(\\"return 594 + 391\\");\\nos.toast(result);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.run"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5582,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5582"}],"parameters":[{"id":776,"name":"script","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The script that should be executed."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Runs the given script.\\nThe script will be executed in a separate environment with no `bot`, `tags`, `this`, `thisBot`, `data`, and `that` variables.\\nThis means that you need to use the getbot-filters or getbots-filters functions to read bot data.\\n\\nReturns a promise that resolves with the returned script value after it has been executed.","tags":[{"tagName":"example","text":"```ts\\nRun a script that says \\"hello\\".\\nos.run(\\"os.toast(\'hello\');\\");\\n```"},{"tagName":"example","text":"```ts\\nRun a script from the #script tag on the current bot.\\nos.run(tags.script);\\n```"},{"tagName":"example","text":"```ts\\nRun a script and toast the result.\\nconst result = await os.run(\\"return 594 + 391\\");\\nos.toast(result);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.run"}]},"group":null},{"id":718,"order":9999,"name":"os.setClipboard","reflection":{"id":718,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Copies the given text to the player\'s clipboard. On Chrome and Firefox, this will act like a "},{"kind":"code","text":"`Ctrl+C`"},{"kind":"text","text":"/"},{"kind":"code","text":"`Cmd+C`"},{"kind":"text","text":".\\nOn Safari and all iOS browsers this will open a popup which prompts the player to copy the text."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCopy \\"hello\\" to the player\'s clipboard.\\nos.setClipboard(\\"hello\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.setClipboard"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5267,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5267"}],"parameters":[{"id":719,"name":"text","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the text that should be copied to the player\'s clipboard."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2905,"name":"SetClipboardAction","package":"@casual-simulation/aux-common","id":2905,"qualifiedName":"SetClipboardAction"}},"comment":{"text":"Copies the given text to the player\'s clipboard. On Chrome and Firefox, this will act like a `Ctrl+C`/`Cmd+C`.\\nOn Safari and all iOS browsers this will open a popup which prompts the player to copy the text.","tags":[{"tagName":"example","text":"```ts\\nCopy \\"hello\\" to the player\'s clipboard.\\nos.setClipboard(\\"hello\\");\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.setClipboard"}]},"group":null},{"id":1028,"order":9999,"name":"os.share","reflection":{"id":1028,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shares the given URL or text via the device\'s social share capabilities. Returns a Promise that resolves when sharing has succeeded or failed."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShare a URL.\\nos.share({\\n    url: \'https://example.com\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShare some text.\\nos.share({\\n    text: \'abcdefghijklmnopqrstuvwxyz\'\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.share"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7264,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L7264"}],"parameters":[{"id":1029,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the options for sharing."}],"blockTags":[]},"type":{"type":"reference","target":2682,"name":"ShareOptions","package":"@casual-simulation/aux-common","id":2682,"qualifiedName":"ShareOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Shares the given URL or text via the device\'s social share capabilities. Returns a Promise that resolves when sharing has succeeded or failed.","tags":[{"tagName":"example","text":"```ts\\nShare a URL.\\nos.share({\\n    url: \'https://example.com\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nShare some text.\\nos.share({\\n    text: \'abcdefghijklmnopqrstuvwxyz\'\\n});\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.share"}]},"group":null},{"id":680,"order":9999,"name":"os.sleep","reflection":{"id":680,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Waits the amount of time provided, in [miliseconds](https://en.wikipedia.org/wiki/Millisecond).\\n\\nReturns a promise that resolves when the time has been waited."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nWait 2 seconds before proceeding.\\nos.toast(\\"Stop!\\");\\nawait os.sleep(2000);\\nos.toast(\\"Hammer Time!\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.sleep"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":10131,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L10131"}],"parameters":[{"id":681,"name":"time","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the Time to wait in ms. 1 second is 1000 ms."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Waits the amount of time provided, in [miliseconds](https://en.wikipedia.org/wiki/Millisecond).\\n\\nReturns a promise that resolves when the time has been waited.","tags":[{"tagName":"example","text":"```ts\\nWait 2 seconds before proceeding.\\nos.toast(\\"Stop!\\");\\nawait os.sleep(2000);\\nos.toast(\\"Hammer Time!\\");\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.sleep"}]},"group":null},{"id":684,"order":9999,"name":"os.toast","reflection":{"id":684,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows a temporary \\"toast\\" notification to the player at the bottom of the screen with the given message.\\nOptionally accepts a duration parameter which is the number of seconds that the message should be on the screen."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a \\"Hello!\\" toast message.\\nos.toast(\\"Hello!\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the player a code for 5 seconds.\\nos.toast(\\"this is the code\\", 5);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.toast"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5075,"character":13,"url":"https://github.com/KallynGowdy/casualos/blob/56c869f96/src/aux-runtime/runtime/AuxLibrary.ts#L5075"}],"parameters":[{"id":685,"name":"message","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the text that the toast message should show."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"object"},{"type":"array","elementType":{"type":"intrinsic","name":"any"}}]}},{"id":686,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number of seconds that the message should be on the screen. (Default is 2)"}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"2"}],"type":{"type":"reference","target":2513,"name":"ShowToastAction","package":"@casual-simulation/aux-common","id":2513,"qualifiedName":"ShowToastAction"}},"comment":{"text":"Shows a temporary \\"toast\\" notification to the player at the bottom of the screen with the given message.\\nOptionally accepts a duration parameter which is the number of seconds that the message should be on the screen.","tags":[{"tagName":"example","text":"```ts\\nShow a \\"Hello!\\" toast message.\\nos.toast(\\"Hello!\\");\\n```"},{"tagName":"example","text":"```ts\\nShow the player a code for 5 seconds.\\nos.toast(\\"this is the code\\", 5);\\n```"},{"tagName":"dochash","text":"actions/os"},{"tagName":"docname","text":"os.toast"}]},"group":null}],"references":{"CasualOSError":"types/error","id-3539":"CasualOSError","Quaternion":"types/math/rotations","id-127":"Quaternion","Rotation":"types/math/rotations","id-154":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-3558":"AIChatMessage","AIChatOptions":"types/ai","id-3328":"AIChatOptions","AIGenerateImageSuccess":"types/ai","id-2478":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-3342":"AIGenerateImageOptions","AIGenerateSkyboxOptions":"types/ai","id-3338":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-2471":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-2475":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-2481":"AIGeneratedImage","ARSupportedAction":"types/os","id-3073":"ARSupportedAction","AddCountFailure":"types/records/events","id-3743":"AddCountFailure","AddCountSuccess":"types/records/events","id-3738":"AddCountSuccess","AddDropSnapAction":"types/os","id-2702":"AddDropSnapAction","AddDropSnapPointsAction":"types/os","id-2706":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os","id-3278":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-2075":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-2451":"AttachDebuggerOptions","AuthData":"types/os","id-3217":"AuthData","CasualOSDevice":"types/os","id-3526":"CasualOSDevice","CasualOSVersion":"types/os","id-3518":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-200":"AxisAndAngle","BeginRecordingAction":"types/os","id-3160":"BeginRecordingAction","BotTagMasks":"types/core","id-3495":"BotTagMasks","BotTags":"types/core","id-3410":"BotTags","BotState":"types/core","id-3508":"BotState","BufferFormAddressGLTFAction":"types/os","id-3285":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os","id-2884":"BufferSoundAction","CalculateRayFromCameraAction":"types/os","id-3258":"CalculateRayFromCameraAction","CancelSoundAction":"types/os","id-2890":"CancelSoundAction","CompiledBotListeners":"types/core","id-3489":"CompiledBotListeners","ConfigureWakeLockAction":"types/os","id-3265":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os","id-2648":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os","id-2637":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-3680":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-3676":"CreatePublicRecordKeySuccess","CustomAppContainerAvailableAction":"types/os","id-3117":"CustomAppContainerAvailableAction","DebuggerCallFrame":"types/debuggers/common","id-2404":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-2439":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-2433":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-2412":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-2418":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-2445":"DebuggerVariable","DefineGlobalBotAction":"types/os","id-2641":"DefineGlobalBotAction","DownloadAction":"types/os","id-2896":"DownloadAction","Easing":"types/animation","id-2619":"Easing","EnableARAction":"types/os","id-3069":"EnableARAction","EnableCollaborationAction":"types/os","id-3028":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os","id-2732":"EnableCustomDraggingAction","EnablePOVAction":"types/os","id-3087":"EnablePOVAction","EnableVRAction":"types/os","id-3083":"EnableVRAction","EnableXROptions":"types/os","id-2939":"EnableXROptions","EndRecordingAction":"types/os","id-3168":"EndRecordingAction","EraseDataFailure":"types/records/data","id-3714":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-3710":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-3733":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-3729":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-203":"EulerAnglesRotation","ExitFullscreenAction":"types/os","id-3102":"ExitFullscreenAction","FocusOnOptions":"types/os","id-2686":"FocusOnOptions","FocusOnRotation":"types/os","id-2698":"FocusOnRotation","FormAnimationData":"types/os","id-2984":"FormAnimationData","FromToRotation":"types/math/rotations","id-197":"FromToRotation","GenericError":"types/error","id-3536":"GenericError","GetAverageFrameRateAction":"types/os","id-3238":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-3754":"GetCountFailure","GetCountSuccess":"types/records/events","id-3748":"GetCountSuccess","GetDataFailure":"types/records/data","id-3705":"GetDataFailure","GetDataSuccess":"types/records/data","id-3696":"GetDataSuccess","GetGeolocationAction":"types/os","id-3201":"GetGeolocationAction","GetRoomOptionsFailure":"types/os","id-2166":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os","id-2162":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os","id-2209":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os","id-2204":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os","id-2185":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os","id-2180":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os","id-3196":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os","id-3271":"GetWakeLockConfigurationAction","GoToTagAction":"types/os","id-3206":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-3782":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-3780":"GrantMarkerPermissionSuccess","GrantRoleFailure":"types/records/roles","id-3768":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-3766":"GrantRoleSuccess","HtmlAppEventAction":"types/os","id-2548":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os","id-2553":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os","id-2737":"ImageClassifierOptions","InstUpdate":"types/os","id-3532":"InstUpdate","JoinRoomFailure":"types/os","id-2147":"JoinRoomFailure","JoinRoomSuccess":"types/os","id-2144":"JoinRoomSuccess","LeaveRoomFailure":"types/os","id-2156":"LeaveRoomFailure","LeaveRoomSuccess":"types/os","id-2153":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-3724":"ListDataFailure","ListDataSuccess":"types/records/data","id-3719":"ListDataSuccess","ListFormAnimationsAction":"types/os","id-2988":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-3797":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-3794":"ListStudiosSuccess","ListedStudio":"types/records/studios","id-3801":"ListedStudio","LoadBotsAction":"types/os","id-3033":"LoadBotsAction","LoadSpaceAction":"types/os","id-2929":"LoadSpaceAction","LocalFormAnimationAction":"types/os","id-3040":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os","id-3054":"LocalPositionTweenAction","LocalTweenAction":"types/os","id-3044":"LocalTweenAction","LookRotation":"types/math/rotations","id-211":"LookRotation","MediaPermissionAction":"types/os","id-3231":"MediaPermissionAction","MediaPermissionOptions":"types/os","id-2936":"MediaPermissionOptions","MeetCommandAction":"types/os","id-3173":"MeetCommandAction","MeetFunctionAction":"types/os","id-3180":"MeetFunctionAction","Debugger":"types/debuggers/debugger","id-2216":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-2423":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os","id-3150":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os","id-3157":"OpenCircleWipeOptions","PhotoCameraOptions":"types/camera","id-3012":"PhotoCameraOptions","OpenURLAction":"types/os","id-2873":"OpenURLAction","ParsedBotLink":"types/core","id-3514":"ParsedBotLink","PartialBotState":"types/core","id-3511":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-2272":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-2428":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-2391":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-2399":"PauseTriggerOptions","Photo":"types/camera","id-3024":"Photo","PlaySoundAction":"types/os","id-2877":"PlaySoundAction","PossiblePauseTriggerLocation":"types/debuggers/common","id-2386":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-2460":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-215":"QuaternionRotation","RaycastFromCameraAction":"types/os","id-3243":"RaycastFromCameraAction","RaycastInPortalAction":"types/os","id-3250":"RaycastInPortalAction","RaycastRay":"types/os","id-2140":"RaycastRay","RaycastResult":"types/os","id-2137":"RaycastResult","RecordActionOptions":"types/records/extra","id-3291":"RecordActionOptions","RecordDataFailure":"types/records/data","id-3690":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-3686":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-2107":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-2103":"RecordFileSuccess","RecordedFile":"types/experimental","id-2999":"RecordedFile","Recording":"types/experimental","id-2997":"Recording","RecordingOptions":"types/experimental","id-3004":"RecordingOptions","RegisterBuiltinPortalAction":"types/os","id-3112":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os","id-3120":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os","id-3133":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-2994":"RegisterPrefixOptions","RejectAction":"types/os","id-2902":"RejectAction","RemoteAction":"types/os","id-3807":"RemoteAction","RequestAuthDataAction":"types/os","id-3211":"RequestAuthDataAction","RequestFullscreenAction":"types/os","id-3100":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-3789":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-3787":"RevokeMarkerPermissionSuccess","RevokeRoleFailure":"types/records/roles","id-3775":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-3773":"RevokeRoleSuccess","RoomJoinOptions":"types/os","id-3294":"RoomJoinOptions","RoomOptions":"types/os","id-3303":"RoomOptions","RoomRemoteOptions":"types/os","id-3319":"RoomRemoteOptions","RoomTrackOptions":"types/os","id-3307":"RoomTrackOptions","RunScriptAction":"types/os","id-2916":"RunScriptAction","RuntimeBot":"types/core","id-3355":"RuntimeBot","RuntimeBotLinks":"types/core","id-3501":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-3498":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-222":"SequenceRotation","SerializableMutationRecord":"types/os","id-2562":"SerializableMutationRecord","SessionSelector":"types/os","id-2486":"SessionSelector","SetAppOutputAction":"types/os","id-3145":"SetAppOutputAction","SetClipboardAction":"types/os","id-2905":"SetClipboardAction","SetRoomOptionsSuccess":"types/os","id-2171":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os","id-3325":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os","id-2197":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os","id-2192":"SetRoomTrackOptionsSuccess","ShareAction":"types/os","id-3104":"ShareAction","ShareOptions":"types/os","id-2682":"ShareOptions","ShowChatBarAction":"types/os","id-2908":"ShowChatBarAction","ShowChatOptions":"types/os","id-2676":"ShowChatOptions","ShowConfirmAction":"types/os","id-2758":"ShowConfirmAction","ShowConfirmOptions":"types/os","id-2753":"ShowConfirmOptions","ShowInputOptions":"types/os","id-2742":"ShowInputOptions","ShowJoinCodeAction":"types/os","id-3096":"ShowJoinCodeAction","ShowUploadAuxFileAction":"types/os","id-2922":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os","id-2924":"ShowUploadFilesAction","SnapAxis":"types/os","id-2656":"SnapAxis","SnapGrid":"types/os","id-2711":"SnapGrid","SnapGridTarget":"types/os","id-2112":"SnapGridTarget","SnapPoint":"types/os","id-2668":"SnapPoint","SpeakTextAction":"types/os","id-3187":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-2456":"SpeakTextOptions","StartFormAnimationAction":"types/os","id-2965":"StartFormAnimationAction","StartFormAnimationOptions":"types/os","id-2941":"StartFormAnimationOptions","StopFormAnimationAction":"types/os","id-2954":"StopFormAnimationAction","StopFormAnimationOptions":"types/os","id-2962":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os","id-2623":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-3008":"SyntheticVoice","TweenOptions":"types/experimental","id-2453":"TweenOptions","UnregisterCustomAppAction":"types/os","id-3127":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os","id-3140":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os","id-2633":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-3761":"UpdateEventRecordFailure","UpdateEventRecordSuccess":"types/records/events","id-3759":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os","id-2542":"UpdateHtmlAppAction","UploadedFile":"types/os","id-2133":"UploadedFile","VRSupportedAction":"types/os","id-3078":"VRSupportedAction","WakeLockConfiguration":"types/os","id-3276":"WakeLockConfiguration","WebhookOptions":"types/web","id-2056":"WebhookOptions","WebhookResult":"types/web","id-2068":"WebhookResult","AddCountResult":"types/records/events","id-3737":"AddCountResult","AvailablePermissions":"types/permissions","id-3564":"AvailablePermissions","BarcodeFormat":"types/os","id-2736":"BarcodeFormat","BotFilter":"types/core","id-2090":"BotFilter","BotSpace":"types/core","id-3485":"BotSpace","CameraType":"types/os","id-2735":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-3675":"CreatePublicRecordKeyResult","CustomAppOutputType":"types/os","id-3115":"CustomAppOutputType","CustomPortalOutputMode":"types/os","id-3116":"CustomPortalOutputMode","EaseMode":"types/animation","id-2618":"EaseMode","EaseType":"types/animation","id-2617":"EaseType","EraseDataResult":"types/records/data","id-3709":"EraseDataResult","EraseFileResult":"types/records/files","id-3728":"EraseFileResult","Geolocation":"types/os","id-2622":"Geolocation","GetCountResult":"types/records/events","id-3747":"GetCountResult","GetDataResult":"types/records/data","id-3695":"GetDataResult","GetRoomOptionsResult":"types/os","id-2161":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os","id-2203":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os","id-2179":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-3779":"GrantMarkerPermissionResult","GrantRoleResult":"types/records/roles","id-3765":"GrantRoleResult","JoinRoomResult":"types/os","id-2143":"JoinRoomResult","LeaveRoomResult":"types/os","id-2152":"LeaveRoomResult","ListDataResult":"types/records/data","id-3718":"ListDataResult","ListStudiosResult":"types/records/studios","id-3793":"ListStudiosResult","Mod":"types/core","id-2085":"Mod","PortalType":"types/core","id-3517":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-2390":"PossiblePauseTriggerStates","RecordDataResult":"types/records/data","id-3685":"RecordDataResult","RecordFileResult":"types/records/files","id-2102":"RecordFileResult","RevokeMarkerPermissionResult":"types/records/policies","id-3786":"RevokeMarkerPermissionResult","RevokeRoleResult":"types/records/roles","id-3772":"RevokeRoleResult","SetRoomOptionsResult":"types/os","id-2170":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os","id-2191":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os","id-2752":"ShowInputSuptype","ShowInputType":"types/os","id-2751":"ShowInputType","SnapTarget":"types/os","id-2675":"SnapTarget","TagFilter":"types/core","id-2086":"TagFilter","UpdateEventRecordResult":"types/records/events","id-3758":"UpdateEventRecordResult","animateTag-byOptions":"actions/utility","id-591":"animateTag-byOptions","getbot-tag":"actions/data","id-256":"getbot-tag","getbots-tag":"actions/data","id-240":"getbots-tag","animateTag-byTag":"actions/utility","id-585":"animateTag-byTag","changeState":"actions/data","id-401":"changeState","create":"actions/data","id-385":"create","destroy":"actions/data","id-389":"destroy","getbot-filters":"actions/data","id-249":"getbot-filters","getbots-filters":"actions/data","id-233":"getbots-filters","priorityShout":"actions/event","id-450":"priorityShout","shout":"actions/event","id-463":"shout","updateBotLinks":"actions/data","id-423":"updateBotLinks","whisper":"actions/event","id-489":"whisper","action.perform":"actions/event","id-1591":"action.perform","action.reject":"actions/event","id-1595":"action.reject","ai.chat-string":"actions/ai","id-650":"ai.chat-string","ai.chat-message":"actions/ai","id-653":"ai.chat-message","ai.chat-messages":"actions/ai","id-656":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-669":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-673":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-661":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-665":"ai.generateSkybox-request","applyDiffToSnapshot":"actions/data","id-306":"applyDiffToSnapshot","applyMod":"actions/mods","id-375":"applyMod","assert":"actions/debuggers","id-634":"assert","assertEqual":"actions/debuggers","id-639":"assertEqual","atPosition":"actions/bot-filters","id-520":"atPosition","byCreator":"actions/bot-filters","id-541":"byCreator","byID":"actions/bot-filters","id-508":"byID","byMod":"actions/bot-filters","id-512":"byMod","bySpace":"actions/bot-filters","id-537":"bySpace","byTag":"actions/bot-filters","id-503":"byTag","bytes.fromBase64String":"actions/bytes","id-1804":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-1821":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-1812":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-1800":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-1816":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-1808":"bytes.toHexString","clearAnimations":"actions/utility","id-605":"clearAnimations","clearTagMasks":"actions/data","id-329":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-1827":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-1833":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-1864":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-1857":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-1922":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-1917":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-1928":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-1913":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-1909":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-1893":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-1883":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-1888":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-1903":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-1932":"crypto.keypair","crypto.sha256":"actions/crypto","id-1849":"crypto.sha256","crypto.sha512":"actions/crypto","id-1853":"crypto.sha512","crypto.sign":"actions/crypto","id-1936":"crypto.sign","deleteTagMaskText":"actions/data","id-356":"deleteTagMaskText","deleteTagText":"actions/data","id-349":"deleteTagText","diffSnapshots":"actions/data","id-301":"diffSnapshots","either":"actions/bot-filters","id-545":"either","os.beginAudioRecording":"actions/audio","id-1638":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-1645":"experiment.beginRecording","os.endAudioRecording":"actions/audio","id-1642":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-1649":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-1628":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-1657":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-1601":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-1606":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-1617":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-1652":"experiment.speakText","getBotLinks":"actions/data","id-419":"getBotLinks","getBotPosition":"actions/data","id-275":"getBotPosition","getBotRotation":"actions/data","id-280":"getBotRotation","getBotTagValues":"actions/data","id-265":"getBotTagValues","getFormattedJSON":"actions/data","id-293":"getFormattedJSON","getID":"actions/data","id-285":"getID","getJSON":"actions/data","id-289":"getJSON","getLink":"actions/data","id-415":"getLink","getMod":"actions/mods","id-270":"getMod","getSnapshot":"actions/data","id-297":"getSnapshot","getTag":"actions/data","id-311":"getTag","inDimension":"actions/bot-filters","id-516":"inDimension","inStack":"actions/bot-filters","id-526":"inStack","insertTagMaskText":"actions/data","id-341":"insertTagMaskText","insertTagText":"actions/data","id-334":"insertTagText","math.abs":"actions/math","id-1674":"math.abs","math.addVectors":"actions/math","id-1744":"math.addVectors","math.areClose":"actions/math","id-1775":"math.areClose","math.avg":"actions/math","id-1666":"math.avg","math.degreesToRadians":"actions/math","id-1700":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-1740":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-1708":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-1682":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-1717":"math.intersectPlane","math.negateVector":"actions/math","id-1754":"math.negateVector","math.normalizeVector":"actions/math","id-1759":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-1704":"math.radiansToDegrees","math.random":"actions/math","id-1695":"math.random","math.randomInt":"actions/math","id-1690":"math.randomInt","math.scaleVector":"actions/math","id-1769":"math.scaleVector","math.setRandomSeed":"actions/math","id-1686":"math.setRandomSeed","math.sqrt":"actions/math","id-1670":"math.sqrt","math.stdDev":"actions/math","id-1678":"math.stdDev","math.subtractVectors":"actions/math","id-1749":"math.subtractVectors","math.sum":"actions/math","id-1662":"math.sum","math.vectorLength":"actions/math","id-1764":"math.vectorLength","neighboring":"actions/bot-filters","id-531":"neighboring","not":"actions/bot-filters","id-552":"not","os.attachDebugger":"actions/debuggers","id-1547":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-1536":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-1540":"os.createDebugger-pausable","os.focusOn-bot":"actions/portals","id-737":"os.focusOn-bot","os.focusOn-position":"actions/portals","id-742":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-1544":"os.getExecutingDebugger","showChat-options":"actions/os","id-764":"showChat-options","showChat-placeholder":"actions/os","id-760":"showChat-placeholder","os.showInput":"actions/portals","id-983":"os.showInput","os.addBotDropGrid":"actions/portals","id-1053":"os.addBotDropGrid","os.addBotDropSnap":"actions/portals","id-1044":"os.addBotDropSnap","os.addDropGrid":"actions/portals","id-1049":"os.addDropGrid","os.addDropSnap":"actions/portals","id-1040":"os.addDropSnap","os.applyUpdatesToInst":"actions/os","id-1499":"os.applyUpdatesToInst","os.arSupported":"actions/xr","id-808":"os.arSupported","os.bufferFormAddressGLTF":"actions/animations","id-1457":"os.bufferFormAddressGLTF","os.bufferSound":"actions/audio","id-1016":"os.bufferSound","os.calculateRayFromCamera":"actions/portals","id-1452":"os.calculateRayFromCamera","os.cancelSound":"actions/audio","id-1020":"os.cancelSound","os.capturePhoto":"actions/camera","id-903":"os.capturePhoto","os.closeBarcodeScanner":"actions/barcodes","id-881":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/portals","id-1032":"os.closeCircleWipe","os.closeImageClassifier":"actions/image-classification","id-896":"os.closeImageClassifier","os.closePhotoCamera":"actions/camera","id-907":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/barcodes","id-867":"os.closeQRCodeScanner","os.compileApp":"actions/app","id-1167":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os","id-1437":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/records","id-1427":"os.countEvents","os.createInitializationUpdate":"actions/os","id-1495":"os.createInitializationUpdate","os.device":"actions/os","id-782":"os.device","os.disableAR":"actions/xr","id-798":"os.disableAR","os.disablePointOfView":"actions/portals","id-823":"os.disablePointOfView","os.disableVR":"actions/xr","id-805":"os.disableVR","os.disableWakeLock":"actions/os","id-829":"os.disableWakeLock","os.download":"actions/files","id-835":"os.download","os.downloadBots":"actions/files","id-841":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/files","id-846":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/files","id-854":"os.downloadInst","os.enableAR":"actions/xr","id-794":"os.enableAR","os.enableCollaboration":"actions/os","id-788":"os.enableCollaboration","os.enableCustomDragging":"actions/portals","id-1058":"os.enableCustomDragging","os.enablePointOfView":"actions/portals","id-814":"os.enablePointOfView","os.enableVR":"actions/xr","id-801":"os.enableVR","os.eraseData":"actions/records","id-1370":"os.eraseData","os.eraseManualApprovalData":"actions/records","id-1376":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/portals","id-708":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os","id-1115":"os.getAverageFrameRate","os.getCameraPosition":"actions/portals","id-1071":"os.getCameraPosition","os.getCameraRotation":"actions/portals","id-1075":"os.getCameraRotation","os.getCurrentDimension":"actions/portals","id-954":"os.getCurrentDimension","os.getCurrentInst":"actions/portals","id-960":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os","id-1503":"os.getCurrentInstUpdate","os.getData":"actions/records","id-1352":"os.getData","os.getDimensionalDepth":"actions/portals","id-973":"os.getDimensionalDepth","os.getFocusPoint":"actions/portals","id-1083":"os.getFocusPoint","os.getGeolocation":"actions/os","id-1065":"os.getGeolocation","os.getInputList":"actions/portals","id-1108":"os.getInputList","os.getInputState":"actions/portals","id-1103":"os.getInputState","os.getInstStateFromUpdates":"actions/os","id-1491":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/records","id-1358":"os.getManualApprovalData","os.getMediaPermission":"actions/os","id-1111":"os.getMediaPermission","os.getMenuDimension":"actions/portals","id-963":"os.getMenuDimension","os.getMiniPortalDimension":"actions/portals","id-966":"os.getMiniPortalDimension","os.getPointerDirection":"actions/portals","id-1099":"os.getPointerDirection","os.getPointerPosition":"actions/portals","id-1087":"os.getPointerPosition","os.getPointerRotation":"actions/portals","id-1091":"os.getPointerRotation","os.getPortalDimension":"actions/portals","id-969":"os.getPortalDimension","os.getPublicRecordKey":"actions/records","id-1277":"os.getPublicRecordKey","os.getRoomOptions":"actions/rooms","id-1133":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/rooms","id-1148":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/rooms","id-1137":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/records","id-1281":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os","id-832":"os.getWakeLockConfiguration","os.goToDimension":"actions/portals","id-997":"os.goToDimension","os.goToURL":"actions/portals","id-1001":"os.goToURL","os.grantInstAdminPermission":"actions/records","id-1299":"os.grantInstAdminPermission","os.grantInstRole":"actions/records","id-1319":"os.grantInstRole","os.grantRecordMarkerPermission":"actions/records","id-1285":"os.grantRecordMarkerPermission","os.grantUserRole":"actions/records","id-1304":"os.grantUserRole","os.hasBotInMiniPortal":"actions/portals","id-1024":"os.hasBotInMiniPortal","os.hideBarcode":"actions/barcodes","id-889":"os.hideBarcode","os.hideChat":"actions/os","id-772":"os.hideChat","os.hideHtml":"actions/os","id-715":"os.hideHtml","os.hideQRCode":"actions/barcodes","id-874":"os.hideQRCode","os.hideTips":"actions/portals","id-696":"os.hideTips","os.importAUX":"actions/files","id-938":"os.importAUX","os.inSheet":"actions/portals","id-1068":"os.inSheet","os.isCollaborative":"actions/os","id-785":"os.isCollaborative","os.isInDimension":"actions/portals","id-950":"os.isInDimension","os.isRecordKey":"actions/records","id-1334":"os.isRecordKey","os.joinRoom":"actions/rooms","id-1118":"os.joinRoom","os.leaveRoom":"actions/rooms","id-1123":"os.leaveRoom","os.listBuiltinTags":"actions/app","id-1268":"os.listBuiltinTags","os.listData":"actions/records","id-1364":"os.listData","os.listFormAnimations":"actions/animations","id-1472":"os.listFormAnimations","os.listInstUpdates":"actions/os","id-1488":"os.listInstUpdates","os.listUserStudios":"actions/records","id-1433":"os.listUserStudios","os.loadInst":"actions/os","id-930":"os.loadInst","os.log":"actions/os","id-1061":"os.log","os.meetCommand":"actions/os","id-1524":"os.meetCommand","os.meetFunction":"actions/os","id-1529":"os.meetFunction","os.openBarcodeScanner":"actions/barcodes","id-877":"os.openBarcodeScanner","os.openCircleWipe":"actions/portals","id-1036":"os.openCircleWipe","os.openDevConsole":"actions/os","id-1009":"os.openDevConsole","os.openImageClassifier":"actions/image-classification","id-892":"os.openImageClassifier","os.openPhotoCamera":"actions/camera","id-899":"os.openPhotoCamera","os.openQRCodeScanner":"actions/barcodes","id-863":"os.openQRCodeScanner","os.openURL":"actions/portals","id-1005":"os.openURL","os.parseBotsFromData":"actions/files","id-942":"os.parseBotsFromData","os.playSound":"actions/audio","id-1012":"os.playSound","os.raycast":"actions/portals","id-1446":"os.raycast","os.raycastFromCamera":"actions/portals","id-1441":"os.raycastFromCamera","os.recordData":"actions/records","id-1338":"os.recordData","os.recordEvent":"actions/records","id-1421":"os.recordEvent","os.recordFile":"actions/records","id-1382":"os.recordFile","os.recordManualApprovalData":"actions/records","id-1345":"os.recordManualApprovalData","os.registerApp":"actions/app","id-1158":"os.registerApp","os.registerTagPrefix":"actions/app","id-1153":"os.registerTagPrefix","os.remoteCount":"actions/os","id-1510":"os.remoteCount","os.remotes":"actions/os","id-1485":"os.remotes","os.replaceDragBot":"actions/portals","id-946":"os.replaceDragBot","os.requestAuthBot":"actions/records","id-1271":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/records","id-1274":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/portals","id-705":"os.requestFullscreenMode","os.requestWakeLock":"actions/os","id-826":"os.requestWakeLock","os.revokeInstRole":"actions/records","id-1327":"os.revokeInstRole","os.revokeRecordMarkerPermission":"actions/records","id-1292":"os.revokeRecordMarkerPermission","os.revokeUserRole":"actions/records","id-1312":"os.revokeUserRole","os.run":"actions/os","id-775":"os.run","os.setClipboard":"actions/os","id-718":"os.setClipboard","os.setRoomOptions":"actions/rooms","id-1128":"os.setRoomOptions","os.setRoomTrackOptions":"actions/rooms","id-1142":"os.setRoomTrackOptions","os.share":"actions/os","id-1028":"os.share","os.showBarcode":"actions/barcodes","id-884":"os.showBarcode","os.showConfirm":"actions/portals","id-993":"os.showConfirm","os.showHtml":"actions/os","id-711":"os.showHtml","os.showInputForTag":"actions/portals","id-977":"os.showInputForTag","os.showJoinCode":"actions/barcodes","id-700":"os.showJoinCode","os.showQRCode":"actions/barcodes","id-870":"os.showQRCode","os.showUploadAuxFile":"actions/files","id-857":"os.showUploadAuxFile","os.showUploadFiles":"actions/files","id-860":"os.showUploadFiles","os.sleep":"actions/os","id-680":"os.sleep","os.startFormAnimation":"actions/animations","id-1461":"os.startFormAnimation","os.stopFormAnimation":"actions/animations","id-1467":"os.stopFormAnimation","os.tip":"actions/portals","id-689":"os.tip","os.toast":"actions/os","id-684":"os.toast","os.totalRemoteCount":"actions/os","id-1514":"os.totalRemoteCount","os.unloadInst":"actions/os","id-934":"os.unloadInst","os.unregisterApp":"actions/app","id-1163":"os.unregisterApp","os.version":"actions/os","id-779":"os.version","os.vrSupported":"actions/xr","id-811":"os.vrSupported","os.agreedUponTime":"actions/time","id-911":"os.agreedUponTime","os.deadReckoningTime":"actions/time","id-919":"os.deadReckoningTime","os.instLatency":"actions/time","id-913":"os.instLatency","os.instTimeOffset":"actions/time","id-915":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/time","id-917":"os.instTimeOffsetSpread","os.localTime":"actions/time","id-909":"os.localTime","remote":"actions/event","id-559":"remote","sendRemoteData":"actions/event","id-571":"sendRemoteData","removeTags":"actions/data","id-364":"removeTags","renameTag":"actions/data","id-369":"renameTag","setTag":"actions/data","id-316":"setTag","setTagMask":"actions/data","id-322":"setTagMask","subtractMods":"actions/mods","id-380":"subtractMods","superShout":"actions/event","id-445":"superShout","uuid":"actions/data","id-582":"uuid","web.get":"actions/web","id-1955":"web.get","web.hook":"actions/web","id-1966":"web.hook","web.post":"actions/web","id-1960":"web.post","configBot":"actions/os","id-645":"configBot"}}');var i=o(1601);o(5058),o(6967);const r={id:"os",title:"OS Actions",sidebar_label:"OS",description:"OS actions are used to interact with the player&#39;s current session."},c=void 0,d={id:"actions/os",title:"OS Actions",description:"OS actions are used to interact with the player&#39;s current session.",source:"@site/docs/actions/os.mdx",sourceDirName:"actions",slug:"/actions/os",permalink:"/actions/os",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/os.mdx",tags:[],version:"current",frontMatter:{id:"os",title:"OS Actions",sidebar_label:"OS",description:"OS actions are used to interact with the player&#39;s current session."},sidebar:"docs",previous:{title:"Mods",permalink:"/actions/mods"},next:{title:"Portals",permalink:"/actions/portals"}},l={},m=[...(0,i.KO)(n)];function p(e){return(0,a.jsx)(i.hl,{doc:n})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p()}},1601:(e,t,o)=>{o.d(t,{hl:()=>O,KO:()=>L});var a=o(79),s=o(5058),n=o(6144),i=o(8405),r=o(1888),c=o(5250);class d extends a.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const o="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw o;console.error(o)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var l=o(1537),m=o(6967),p=o(7544),u=o(3324),h=o(5834);function g(e){void 0===e&&(e={});const t=e.references;return e=>{(0,h.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,l.Z)("listen-tags")+x(t.slice(1)):e.url=(0,l.Z)("tags")+x(t)}else if(e.url.startsWith("ref:")){const o=e.url.slice(4),a=t[o];e.url=(0,l.Z)(a)+"#"+o}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,l.Z)("glossary")+"#"+y(t)}else if(e.url.startsWith("page:")){const[t,o]=e.url.slice(5).split("#");e.url=(0,l.Z)(t)+"#"+o}}))}}function x(e){return"#"+y(e)}function y(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function f(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const b={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",b);const k=new Map([[b.Property,["type"]],["reflection",["declaration"]],[b.TypeLiteral,["children","signatures"]],[b.CallSignature,["parameters","comment","type"]]]);function v(e,t,o){void 0===o&&(o=null),function(e,t,o){var a;void 0===o&&(o=null);let s=k.get(null!=(a=e.kind)?a:e.type)||[];for(let n of s){let a=e[n];if(Array.isArray(a))for(let e of a)e&&t(e,o,n);else a&&t(a,o,n)}}(e,((e,o,a)=>{t(e,o,a),v(e,t,e)}))}function w(e,t){let o=[];return t(e)&&o.push(e),v(e,((e,a,s)=>{t(e,a,s)&&o.push(e)})),o}const A=["first","second","third","fourth","fifth"];function R(e,t){return e.name+"-"+t.name}function S(e,t){const o=R(e,t);let a;var s;return a=t.kind===b.Constructor||t.kind===b.Method?ee(t.signatures[0]):t.kind===b.Accessor?(s=t).name+": "+de(s.getSignature.type):ne(t),a="<code>"+a+"</code>",{value:a,id:o,level:3}}function C(e){let t=[],{properties:o,constructors:a,methods:s}=function(e){let t=[],o=[],a=[];if(!e)return{properties:t,constructors:o,methods:a};for(let s of e)s.flags.isPrivate||(s.kind===b.Property||s.kind===b.Accessor?t.push(s):s.kind===b.Constructor?o.push(s):s.kind===b.Method&&a.push(s));return{properties:t,constructors:o,methods:a}}(e.children);return o.length>0&&t.push(...o.map((t=>S(e,t)))),a.length>0&&t.push(...a.map((t=>S(e,t)))),s.length>0&&t.push(...s.map((t=>S(e,t)))),t}function T(e){let t=[];const o=Te(e);for(let a of o){const e=Se(a);t.push({value:e,id:a.group,level:2}),t.push(...a.children.map((e=>N(e))))}return t}function N(e){let{reflection:t,child:o,group:a,name:s,namespace:n}=e;const i=n?n+"."+s:s;let r;if(me(o)){var c;const e=o.type.declaration.signatures;r=ee(null!=(c=we(e))?c:e[0],i)}else if(ue(o)){r=ee(Ae(o),i)}else r=ne(o,i);return r="<code>"+r+"</code>",{value:r,id:t.name+"-"+o.name,level:3}}function L(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let o of e.contents)if(o.reflection.kind===b.Interface||o.reflection.kind===b.Class){const e=be(o.reflection),a=ke(o.reflection);t.push({value:e,id:a,level:2}),t.push(...C(o.reflection))}else if(o.reflection.kind===b.CallSignature){const e=be(o.reflection),a=ke(o.reflection);t.push({value:"<code>"+ee(o.reflection,e)+"</code>",id:a,level:3})}else if(o.reflection.kind===b.TypeAlias){const e=be(o.reflection),a=ke(o.reflection);t.push({value:e,id:a,level:2})}else if(o.reflection.kind===b.GetSignature||o.reflection.kind===b.SetSignature){const e=be(o.reflection),a=ke(o.reflection);t.push({value:"<code>"+ee(o.reflection,e)+"</code>",id:a,level:3})}else{const e=be(o.reflection),a=ke(o.reflection);t.push({value:e,id:a,level:2}),t.push(...T(o.reflection))}return t}function O(e){let{doc:t}=e;const o=t.contents,a=t.references;return(0,c.jsx)("div",{className:"api",children:o.map((e=>(0,c.jsx)(P,{reflection:e.reflection,references:a},e.id)))})}function P(e){let{reflection:t,references:o}=e;return t.kind===b.Interface||t.kind===b.Class?(0,c.jsx)(D,{reflection:t,references:o}):t.kind===b.CallSignature||t.kind===b.GetSignature||t.kind===b.SetSignature?(0,c.jsx)(B,{reflection:t,references:o}):t.kind===b.TypeAlias?(0,c.jsx)(G,{reflection:t,references:o}):(0,c.jsx)(U,{reflection:t,references:o})}function G(e){let{reflection:t,references:o}=e;const a=be(t),n=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h2",id:n,children:a}),(0,c.jsx)(_,{reflection:t,references:o}),(0,c.jsx)(F,{reflection:t,name:a,references:o}),(0,c.jsx)(oe,{member:t})]})}function F(e){let{reflection:t,name:o,references:a}=e,s="";return"union"===t.type.type&&(s=(0,c.jsx)(I,{type:t.type,name:o,references:a})),s}function I(e){let{type:t,name:o,references:a}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",o," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(j,{type:e,references:a},t)))})]})}function j(e){let{type:t,references:o}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:o})})})}function D(e){let{reflection:t,references:o}=e;const a=be(t),n=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h2",id:n,children:a}),(0,c.jsx)(M,{reflection:t,references:o}),(0,c.jsx)(oe,{member:t})]})}function U(e){let{reflection:t,references:o}=e;const a=be(t),n=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h2",id:n,children:a}),(0,c.jsx)(K,{reflection:t,references:o}),(0,c.jsx)(oe,{member:t})]})}function B(e){let{reflection:t,references:o}=e;const a=be(t),s=ke(t);return(0,c.jsx)("div",{children:(0,c.jsx)(Z,{func:t,sig:t,name:a,link:s,references:o})})}function M(e){var t;const o=e.reflection;if(!o)throw new Error("Unable to find "+e.name+"!");const a=function(e){return(0,r.sortBy)(e,(e=>e.kind===b.Property||e.kind===b.Accessor?0:e.kind===b.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=o.children)?t:[]);return(0,c.jsx)(d,{reflection:o,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(_,{reflection:o,references:e.references}),o.indexSignature?(0,c.jsx)(W,{reflection:o,index:o.indexSignature,references:e.references}):"",o.references?(0,c.jsx)(E,{prop:o,references:e.references}):"",a.map((t=>(0,c.jsx)(q,{member:t,link:R(o,t),references:e.references},t.name)))]})})}function W(e){let{reflection:t,index:o,references:a}=e;const n=o.parameters[0];return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(_,{reflection:o,references:a}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",n.name,": ",(0,c.jsx)(ce,{type:n.type,references:a}),"]: ",(0,c.jsx)(ce,{type:o.type,references:a})]})}),(0,c.jsx)(oe,{member:o})]})}function _(e){let{reflection:t,references:o}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(Q,{comment:t.comment,references:o})})}function q(e){let t;return t=e.member.kind===b.Property?function(e){let t,o=e.member,a="";o.references?(a=(0,c.jsx)(H,{prop:o,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:o.typeReference})):"reflection"===o.type.type&&o.typeText&&o.typeReference?(t=(0,c.jsx)(c.Fragment,{children:o.typeReference}),a=(0,c.jsx)(n.Z,{language:"typescript",children:o.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!a&&o.typeText&&o.typeReference&&(a=(0,c.jsx)(n.Z,{language:"typescript",children:o.typeText}));const i=be(o);ke(o);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[i,e.member.flags.isOptional?"?":"",": ",t]})}),(0,c.jsx)(_,{reflection:e.member,references:e.references}),a]})}(e):e.member.kind===b.Constructor?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(Z,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===b.Method?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(Z,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===b.Accessor?function(e){var t;return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.member.name,": ",(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})]})}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsx)(d,{reflection:e.member,children:(0,c.jsx)("div",{children:t})})}function E(e){let{prop:t,references:o}=e;const a=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:a+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(i.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(X,{children:t.references,references:o})]})]})}function H(e){let{prop:t,references:o}=e;return(0,c.jsxs)(i.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(X,{children:t.references,references:o})]})}function K(e){const t=e.reflection,o=(t.type.declaration,Te(t));return(0,c.jsx)(d,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(_,{reflection:t,references:e.references}),o.map((t=>(0,c.jsx)(V,{group:t,references:e.references},t.group)))]})})}function V(e){let{group:t,references:o}=e;const a=t.children,n=Se(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:t.group,children:n}),a.map((e=>(0,c.jsx)(J,{namespace:e.namespace,name:e.name,property:e.child,link:R(e.reflection,e.child),references:o},e.child.id)))]})}function J(e){let t;if(me(e.property)){var o;const a=e.namespace?e.namespace+"."+e.name:e.name,s=e.property.type.declaration;t=Z({name:a,func:e.property,sig:null!=(o=we(s.signatures))?o:s.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){const o=e.namespace?e.namespace+"."+e.name:e.name,a=Ae(e.property);t=Z({name:o,func:e.property,sig:a,link:e.link,references:e.references})}else t=ge(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===b.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(_,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(d,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function Z(e){let{func:t,sig:o,link:a,name:n,references:i}=e;const r=o.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(s.Z,{as:"h3",id:a,children:(0,c.jsx)($,{func:t,sig:o,name:n,references:i})}),(0,c.jsx)(z,{sig:o,references:i}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(te,{param:e,index:t,references:i},e.name)))}):"",(0,c.jsx)(oe,{member:o})]})}function z(e){let{sig:t,references:o}=e;return(0,c.jsx)(Q,{comment:t.comment,references:o})}function Q(e){let{comment:t,references:o}=e;return(0,c.jsx)(X,{references:o,children:Y(t)})}function X(e){let{children:t,remarkPlugins:o,rehypePlugins:a,references:s}=e;return(0,c.jsx)(p.U,{remarkPlugins:[[g,{references:s}],...o||[]],rehypePlugins:[u.Z,...a||[]],children:t})}function Y(e){let t="";if(e&&e.summary)for(let o of e.summary)t+=o.text;return t}function $(e){let{func:t,sig:o,name:a,references:s}=e;const n=o.parameters||[];let i="";return t.kind!==b.GetSignature&&(i=(0,c.jsxs)(c.Fragment,{children:["(",n.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:s})]},e.name))),")"]})),(0,c.jsxs)("code",{children:[(t.flags.isStatic?"static ":"")+(a||o.name),i,": ",(0,c.jsx)(ce,{type:o.type,references:s})]})}function ee(e,t){void 0===t&&(t=e.name);const o=e.parameters||[];let a="";return e.kind!==b.GetSignature&&(a="("+o.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+a+": "+de(e.type)}function te(e){let t,{param:o,index:a,references:s}=e;return t=o.flags.isRest&&o.type.elementType?0===a?(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:s})," and are ",(0,c.jsx)(ie,{param:o,isRest:!0,references:s})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("strong",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:s})," and are ",(0,c.jsx)(ie,{param:o,isRest:!0,references:s})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("strong",{children:[se(a)," parameter"]})," is",o.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:o.type,references:s})," and ",(0,c.jsx)(ie,{param:o,references:s})]}),t}function oe(e){var t;let{member:o}=e;if(null==(t=o.comment)||!t.blockTags)return"";const a=o.comment.blockTags.filter((e=>"@example"===e.tag));return a.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h4",{children:"Examples"}),a.map(((e,t)=>(0,c.jsx)(ae,{example:e},t)))]}):""}function ae(e){let{example:t}=e;const o=t.content.map((e=>e.text)).join(""),a=o.indexOf("\n"),s=o.indexOf("\n",a+1);let i="typescript";a>3&&(i=o.substring(3,a).trim());const r=o.lastIndexOf("```"),d=o.substring(a,s),l=o.substring(s,r);return(0,c.jsx)(n.Z,{language:i,title:d.trim(),children:l.trim()})}function se(e){return A[e]}function ne(e,t){let o;return void 0===t&&(t=e.name),o=e.typeReference?e.typeReference:de(e.type),t+(e.flags.isOptional?"?":"")+": "+o}function ie(e){let{param:t,isRest:o,references:a}=e;return(0,c.jsx)(X,{remarkPlugins:[f],references:a,children:re(t,o)})}function re(e,t){let o=Y(e.comment);return o?(o=o.slice(0,1).toLowerCase()+o.slice(1),o.startsWith("the")&&!t&&(o="is "+o),o):""}function ce(e){let{type:t,references:o,isInUnionOrArray:s}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var n,i;if("Promise"===t.name&&"Promise"===(null==(n=t.target)?void 0:n.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Partial"===t.name&&"Partial"===(null==(i=t.target)?void 0:i.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});let e="#"+t.name;const a=t.id?null==o?void 0:o["id-"+t.id]:null;if(a){const t=null==o?void 0:o[a];t&&(e=(0,l.Z)(t)+"#"+a)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry");return(0,c.jsx)(m.Z,{href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(a.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:o,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===b.TypeLiteral&&e.signatures&&!e.children){var r;const t=null!=(r=we(e.signatures))?r:e.signatures[0],a=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[s?"(":"","(",a.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:o})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:o}),s?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})))}return""+JSON.stringify(t)}function de(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+de(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>de(e))).join(" | ")+")":"array"===e.type?de(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function le(e){return me(e)||ue(e)}function me(e){return e&&pe(e.type)}function pe(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===b.CallSignature))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>pe(e)))}function he(e){return e&&e.kind===b.CallSignature}function ge(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===b.TypeLiteral&&e.type.declaration.children}function xe(e,t){var o;const a=null==(o=e.comment)||null==(o=o.blockTags)?void 0:o.find((e=>e.tag===t));return a?a.content.map((e=>e.text)).join(""):null}function ye(e){if(e)for(let t of e){const e=xe(t,"@docname");if(e)return e.trim()}return null}function fe(e){if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let a=ve(null==o?void 0:o.signatures);if(a)return a}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=ve(e.declaration.signatures);if(t)return t}}else if(he(e)){let t=ve([e]);if(t)return t}return"99-default"}function be(e){if(e.kind===b.Method){let t=ye(e.signatures);if(t)return t}else if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let a=ye(null==o?void 0:o.signatures);if(a)return a}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=ye(e.declaration.signatures);if(t)return t}}else if(he(e)){let t=ye([e]);if(t)return t}return xe(o=e,"@docname")||o.name;var o}function ke(e){const t=xe(e,"@docid");if(t)return t;const o=function(e,t){let o=[];return v(e,((e,a,s)=>{"comment"===s&&(console.log(e),o.push(...e.blockTags.filter((e=>e.tag===t))))})),o}(e,"@docid");return o.length>0?o[0].text.trim():be(e)}function ve(e){if(e)for(let t of e){const e=xe(t,"@docgroup");if(e)return e.trim()}return null}function we(e){for(let t of e){if(xe(t,"@docgroup"))return t}return null}function Ae(e){const t=e.type.types;let o=null;for(let a of t)if(pe(a)){const e=a.declaration.signatures;o||(o=e[0]);let t=we(e);if(t)return t}return o}function Re(e){const t=(o=e,a=b.CallSignature,w(o,(e=>e.kind===a)));var o,a;for(let s of t){const e=xe(s,"@docgrouptitle");if(e)return e.trim()}return null}function Se(e){for(let t of e.children){let e=Re(t.child);if(e)return e}return e.group}function Ce(e){if(e.kind===b.CallSignature)return he(e)||le(e)||ge(e)?[{group:fe(e),name:be(e),reflection:e,child:e}]:[];if(e.kind===b.TypeAlias||e.kind===b.GetSignature||e.kind===b.SetSignature)return[];const t=e.type.declaration.children.filter((e=>he(e)||le(e)||ge(e))),o=null!==xe(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>le(t)?{group:fe(t),name:be(t),namespace:o,reflection:e,child:t}:Ce(t)))}function Te(e){const t=Ce(e),o=(0,r.groupBy)(t,(e=>e.group));let a=[];for(let s in o)a.push({group:s,children:o[s]});return a=(0,r.sortBy)(a,(e=>e.group)),a}}}]);