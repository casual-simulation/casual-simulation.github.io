"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[4002],{7592:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>d});var t=s(5250),i=s(5545);const a=JSON.parse('{"hash":"types/permissions","pageTitle":"Permission Types","pageDescription":"Defines the types of permissions that can be added to policies.","pageSidebarLabel":"Permissions","contents":[{"id":3665,"order":9999,"name":"AssignPolicyPermission","reflection":{"id":3665,"name":"AssignPolicyPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to assign a policy to a particular resource."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3667,"name":"policies","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The policies that can be manipulated.\\r\\n\\r\\nIf true, then all policies are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only policies that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":438,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L438"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.policies"}},{"id":3668,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.role"}},{"id":3666,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":535,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L535"}],"type":{"type":"literal","value":"policy.assign"},"overwrites":{"type":"reference","target":-1,"name":"PolicyPermission.type"}}],"groups":[{"title":"Properties","children":[3667,3668,3666]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":534,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L534"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"PolicyPermission"},"name":"PolicyPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to assign a policy to a particular resource.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3570,"order":9999,"name":"AvailablePermissions","reflection":{"id":3570,"name":"AvailablePermissions","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"The possible types of permissions that can be added to policies."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Permission Types"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Permissions"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Defines the types of permissions that can be added to policies."}]},{"tag":"@docname","content":[{"kind":"text","text":"AvailablePermissions"}]}]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":12,"character":12,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L12"}],"type":{"type":"union","types":[{"type":"reference","target":3571,"name":"CreateDataPermission","package":"@casual-simulation/aux-common","id":3571,"qualifiedName":"CreateDataPermission"},{"type":"reference","target":3575,"name":"ReadDataPermission","package":"@casual-simulation/aux-common","id":3575,"qualifiedName":"ReadDataPermission"},{"type":"reference","target":3579,"name":"UpdateDataPermission","package":"@casual-simulation/aux-common","id":3579,"qualifiedName":"UpdateDataPermission"},{"type":"reference","target":3587,"name":"DeleteDataPermission","package":"@casual-simulation/aux-common","id":3587,"qualifiedName":"DeleteDataPermission"},{"type":"reference","target":3583,"name":"ListDataPermission","package":"@casual-simulation/aux-common","id":3583,"qualifiedName":"ListDataPermission"},{"type":"reference","target":3591,"name":"CreateFilePermission","package":"@casual-simulation/aux-common","id":3591,"qualifiedName":"CreateFilePermission"},{"type":"reference","target":3596,"name":"ReadFilePermission","package":"@casual-simulation/aux-common","id":3596,"qualifiedName":"ReadFilePermission"},{"type":"reference","target":3611,"name":"ListFilePermission","package":"@casual-simulation/aux-common","id":3611,"qualifiedName":"ListFilePermission"},{"type":"reference","target":3601,"name":"UpdateFilePermission","package":"@casual-simulation/aux-common","id":3601,"qualifiedName":"UpdateFilePermission"},{"type":"reference","target":3606,"name":"DeleteFilePermission","package":"@casual-simulation/aux-common","id":3606,"qualifiedName":"DeleteFilePermission"},{"type":"reference","target":3616,"name":"IncrementEventPermission","package":"@casual-simulation/aux-common","id":3616,"qualifiedName":"IncrementEventPermission"},{"type":"reference","target":3620,"name":"CountEventPermission","package":"@casual-simulation/aux-common","id":3620,"qualifiedName":"CountEventPermission"},{"type":"reference","target":3624,"name":"UpdateEventPermission","package":"@casual-simulation/aux-common","id":3624,"qualifiedName":"UpdateEventPermission"},{"type":"reference","target":3628,"name":"ListEventPermission","package":"@casual-simulation/aux-common","id":3628,"qualifiedName":"ListEventPermission"},{"type":"reference","target":3673,"name":"ReadPolicyPermission","package":"@casual-simulation/aux-common","id":3673,"qualifiedName":"ReadPolicyPermission"},{"type":"reference","target":3657,"name":"GrantPermissionToPolicyPermission","package":"@casual-simulation/aux-common","id":3657,"qualifiedName":"GrantPermissionToPolicyPermission"},{"type":"reference","target":3661,"name":"RevokePermissionFromPolicyPermission","package":"@casual-simulation/aux-common","id":3661,"qualifiedName":"RevokePermissionFromPolicyPermission"},{"type":"reference","target":3677,"name":"ListPoliciesPermission","package":"@casual-simulation/aux-common","id":3677,"qualifiedName":"ListPoliciesPermission"},{"type":"reference","target":3665,"name":"AssignPolicyPermission","package":"@casual-simulation/aux-common","id":3665,"qualifiedName":"AssignPolicyPermission"},{"type":"reference","target":3669,"name":"UnassignPolicyPermission","package":"@casual-simulation/aux-common","id":3669,"qualifiedName":"UnassignPolicyPermission"},{"type":"reference","target":3632,"name":"GrantRolePermission","package":"@casual-simulation/aux-common","id":3632,"qualifiedName":"GrantRolePermission"},{"type":"reference","target":3639,"name":"RevokeRolePermission","package":"@casual-simulation/aux-common","id":3639,"qualifiedName":"RevokeRolePermission"},{"type":"reference","target":3645,"name":"ReadRolePermission","package":"@casual-simulation/aux-common","id":3645,"qualifiedName":"ReadRolePermission"},{"type":"reference","target":3653,"name":"ListRolesPermission","package":"@casual-simulation/aux-common","id":3653,"qualifiedName":"ListRolesPermission"},{"type":"reference","target":3649,"name":"UpdateRolePermission","package":"@casual-simulation/aux-common","id":3649,"qualifiedName":"UpdateRolePermission"},{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"AvailableInstPermissions"},"name":"AvailableInstPermissions","package":"@casual-simulation/aux-common"},{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"CreateRecordKeyPermission"},"name":"CreateRecordKeyPermission","package":"@casual-simulation/aux-common"}]}},"comment":{"text":"The possible types of permissions that can be added to policies.","tags":[{"tagName":"dochash","text":"types/permissions"},{"tagName":"doctitle","text":"Permission Types"},{"tagName":"docsidebar","text":"Permissions"},{"tagName":"docdescription","text":"Defines the types of permissions that can be added to policies."},{"tagName":"docname","text":"AvailablePermissions"}]},"group":null},{"id":3620,"order":9999,"name":"CountEventPermission","reflection":{"id":3620,"name":"CountEventPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to count an event record."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3622,"name":"events","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The events that can be manipulated.\\r\\n\\r\\nIf true, then all events are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only events that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":346,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L346"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.events"}},{"id":3623,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.role"}},{"id":3621,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":379,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L379"}],"type":{"type":"literal","value":"event.count"},"overwrites":{"type":"reference","target":-1,"name":"EventPermission.type"}}],"groups":[{"title":"Properties","children":[3622,3623,3621]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":378,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L378"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"EventPermission"},"name":"EventPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to count an event record.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3571,"order":9999,"name":"CreateDataPermission","reflection":{"id":3571,"name":"CreateDataPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to create data for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3573,"name":"addresses","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The addresses that can be manipulated.\\r\\n\\r\\nIf true, then all addresses are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only addresses that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":120,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L120"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.addresses"}},{"id":3574,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.role"}},{"id":3572,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":136,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L136"}],"type":{"type":"literal","value":"data.create"},"overwrites":{"type":"reference","target":-1,"name":"DataPermission.type"}}],"groups":[{"title":"Properties","children":[3573,3574,3572]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":135,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L135"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"DataPermission"},"name":"DataPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to create data for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3591,"order":9999,"name":"CreateFilePermission","reflection":{"id":3591,"name":"CreateFilePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to create a file for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3594,"name":"allowedMimeTypes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The list of allowed file MIME types.\\r\\nIf true, then all file types are allowed.\\r\\nIf an array of strings, then only MIME types that are specified are allowed."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":235,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L235"}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.allowedMimeTypes"}},{"id":3593,"name":"maxFileSizeInBytes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum allowed file size in bytes.\\r\\nDefaults to Infinity."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":228,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L228"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.maxFileSizeInBytes"}},{"id":3595,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.role"}},{"id":3592,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":253,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L253"}],"type":{"type":"literal","value":"file.create"},"overwrites":{"type":"reference","target":-1,"name":"FilePermission.type"}}],"groups":[{"title":"Properties","children":[3594,3593,3595,3592]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":252,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L252"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"FilePermission"},"name":"FilePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to create a file for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3587,"order":9999,"name":"DeleteDataPermission","reflection":{"id":3587,"name":"DeleteDataPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to delete data for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3589,"name":"addresses","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The addresses that can be manipulated.\\r\\n\\r\\nIf true, then all addresses are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only addresses that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":120,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L120"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.addresses"}},{"id":3590,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.role"}},{"id":3588,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":190,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L190"}],"type":{"type":"literal","value":"data.delete"},"overwrites":{"type":"reference","target":-1,"name":"DataPermission.type"}}],"groups":[{"title":"Properties","children":[3589,3590,3588]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":189,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L189"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"DataPermission"},"name":"DataPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to delete data for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3606,"order":9999,"name":"DeleteFilePermission","reflection":{"id":3606,"name":"DeleteFilePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to delete a file for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3609,"name":"allowedMimeTypes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The list of allowed file MIME types.\\r\\nIf true, then all file types are allowed.\\r\\nIf an array of strings, then only MIME types that are specified are allowed."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":235,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L235"}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.allowedMimeTypes"}},{"id":3608,"name":"maxFileSizeInBytes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum allowed file size in bytes.\\r\\nDefaults to Infinity."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":228,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L228"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.maxFileSizeInBytes"}},{"id":3610,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.role"}},{"id":3607,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":324,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L324"}],"type":{"type":"literal","value":"file.delete"},"overwrites":{"type":"reference","target":-1,"name":"FilePermission.type"}}],"groups":[{"title":"Properties","children":[3609,3608,3610,3607]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":323,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L323"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"FilePermission"},"name":"FilePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to delete a file for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3657,"order":9999,"name":"GrantPermissionToPolicyPermission","reflection":{"id":3657,"name":"GrantPermissionToPolicyPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to grant a permission to a policy."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3659,"name":"policies","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The policies that can be manipulated.\\r\\n\\r\\nIf true, then all policies are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only policies that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":438,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L438"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.policies"}},{"id":3660,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.role"}},{"id":3658,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":492,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L492"}],"type":{"type":"literal","value":"policy.grantPermission"},"overwrites":{"type":"reference","target":-1,"name":"PolicyPermission.type"}}],"groups":[{"title":"Properties","children":[3659,3660,3658]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":491,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L491"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"PolicyPermission"},"name":"PolicyPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to grant a permission to a policy.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3632,"order":9999,"name":"GrantRolePermission","reflection":{"id":3632,"name":"GrantRolePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to grant a role."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3635,"name":"instances","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"What instances can the role be granted to?\\r\\nIf true, then the role can be granted to any instance.\\r\\nIf false, then the role cannot be granted to an instance.\\r\\nIf a string, then it should be a Regular Expression that matches only instances that are allowed to be granted to."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":606,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L606"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"}]}},{"id":3636,"name":"maxDurationMs","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum lifetime that the role can be granted for in miliseconds.\\r\\nIf not specified, then the role can be granted for an infinite amount of time."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":612,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L612"}],"type":{"type":"intrinsic","name":"number"}},{"id":3638,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.role"}},{"id":3637,"name":"roles","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The roles that can be manipulated.\\r\\n\\r\\nIf true, then all roles are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only roles that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":575,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L575"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.roles"}},{"id":3633,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":590,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L590"}],"type":{"type":"literal","value":"role.grant"},"overwrites":{"type":"reference","target":-1,"name":"RolePermission.type"}},{"id":3634,"name":"userIds","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"What user IDs can the role be granted to?\\r\\nIf true, then the role can be granted to anyone.\\r\\nIf false, then the role cannot be granted to a user.\\r\\nIf an array of strings, then the role can only be granted to the users with the given IDs."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":598,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L598"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}],"groups":[{"title":"Properties","children":[3635,3636,3638,3637,3633,3634]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":589,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L589"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"RolePermission"},"name":"RolePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to grant a role.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3616,"order":9999,"name":"IncrementEventPermission","reflection":{"id":3616,"name":"IncrementEventPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to increment an event record."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3618,"name":"events","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The events that can be manipulated.\\r\\n\\r\\nIf true, then all events are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only events that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":346,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L346"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.events"}},{"id":3619,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.role"}},{"id":3617,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":361,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L361"}],"type":{"type":"literal","value":"event.increment"},"overwrites":{"type":"reference","target":-1,"name":"EventPermission.type"}}],"groups":[{"title":"Properties","children":[3618,3619,3617]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":360,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L360"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"EventPermission"},"name":"EventPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to increment an event record.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3583,"order":9999,"name":"ListDataPermission","reflection":{"id":3583,"name":"ListDataPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to list data for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3585,"name":"addresses","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The addresses that can be manipulated.\\r\\n\\r\\nIf true, then all addresses are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only addresses that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":120,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L120"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.addresses"}},{"id":3586,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.role"}},{"id":3584,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":208,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L208"}],"type":{"type":"literal","value":"data.list"},"overwrites":{"type":"reference","target":-1,"name":"DataPermission.type"}}],"groups":[{"title":"Properties","children":[3585,3586,3584]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":207,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L207"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"DataPermission"},"name":"DataPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to list data for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3628,"order":9999,"name":"ListEventPermission","reflection":{"id":3628,"name":"ListEventPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to list events in a record."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3630,"name":"events","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The events that can be manipulated.\\r\\n\\r\\nIf true, then all events are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only events that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":346,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L346"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.events"}},{"id":3631,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.role"}},{"id":3629,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":416,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L416"}],"type":{"type":"literal","value":"event.list"},"overwrites":{"type":"reference","target":-1,"name":"EventPermission.type"}}],"groups":[{"title":"Properties","children":[3630,3631,3629]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":415,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L415"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"EventPermission"},"name":"EventPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to list events in a record.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3677,"order":9999,"name":"ListPoliciesPermission","reflection":{"id":3677,"name":"ListPoliciesPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to list policies."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3679,"name":"policies","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The policies that can be manipulated.\\r\\n\\r\\nIf true, then all policies are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only policies that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":438,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L438"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.policies"}},{"id":3680,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.role"}},{"id":3678,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":474,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L474"}],"type":{"type":"literal","value":"policy.list"},"overwrites":{"type":"reference","target":-1,"name":"PolicyPermission.type"}}],"groups":[{"title":"Properties","children":[3679,3680,3678]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":473,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L473"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"PolicyPermission"},"name":"PolicyPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to list policies.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3653,"order":9999,"name":"ListRolesPermission","reflection":{"id":3653,"name":"ListRolesPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to list the available roles."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3656,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.role"}},{"id":3655,"name":"roles","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The roles that can be manipulated.\\r\\n\\r\\nIf true, then all roles are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only roles that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":575,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L575"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.roles"}},{"id":3654,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":705,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L705"}],"type":{"type":"literal","value":"role.list"},"overwrites":{"type":"reference","target":-1,"name":"RolePermission.type"}}],"groups":[{"title":"Properties","children":[3656,3655,3654]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":704,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L704"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"RolePermission"},"name":"RolePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to list the available roles.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3575,"order":9999,"name":"ReadDataPermission","reflection":{"id":3575,"name":"ReadDataPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to read data for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3577,"name":"addresses","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The addresses that can be manipulated.\\r\\n\\r\\nIf true, then all addresses are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only addresses that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":120,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L120"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.addresses"}},{"id":3578,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.role"}},{"id":3576,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":154,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L154"}],"type":{"type":"literal","value":"data.read"},"overwrites":{"type":"reference","target":-1,"name":"DataPermission.type"}}],"groups":[{"title":"Properties","children":[3577,3578,3576]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":153,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L153"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"DataPermission"},"name":"DataPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to read data for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3596,"order":9999,"name":"ReadFilePermission","reflection":{"id":3596,"name":"ReadFilePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to read a file for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3599,"name":"allowedMimeTypes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The list of allowed file MIME types.\\r\\nIf true, then all file types are allowed.\\r\\nIf an array of strings, then only MIME types that are specified are allowed."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":235,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L235"}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.allowedMimeTypes"}},{"id":3598,"name":"maxFileSizeInBytes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum allowed file size in bytes.\\r\\nDefaults to Infinity."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":228,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L228"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.maxFileSizeInBytes"}},{"id":3600,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.role"}},{"id":3597,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":271,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L271"}],"type":{"type":"literal","value":"file.read"},"overwrites":{"type":"reference","target":-1,"name":"FilePermission.type"}}],"groups":[{"title":"Properties","children":[3599,3598,3600,3597]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":270,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L270"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"FilePermission"},"name":"FilePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to read a file for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3673,"order":9999,"name":"ReadPolicyPermission","reflection":{"id":3673,"name":"ReadPolicyPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to read a policy."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3675,"name":"policies","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The policies that can be manipulated.\\r\\n\\r\\nIf true, then all policies are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only policies that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":438,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L438"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.policies"}},{"id":3676,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.role"}},{"id":3674,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":456,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L456"}],"type":{"type":"literal","value":"policy.read"},"overwrites":{"type":"reference","target":-1,"name":"PolicyPermission.type"}}],"groups":[{"title":"Properties","children":[3675,3676,3674]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":455,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L455"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"PolicyPermission"},"name":"PolicyPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to read a policy.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3645,"order":9999,"name":"ReadRolePermission","reflection":{"id":3645,"name":"ReadRolePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to read a role."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3648,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.role"}},{"id":3647,"name":"roles","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The roles that can be manipulated.\\r\\n\\r\\nIf true, then all roles are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only roles that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":575,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L575"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.roles"}},{"id":3646,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":669,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L669"}],"type":{"type":"literal","value":"role.read"},"overwrites":{"type":"reference","target":-1,"name":"RolePermission.type"}}],"groups":[{"title":"Properties","children":[3648,3647,3646]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":668,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L668"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"RolePermission"},"name":"RolePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to read a role.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3661,"order":9999,"name":"RevokePermissionFromPolicyPermission","reflection":{"id":3661,"name":"RevokePermissionFromPolicyPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to revoke a permission from a policy."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3663,"name":"policies","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The policies that can be manipulated.\\r\\n\\r\\nIf true, then all policies are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only policies that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":438,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L438"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.policies"}},{"id":3664,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.role"}},{"id":3662,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":513,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L513"}],"type":{"type":"literal","value":"policy.revokePermission"},"overwrites":{"type":"reference","target":-1,"name":"PolicyPermission.type"}}],"groups":[{"title":"Properties","children":[3663,3664,3662]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":512,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L512"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"PolicyPermission"},"name":"PolicyPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to revoke a permission from a policy.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3639,"order":9999,"name":"RevokeRolePermission","reflection":{"id":3639,"name":"RevokeRolePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to revoke a role."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3642,"name":"instances","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"What instances can the role be revoked from?\\r\\nIf true, then the role can be revoked from any instance.\\r\\nIf false, then the role cannot be revoked from an instance.\\r\\nIf a string, then it should be a Regular Expression that matches only instances that are allowed to be revoked from."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":649,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L649"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"}]}},{"id":3644,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.role"}},{"id":3643,"name":"roles","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The roles that can be manipulated.\\r\\n\\r\\nIf true, then all roles are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only roles that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":575,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L575"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.roles"}},{"id":3640,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":633,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L633"}],"type":{"type":"literal","value":"role.revoke"},"overwrites":{"type":"reference","target":-1,"name":"RolePermission.type"}},{"id":3641,"name":"userIds","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"What user IDs can the role be revoked from?\\r\\nIf true, then the role can be revoked from anyone.\\r\\nIf false, then the role cannot be revoked from a user.\\r\\nIf an array of strings, then the role can only be revoked from the users with the given IDs."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":641,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L641"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}],"groups":[{"title":"Properties","children":[3642,3644,3643,3640,3641]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":632,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L632"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"RolePermission"},"name":"RolePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to revoke a role.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3669,"order":9999,"name":"UnassignPolicyPermission","reflection":{"id":3669,"name":"UnassignPolicyPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to remove a policy from a particular resource."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3671,"name":"policies","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The policies that can be manipulated.\\r\\n\\r\\nIf true, then all policies are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only policies that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":438,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L438"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.policies"}},{"id":3672,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"PolicyPermission.role"}},{"id":3670,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":553,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L553"}],"type":{"type":"literal","value":"policy.unassign"},"overwrites":{"type":"reference","target":-1,"name":"PolicyPermission.type"}}],"groups":[{"title":"Properties","children":[3671,3672,3670]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":552,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L552"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"PolicyPermission"},"name":"PolicyPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to remove a policy from a particular resource.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3579,"order":9999,"name":"UpdateDataPermission","reflection":{"id":3579,"name":"UpdateDataPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to update data for a record marker."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3581,"name":"addresses","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The addresses that can be manipulated.\\r\\n\\r\\nIf true, then all addresses are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only addresses that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":120,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L120"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.addresses"}},{"id":3582,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"DataPermission.role"}},{"id":3580,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":172,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L172"}],"type":{"type":"literal","value":"data.update"},"overwrites":{"type":"reference","target":-1,"name":"DataPermission.type"}}],"groups":[{"title":"Properties","children":[3581,3582,3580]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":171,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L171"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"DataPermission"},"name":"DataPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to update data for a record marker.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3624,"order":9999,"name":"UpdateEventPermission","reflection":{"id":3624,"name":"UpdateEventPermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to update an event record.\\r\\nCurrently only used to update resource markers that are on an event."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3626,"name":"events","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The events that can be manipulated.\\r\\n\\r\\nIf true, then all events are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only events that are allowed to be created."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":346,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L346"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.events"}},{"id":3627,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"EventPermission.role"}},{"id":3625,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":398,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L398"}],"type":{"type":"literal","value":"event.update"},"overwrites":{"type":"reference","target":-1,"name":"EventPermission.type"}}],"groups":[{"title":"Properties","children":[3626,3627,3625]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":397,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L397"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"EventPermission"},"name":"EventPermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to update an event record.\\r\\nCurrently only used to update resource markers that are on an event.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3601,"order":9999,"name":"UpdateFilePermission","reflection":{"id":3601,"name":"UpdateFilePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to be able to update a file for a record marker.\\r\\nCurrently only used to update resource markers that are on a file."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3604,"name":"allowedMimeTypes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The list of allowed file MIME types.\\r\\nIf true, then all file types are allowed.\\r\\nIf an array of strings, then only MIME types that are specified are allowed."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":235,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L235"}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.allowedMimeTypes"}},{"id":3603,"name":"maxFileSizeInBytes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum allowed file size in bytes.\\r\\nDefaults to Infinity."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":228,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L228"}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.maxFileSizeInBytes"}},{"id":3605,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"FilePermission.role"}},{"id":3602,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":306,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L306"}],"type":{"type":"literal","value":"file.update"},"overwrites":{"type":"reference","target":-1,"name":"FilePermission.type"}}],"groups":[{"title":"Properties","children":[3604,3603,3605,3602]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":305,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L305"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"FilePermission"},"name":"FilePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to be able to update a file for a record marker.\\r\\nCurrently only used to update resource markers that are on a file.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null},{"id":3649,"order":9999,"name":"UpdateRolePermission","reflection":{"id":3649,"name":"UpdateRolePermission","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that describes a permission to update a role."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/permissions"}]}]},"children":[{"id":3652,"name":"role","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The role that this permission is can be performed by.\\r\\n\\r\\nIf true, then the permission is valid for all roles. (everyone)\\r\\nIf a string, then the permission is valid for that specific role."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":100,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L100"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.role"}},{"id":3651,"name":"roles","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The roles that can be manipulated.\\r\\n\\r\\nIf true, then all roles are allowed.\\r\\nIf a string, then it should be a Regular Expression that matches only roles that are allowed to be manipulated."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":575,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L575"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":true}]},"inheritedFrom":{"type":"reference","target":-1,"name":"RolePermission.roles"}},{"id":3650,"name":"type","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":687,"character":4,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L687"}],"type":{"type":"literal","value":"role.update"},"overwrites":{"type":"reference","target":-1,"name":"RolePermission.type"}}],"groups":[{"title":"Properties","children":[3652,3651,3650]}],"sources":[{"fileName":"src/aux-common/common/PolicyPermissions.ts","line":686,"character":17,"url":"https://github.com/KallynGowdy/casualos/blob/4e77fbf85/src/aux-common/common/PolicyPermissions.ts#L686"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../src/aux-common/common/PolicyPermissions.ts","qualifiedName":"RolePermission"},"name":"RolePermission","package":"@casual-simulation/aux-common"}]},"comment":{"text":"Defines an interface that describes a permission to update a role.","tags":[{"tagName":"dochash","text":"types/permissions"}]},"group":null}],"references":{"CasualOSError":"types/error","id-3545":"CasualOSError","Quaternion":"types/math/rotations","id-127":"Quaternion","Rotation":"types/math/rotations","id-154":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-3564":"AIChatMessage","AIChatOptions":"types/ai","id-3334":"AIChatOptions","AIGenerateImageSuccess":"types/ai","id-2481":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-3348":"AIGenerateImageOptions","AIGenerateSkyboxOptions":"types/ai","id-3344":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-2474":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-2478":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-2484":"AIGeneratedImage","ARSupportedAction":"types/os/xr","id-3076":"ARSupportedAction","AddCountFailure":"types/records/events","id-3750":"AddCountFailure","AddCountSuccess":"types/records/events","id-3745":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-2705":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-2709":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-3279":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-2078":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-2454":"AttachDebuggerOptions","AuthData":"types/os/records","id-3218":"AuthData","CasualOSDevice":"types/os/system","id-3532":"CasualOSDevice","CasualOSVersion":"types/os/system","id-3524":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-200":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-3161":"BeginRecordingAction","BotTagMasks":"types/core","id-3501":"BotTagMasks","BotTags":"types/core","id-3416":"BotTags","BotState":"types/core","id-3514":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-3286":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-2887":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-3259":"CalculateRayFromCameraAction","CancelSoundAction":"types/os/audio","id-2893":"CancelSoundAction","CompiledBotListeners":"types/core","id-3495":"CompiledBotListeners","ConfigureWakeLockAction":"types/os/portals","id-3266":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-2651":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-2640":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-3686":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-3682":"CreatePublicRecordKeySuccess","DebuggerCallFrame":"types/debuggers/common","id-2407":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-2442":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-2436":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-2415":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-2421":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-2448":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-2644":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-2899":"DownloadAction","Easing":"types/animation","id-2622":"Easing","EnableARAction":"types/os/xr","id-3072":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-3031":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-2735":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-3090":"EnablePOVAction","EnableVRAction":"types/os/xr","id-3086":"EnableVRAction","EnableXROptions":"types/os/xr","id-2942":"EnableXROptions","EndRecordingAction":"types/os/audio","id-3169":"EndRecordingAction","EraseDataFailure":"types/records/data","id-3721":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-3717":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-3740":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-3736":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-203":"EulerAnglesRotation","ExitFullscreenAction":"types/os/portals","id-3105":"ExitFullscreenAction","FocusOnOptions":"types/os/camera","id-2689":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-2701":"FocusOnRotation","FormAnimationData":"types/os/animations","id-2987":"FormAnimationData","FromToRotation":"types/math/rotations","id-197":"FromToRotation","GenericError":"types/error","id-3542":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-3239":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-3761":"GetCountFailure","GetCountSuccess":"types/records/events","id-3755":"GetCountSuccess","GetDataFailure":"types/records/data","id-3712":"GetDataFailure","GetDataSuccess":"types/records/data","id-3703":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-3202":"GetGeolocationAction","GetRoomOptionsFailure":"types/os/portals","id-2169":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-2165":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-2212":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-2207":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-2188":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-2183":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-3197":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-3272":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-3207":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-3789":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-3787":"GrantMarkerPermissionSuccess","GrantRoleFailure":"types/records/roles","id-3775":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-3773":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-2541":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-2530":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-2551":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-2556":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os/image-classification","id-2740":"ImageClassifierOptions","InstUpdate":"types/os/spaces","id-3538":"InstUpdate","JoinRoomFailure":"types/os/portals","id-2150":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-2147":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-2159":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-2156":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-3731":"ListDataFailure","ListDataSuccess":"types/records/data","id-3726":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-2991":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-3804":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-3801":"ListStudiosSuccess","ListedStudio":"types/records/studios","id-3808":"ListedStudio","LoadInstAction":"types/os/spaces","id-2812":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-2932":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-3043":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-3057":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-3047":"LocalTweenAction","LookRotation":"types/math/rotations","id-211":"LookRotation","MediaPermissionAction":"types/os/media","id-3232":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-2939":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-3174":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-3181":"MeetFunctionAction","Debugger":"types/debuggers/debugger","id-2219":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-2426":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os/portals","id-3151":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-3158":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-2787":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-3015":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-2876":"OpenURLAction","ParsedBotLink":"types/core","id-3520":"ParsedBotLink","PartialBotState":"types/core","id-3517":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-2275":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-2431":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-2394":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-2402":"PauseTriggerOptions","Photo":"types/camera","id-3027":"Photo","PlaySoundAction":"types/os/audio","id-2880":"PlaySoundAction","PossiblePauseTriggerLocation":"types/debuggers/common","id-2389":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-2463":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-215":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-3244":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-3251":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-2143":"RaycastRay","RaycastResult":"types/os/portals","id-2140":"RaycastResult","RecordActionOptions":"types/records/extra","id-3297":"RecordActionOptions","RecordDataFailure":"types/records/data","id-3696":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-3692":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-2110":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-2106":"RecordFileSuccess","RecordedFile":"types/experimental","id-3002":"RecordedFile","Recording":"types/experimental","id-3000":"Recording","RecordingOptions":"types/experimental","id-3007":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-3115":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-3121":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-3134":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-2997":"RegisterPrefixOptions","RejectAction":"types/os/event","id-2905":"RejectAction","RemoteAction":"types/os/event","id-3814":"RemoteAction","ReportInstAction":"types/os/moderation","id-3292":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-3212":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-3103":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-3796":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-3794":"RevokeMarkerPermissionSuccess","RevokeRoleFailure":"types/records/roles","id-3782":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-3780":"RevokeRoleSuccess","RoomJoinOptions":"types/os/portals","id-3300":"RoomJoinOptions","RoomOptions":"types/os/portals","id-3309":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-3325":"RoomRemoteOptions","RoomTrackOptions":"types/os/portals","id-3313":"RoomTrackOptions","RunScriptAction":"types/os/system","id-2919":"RunScriptAction","RuntimeBot":"types/core","id-3361":"RuntimeBot","RuntimeBotLinks":"types/core","id-3507":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-3504":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-222":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-2565":"SerializableMutationRecord","SessionSelector":"types/os/event","id-2489":"SessionSelector","SetAppOutputAction":"types/os/portals","id-3146":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-2908":"SetClipboardAction","SetRoomOptionsSuccess":"types/os/portals","id-2174":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-3331":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-2200":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-2195":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-3107":"ShareAction","ShareOptions":"types/os/input","id-2685":"ShareOptions","ShowChatBarAction":"types/os/input","id-2911":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-2679":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-2761":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-2756":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-2536":"ShowHtmlAction","ShowInputOptions":"types/os/input","id-2745":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-3099":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-2516":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-2521":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-2925":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-2927":"ShowUploadFilesAction","SnapAxis":"types/os/portals","id-2659":"SnapAxis","SnapGrid":"types/os/portals","id-2714":"SnapGrid","SnapGridTarget":"types/os/portals","id-2115":"SnapGridTarget","SnapPoint":"types/os/portals","id-2671":"SnapPoint","SpeakTextAction":"types/os/audio","id-3188":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-2459":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-2968":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-2944":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-2957":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-2965":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-2626":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-3011":"SyntheticVoice","TweenOptions":"types/experimental","id-2456":"TweenOptions","UnloadInstAction":"types/os/spaces","id-2816":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-3128":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-3141":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-2636":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-3768":"UpdateEventRecordFailure","UpdateEventRecordSuccess":"types/records/events","id-3766":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-2545":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-2136":"UploadedFile","VRSupportedAction":"types/os/xr","id-3081":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-3277":"WakeLockConfiguration","WebhookOptions":"types/web","id-2059":"WebhookOptions","WebhookResult":"types/web","id-2071":"WebhookResult","AddCountResult":"types/records/events","id-3744":"AddCountResult","AvailablePermissions":"types/permissions","id-3570":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-2739":"BarcodeFormat","BotFilter":"types/core","id-2093":"BotFilter","BotSpace":"types/core","id-3491":"BotSpace","CameraType":"types/os/camera","id-2738":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-3681":"CreatePublicRecordKeyResult","EaseMode":"types/animation","id-2621":"EaseMode","EaseType":"types/animation","id-2620":"EaseType","EraseDataResult":"types/records/data","id-3716":"EraseDataResult","EraseFileResult":"types/records/files","id-3735":"EraseFileResult","Geolocation":"types/os/geolocation","id-2625":"Geolocation","GetCountResult":"types/records/events","id-3754":"GetCountResult","GetDataResult":"types/records/data","id-3702":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-2164":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-2206":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-2182":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-3786":"GrantMarkerPermissionResult","GrantRoleResult":"types/records/roles","id-3772":"GrantRoleResult","JoinRoomResult":"types/os/portals","id-2146":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-2155":"LeaveRoomResult","ListDataResult":"types/records/data","id-3725":"ListDataResult","ListStudiosResult":"types/records/studios","id-3800":"ListStudiosResult","Mod":"types/core","id-2088":"Mod","PortalType":"types/core","id-3523":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-2393":"PossiblePauseTriggerStates","RecordDataResult":"types/records/data","id-3691":"RecordDataResult","RecordFileResult":"types/records/files","id-2105":"RecordFileResult","RevokeMarkerPermissionResult":"types/records/policies","id-3793":"RevokeMarkerPermissionResult","RevokeRoleResult":"types/records/roles","id-3779":"RevokeRoleResult","SetRoomOptionsResult":"types/os/portals","id-2173":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-2194":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-2755":"ShowInputSuptype","ShowInputType":"types/os/input","id-2754":"ShowInputType","SnapTarget":"types/os/portals","id-2678":"SnapTarget","TagFilter":"types/core","id-2089":"TagFilter","UpdateEventRecordResult":"types/records/events","id-3765":"UpdateEventRecordResult","animateTag-byOptions":"actions/utility","id-591":"animateTag-byOptions","getbot-tag":"actions/data","id-256":"getbot-tag","getbots-tag":"actions/data","id-240":"getbots-tag","animateTag-byTag":"actions/utility","id-585":"animateTag-byTag","changeState":"actions/data","id-401":"changeState","create":"actions/data","id-385":"create","destroy":"actions/data","id-389":"destroy","getbot-filters":"actions/data","id-249":"getbot-filters","getbots-filters":"actions/data","id-233":"getbots-filters","priorityShout":"actions/os/event","id-450":"priorityShout","shout":"actions/os/event","id-463":"shout","updateBotLinks":"actions/data","id-423":"updateBotLinks","whisper":"actions/os/event","id-489":"whisper","action.perform":"actions/os/event","id-1594":"action.perform","action.reject":"actions/os/event","id-1598":"action.reject","ai.chat-string":"actions/ai","id-650":"ai.chat-string","ai.chat-message":"actions/ai","id-653":"ai.chat-message","ai.chat-messages":"actions/ai","id-656":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-669":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-673":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-661":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-665":"ai.generateSkybox-request","applyDiffToSnapshot":"actions/data","id-306":"applyDiffToSnapshot","applyMod":"actions/mods","id-375":"applyMod","assert":"actions/debuggers","id-634":"assert","assertEqual":"actions/debuggers","id-639":"assertEqual","atPosition":"actions/bot-filters","id-520":"atPosition","byCreator":"actions/bot-filters","id-541":"byCreator","byID":"actions/bot-filters","id-508":"byID","byMod":"actions/bot-filters","id-512":"byMod","bySpace":"actions/bot-filters","id-537":"bySpace","byTag":"actions/bot-filters","id-503":"byTag","bytes.fromBase64String":"actions/bytes","id-1807":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-1824":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-1815":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-1803":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-1819":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-1811":"bytes.toHexString","clearAnimations":"actions/utility","id-605":"clearAnimations","clearTagMasks":"actions/data","id-329":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-1830":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-1836":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-1867":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-1860":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-1925":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-1920":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-1931":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-1916":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-1912":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-1896":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-1886":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-1891":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-1906":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-1935":"crypto.keypair","crypto.sha256":"actions/crypto","id-1852":"crypto.sha256","crypto.sha512":"actions/crypto","id-1856":"crypto.sha512","crypto.sign":"actions/crypto","id-1939":"crypto.sign","deleteTagMaskText":"actions/data","id-356":"deleteTagMaskText","deleteTagText":"actions/data","id-349":"deleteTagText","diffSnapshots":"actions/data","id-301":"diffSnapshots","either":"actions/bot-filters","id-545":"either","os.beginAudioRecording":"actions/os/audio","id-1641":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-1648":"experiment.beginRecording","os.endAudioRecording":"actions/os/audio","id-1645":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-1652":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-1631":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-1660":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-1604":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-1609":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-1620":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-1655":"experiment.speakText","getBotLinks":"actions/data","id-419":"getBotLinks","getBotPosition":"actions/data","id-275":"getBotPosition","getBotRotation":"actions/data","id-280":"getBotRotation","getBotTagValues":"actions/data","id-265":"getBotTagValues","getFormattedJSON":"actions/data","id-293":"getFormattedJSON","getID":"actions/data","id-285":"getID","getJSON":"actions/data","id-289":"getJSON","getLink":"actions/data","id-415":"getLink","getMod":"actions/mods","id-270":"getMod","getSnapshot":"actions/data","id-297":"getSnapshot","getTag":"actions/data","id-311":"getTag","inDimension":"actions/bot-filters","id-516":"inDimension","inStack":"actions/bot-filters","id-526":"inStack","insertTagMaskText":"actions/data","id-341":"insertTagMaskText","insertTagText":"actions/data","id-334":"insertTagText","math.abs":"actions/math","id-1677":"math.abs","math.addVectors":"actions/math","id-1747":"math.addVectors","math.areClose":"actions/math","id-1778":"math.areClose","math.avg":"actions/math","id-1669":"math.avg","math.degreesToRadians":"actions/math","id-1703":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-1743":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-1711":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-1685":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-1720":"math.intersectPlane","math.negateVector":"actions/math","id-1757":"math.negateVector","math.normalizeVector":"actions/math","id-1762":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-1707":"math.radiansToDegrees","math.random":"actions/math","id-1698":"math.random","math.randomInt":"actions/math","id-1693":"math.randomInt","math.scaleVector":"actions/math","id-1772":"math.scaleVector","math.setRandomSeed":"actions/math","id-1689":"math.setRandomSeed","math.sqrt":"actions/math","id-1673":"math.sqrt","math.stdDev":"actions/math","id-1681":"math.stdDev","math.subtractVectors":"actions/math","id-1752":"math.subtractVectors","math.sum":"actions/math","id-1665":"math.sum","math.vectorLength":"actions/math","id-1767":"math.vectorLength","neighboring":"actions/bot-filters","id-531":"neighboring","not":"actions/bot-filters","id-552":"not","os.attachDebugger":"actions/debuggers","id-1550":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-1539":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-1543":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-737":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-742":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-1547":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-764":"showChat-options","showChat-placeholder":"actions/os/input","id-760":"showChat-placeholder","os.showInput":"actions/os/portals","id-983":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1053":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1044":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1049":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1040":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-1502":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-808":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-1460":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1016":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-1455":"os.calculateRayFromCamera","os.cancelSound":"actions/os/audio","id-1020":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-903":"os.capturePhoto","os.closeBarcodeScanner":"actions/os/barcodes","id-881":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1032":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-896":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-907":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-867":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1167":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-1440":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-1430":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-1498":"os.createInitializationUpdate","os.device":"actions/os/system","id-782":"os.device","os.disableAR":"actions/os/xr","id-798":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-823":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-805":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-829":"os.disableWakeLock","os.download":"actions/os/files","id-835":"os.download","os.downloadBots":"actions/os/files","id-841":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-846":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-854":"os.downloadInst","os.enableAR":"actions/os/xr","id-794":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-788":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1058":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-814":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-801":"os.enableVR","os.eraseData":"actions/os/records","id-1373":"os.eraseData","os.eraseManualApprovalData":"actions/os/records","id-1379":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/os/portals","id-708":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1115":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1071":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1075":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-954":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-960":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os/spaces","id-1506":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-1355":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-973":"os.getDimensionalDepth","os.getFocusPoint":"actions/os/portals","id-1083":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1065":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1108":"os.getInputList","os.getInputState":"actions/os/portals","id-1103":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-1494":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-1361":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1111":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-963":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-966":"os.getMiniPortalDimension","os.getPointerDirection":"actions/os/portals","id-1099":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1087":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1091":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-969":"os.getPortalDimension","os.getPublicRecordKey":"actions/os/records","id-1280":"os.getPublicRecordKey","os.getRoomOptions":"actions/os/rooms","id-1133":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1148":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1137":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-1284":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-832":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-997":"os.goToDimension","os.goToURL":"actions/os/portals","id-1001":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-1302":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-1322":"os.grantInstRole","os.grantRecordMarkerPermission":"actions/os/records","id-1288":"os.grantRecordMarkerPermission","os.grantUserRole":"actions/os/records","id-1307":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1024":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-889":"os.hideBarcode","os.hideChat":"actions/os/input","id-772":"os.hideChat","os.hideHtml":"actions/os/portals","id-715":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-874":"os.hideQRCode","os.hideTips":"actions/os/portals","id-696":"os.hideTips","os.importAUX":"actions/os/files","id-938":"os.importAUX","os.inSheet":"actions/os/portals","id-1068":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-785":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-950":"os.isInDimension","os.isRecordKey":"actions/os/records","id-1337":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1118":"os.joinRoom","os.leaveRoom":"actions/os/rooms","id-1123":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-1268":"os.listBuiltinTags","os.listData":"actions/os/records","id-1367":"os.listData","os.listFormAnimations":"actions/os/animations","id-1475":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-1491":"os.listInstUpdates","os.listUserStudios":"actions/os/records","id-1436":"os.listUserStudios","os.loadInst":"actions/os/spaces","id-930":"os.loadInst","os.log":"actions/os/system","id-1061":"os.log","os.meetCommand":"actions/os/meets","id-1527":"os.meetCommand","os.meetFunction":"actions/os/meets","id-1532":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-1509":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-877":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1036":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1009":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-892":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-899":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-863":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1005":"os.openURL","os.parseBotsFromData":"actions/os/files","id-942":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1012":"os.playSound","os.raycast":"actions/os/portals","id-1449":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-1444":"os.raycastFromCamera","os.recordData":"actions/os/records","id-1341":"os.recordData","os.recordEvent":"actions/os/records","id-1424":"os.recordEvent","os.recordFile":"actions/os/records","id-1385":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-1348":"os.recordManualApprovalData","os.registerApp":"actions/os/app","id-1158":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1153":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-1513":"os.remoteCount","os.remotes":"actions/os/remotes","id-1488":"os.remotes","os.replaceDragBot":"actions/os/portals","id-946":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-1271":"os.reportInst","os.requestAuthBot":"actions/os/records","id-1274":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-1277":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-705":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-826":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-1330":"os.revokeInstRole","os.revokeRecordMarkerPermission":"actions/os/records","id-1295":"os.revokeRecordMarkerPermission","os.revokeUserRole":"actions/os/records","id-1315":"os.revokeUserRole","os.run":"actions/os/system","id-775":"os.run","os.setClipboard":"actions/os/clipboard","id-718":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1128":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1142":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1028":"os.share","os.showBarcode":"actions/os/barcodes","id-884":"os.showBarcode","os.showConfirm":"actions/os/portals","id-993":"os.showConfirm","os.showHtml":"actions/os/portals","id-711":"os.showHtml","os.showInputForTag":"actions/os/portals","id-977":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-700":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-870":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-857":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-860":"os.showUploadFiles","os.sleep":"actions/os/system","id-680":"os.sleep","os.startFormAnimation":"actions/os/animations","id-1464":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-1470":"os.stopFormAnimation","os.tip":"actions/os/portals","id-689":"os.tip","os.toast":"actions/os/portals","id-684":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-1517":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-934":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1163":"os.unregisterApp","os.version":"actions/os/system","id-779":"os.version","os.vrSupported":"actions/os/xr","id-811":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-911":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-919":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-913":"os.instLatency","os.instTimeOffset":"actions/os/time","id-915":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-917":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-909":"os.localTime","remote":"actions/os/event","id-559":"remote","sendRemoteData":"actions/os/event","id-571":"sendRemoteData","removeTags":"actions/data","id-364":"removeTags","renameTag":"actions/data","id-369":"renameTag","setTag":"actions/data","id-316":"setTag","setTagMask":"actions/data","id-322":"setTagMask","subtractMods":"actions/mods","id-380":"subtractMods","superShout":"actions/os/event","id-445":"superShout","uuid":"actions/data","id-582":"uuid","web.get":"actions/web","id-1958":"web.get","web.hook":"actions/web","id-1969":"web.hook","web.post":"actions/web","id-1963":"web.post","configBot":"actions/os/system","id-645":"configBot"}}');var n=s(1601);s(5058),s(6967);const r={id:"permissions",title:"Permission Types",sidebar_label:"Permissions",description:"Defines the types of permissions that can be added to policies."},c=void 0,m={id:"types/permissions",title:"Permission Types",description:"Defines the types of permissions that can be added to policies.",source:"@site/docs/types/permissions.mdx",sourceDirName:"types",slug:"/types/permissions",permalink:"/types/permissions",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/types/permissions.mdx",tags:[],version:"current",frontMatter:{id:"permissions",title:"Permission Types",sidebar_label:"Permissions",description:"Defines the types of permissions that can be added to policies."},sidebar:"docs",previous:{title:"XR",permalink:"/types/os/xr"},next:{title:"Record Keys",permalink:"/types/records/key"}},l={},d=[...(0,n.KO)(a)];function p(e){return(0,t.jsx)(n.hl,{doc:a})}function u(e={}){const{wrapper:o}={...(0,i.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(p,{...e})}):p()}}}]);