"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[2937],{1984:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>r,contentTitle:()=>t,default:()=>g,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var n=i(5250),l=i(5545),s=i(1623);const o={},t=void 0,c={id:"glossary/ImageClassification",title:"ImageClassification",description:"Image Classification is a technique that tries to calculate how likely a given image is to fit into each of the given categories.",source:"@site/docs/glossary/ImageClassification.mdx",sourceDirName:"glossary",slug:"/glossary/ImageClassification",permalink:"/glossary/ImageClassification",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/glossary/ImageClassification.mdx",tags:[],version:"current",frontMatter:{}},r={},d=[{value:"Data Collection and Training",id:"data-collection-and-training",level:4},{value:"Using the trained model",id:"using-the-trained-model",level:4},{value:"See Also",id:"see-also",level:4}];function h(e){const a={a:"a",blockquote:"blockquote",code:"code",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Image Classification"})," is a technique that tries to calculate how likely a given image is to fit into each of the given categories.\nFor example, you may want to know if a particular image most looks like a Banana or an Orange. Image Classification can be used to help answer this problem."]}),"\n",(0,n.jsxs)(a.p,{children:["Image classification in CasualOS utilizes ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Machine_learning",children:"Machine Learning"})," via a tool called ",(0,n.jsx)(a.a,{href:"https://teachablemachine.withgoogle.com/",children:"Teachable Machine"}),".\nAdditionally, CasualOS only supports image classification via the camera(s) on your device."]}),"\n",(0,n.jsx)(a.p,{children:"As a result, the technique is split into two parts:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"Manual data collection and model training."}),"\n",(0,n.jsx)(a.li,{children:"Automated categorization of images based on the trained model."}),"\n"]}),"\n",(0,n.jsx)(a.h4,{id:"data-collection-and-training",children:"Data Collection and Training"}),"\n",(0,n.jsx)(a.p,{children:'In order to automatically classify images, we need to generate an efficient description of what our categories look like. This is called "model training".\nIdeally, we only need to train a model once and then we can re-use it forever.'}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["In CasualOS, we do that by using ",(0,n.jsx)(a.a,{href:"https://teachablemachine.withgoogle.com/",children:"Teachable Machine"})," to create an image model."]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:'We can gather a bunch of images and manually categorize them.\nThen we can "train" a model on those images to produce a model which is a description of what our categories look like. (i.e. a model could be trained to contain a description of what a banana looks like)'}),"\n",(0,n.jsx)(a.h4,{id:"using-the-trained-model",children:"Using the trained model"}),"\n",(0,n.jsx)(a.p,{children:"Once we have a model, we can tell CasualOS to process the camera feed and classify each image with it."}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["It is possible to run an image model with the ",(0,n.jsx)(s.vm,{action:"os.openImageClassifier(options)"})," function."]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"Following the above description, we can do image classification in CasualOS:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["To create a model, go to ",(0,n.jsx)(a.a,{href:"https://teachablemachine.withgoogle.com/",children:"https://teachablemachine.withgoogle.com/"}),' and click "Get Started".']}),"\n",(0,n.jsx)(a.li,{children:'Create an "Image Project" and choose "Standard Image Model".'}),"\n",(0,n.jsx)(a.li,{children:"Add or record photos in each class."}),"\n",(0,n.jsx)(a.li,{children:'Click "Train".'}),"\n",(0,n.jsx)(a.li,{children:'Once training is done you can get a model URL by clicking "Export Model".'}),"\n",(0,n.jsx)(a.li,{children:'Under "Tensorflow.js", choose "Upload (shareable link)" and click "Upload". You can also optionally save the project to Google Drive.'}),"\n",(0,n.jsx)(a.li,{children:"Once uploaded, copy the shareable link."}),"\n",(0,n.jsxs)(a.li,{children:["Create a bot with an ",(0,n.jsx)(a.code,{children:"@onClick"})," tag and put the following code in it (replacing ",(0,n.jsx)(a.code,{children:"MY_MODEL_URL"})," with the shareable link):","\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-typescript",children:'await os.openImageClassifier({\n    modelUrl: "MY_MODEL_URL"\n});\n'})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.h4,{id:"see-also",children:"See Also"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(s.vm,{action:"os.openImageClassifier(options)"}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(s.vm,{action:"os.closeImageClassifier()"}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(s.k1,{tag:"@onImageClassified"}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(s.k1,{tag:"@onImageClassifierOpened"}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(s.k1,{tag:"@onImageClassifierClosed"}),"\n"]}),"\n"]})]})}function g(e={}){const{wrapper:a}={...(0,l.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);