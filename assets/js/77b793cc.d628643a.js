"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[5876],{6314:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var s=o(5250),i=o(5545);const a=JSON.parse('{"hash":"actions/bot-filters","pageTitle":"Bot Filters","pageDescription":"Bot Filters are functions that are useful for filtering bots.","pageSidebarLabel":"Bot Filters","contents":[{"id":1177,"order":9999,"name":"atPosition","reflection":{"id":1177,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots that are in the given dimension and at the given X and Y position.\\n\\nWhen this filter is used with "},{"kind":"text","text":"[`getBots(...filters)`](ref:getbots-filters)"},{"kind":"text","text":", the returned bots are sorted in the same order that they are stacked. This means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they\'re stackable)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all the bots at (1, 2) in the \\"test\\" dimension.\\nlet bots = getBots(atPosition(\\"test\\", 1, 2));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"atPosition"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4258,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4258"}],"parameters":[{"id":1178,"name":"dimension","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the dimension."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1179,"name":"x","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the X position. That is, the left-right position of the bots in the dimension."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":1180,"name":"y","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the Y position. That is, the forward-backward position of the bots in the dimension."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots that are in the given dimension and at the given X and Y position.\\n\\nWhen this filter is used with getbots-filters, the returned bots are sorted in the same order that they are stacked. This means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they\'re stackable).","tags":[{"tagName":"example","text":"```ts\\nFind all the bots at (1, 2) in the \\"test\\" dimension.\\nlet bots = getBots(atPosition(\\"test\\", 1, 2));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"atPosition"}]},"group":"01-filters"},{"id":1198,"order":9999,"name":"byCreator","reflection":{"id":1198,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots created by the given bot.\\nThat is, they have "},{"kind":"text","text":"[`#creator`](tags:creator)"},{"kind":"text","text":" set to the "},{"kind":"text","text":"[`#id`](tags:id)"},{"kind":"text","text":" of the given bot.\\n\\n> This function behaves exactly like "},{"kind":"code","text":"`byTag(\\"creator\\", getID(bot))`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all the bots created by this bot.\\nlet bots = getBots(byCreator(thisBot));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"byCreator"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4382,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4382"}],"parameters":[{"id":1199,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot that created the other bots."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":40766,"name":"Bot","package":"@casual-simulation/aux-common","id":40766,"qualifiedName":"Bot"}]}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots created by the given bot.\\nThat is, they have creator set to the id of the given bot.\\n\\n> This function behaves exactly like `byTag(\\"creator\\", getID(bot))`.","tags":[{"tagName":"example","text":"```ts\\nFind all the bots created by this bot.\\nlet bots = getBots(byCreator(thisBot));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"byCreator"}]},"group":"01-filters"},{"id":1165,"order":9999,"name":"byID","reflection":{"id":1165,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes the bot with the given ID."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind the bot with the ID \'123\'\\nlet bot = getBot(byID(\\"123\\"));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"byID"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4184,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4184"}],"parameters":[{"id":1166,"name":"id","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ID of the bot."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes the bot with the given ID.","tags":[{"tagName":"example","text":"```ts\\nFind the bot with the ID \'123\'\\nlet bot = getBot(byID(\\"123\\"));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"byID"}]},"group":"01-filters"},{"id":1169,"order":9999,"name":"byMod","reflection":{"id":1169,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots that match the given mod."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all the bots with #height set to 1 and #color set to red.\\nconst bots = getBots(byMod({\\n    height: 1,\\n    color: \\"red\\"\\n}));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"byMod"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4217,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4217"}],"parameters":[{"id":1170,"name":"mod","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot or mod that the other bots should match."}],"blockTags":[]},"type":{"type":"reference","target":35858,"name":"Mod","package":"@casual-simulation/aux-runtime","id":35858,"qualifiedName":"Mod"}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots that match the given mod.","tags":[{"tagName":"example","text":"```ts\\nFind all the bots with #height set to 1 and #color set to red.\\nconst bots = getBots(byMod({\\n    height: 1,\\n    color: \\"red\\"\\n}));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"byMod"}]},"group":"01-filters"},{"id":1194,"order":9999,"name":"bySpace","reflection":{"id":1194,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots in the given space. That is, they have "},{"kind":"text","text":"[`#space`](tags:space)"},{"kind":"text","text":" set to the given value.\\n\\n> This function behaves exactly like "},{"kind":"code","text":"`byTag(\\"space\\", getID(bot))`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots in the tempLocal space.\\nlet bots = getBots(bySpace(\\"tempLocal\\"));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"bySpace"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4353,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4353"}],"parameters":[{"id":1195,"name":"space","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the space that the bots are in."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots in the given space. That is, they have space set to the given value.\\n\\n> This function behaves exactly like `byTag(\\"space\\", getID(bot))`.","tags":[{"tagName":"example","text":"```ts\\nFind all bots in the tempLocal space.\\nlet bots = getBots(bySpace(\\"tempLocal\\"));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"bySpace"}]},"group":"01-filters"},{"id":1160,"order":9999,"name":"byTag","reflection":{"id":1160,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots that have the given tag that matches the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all the bots with #name set to \\"bob\\".\\nlet bots = getBots(byTag(\\"#name\\", \\"bob\\"));\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots with a height larger than 2.\\nlet bots = getBots(byTag(\\"#height\\", height => height > 2));\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots with the \\"test\\" tag.\\nlet bots = getBots(byTag(\\"#test\\"));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Bot Filters"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Bot Filters"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Bot Filters are functions that are useful for filtering bots."}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"byTag"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4118,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4118"}],"parameters":[{"id":1161,"name":"tag","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the tag. Bots that have this tag will be included as long as they also match the second parameter."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1162,"name":"filter","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the value that the tag should match. If not specified, then all bots with the tag will be included. If specified, then only bots that have the same tag value will be included. If you specify a function as the value, then it will be used to match tag values."}],"blockTags":[]},"type":{"type":"reference","target":35854,"name":"TagFilter","package":"@casual-simulation/aux-runtime","id":35854,"qualifiedName":"TagFilter"}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots that have the given tag that matches the given value.","tags":[{"tagName":"example","text":"```ts\\nFind all the bots with #name set to \\"bob\\".\\nlet bots = getBots(byTag(\\"#name\\", \\"bob\\"));\\n```"},{"tagName":"example","text":"```ts\\nFind all bots with a height larger than 2.\\nlet bots = getBots(byTag(\\"#height\\", height => height > 2));\\n```"},{"tagName":"example","text":"```ts\\nFind all bots with the \\"test\\" tag.\\nlet bots = getBots(byTag(\\"#test\\"));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"doctitle","text":"Bot Filters"},{"tagName":"docsidebar","text":"Bot Filters"},{"tagName":"docdescription","text":"Bot Filters are functions that are useful for filtering bots."},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"byTag"}]},"group":"01-filters"},{"id":1202,"order":9999,"name":"either","reflection":{"id":1202,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots which match any (i.e. one or more) of the given filters."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots with the #name bob or a #height of 2\\nconst bots = getBots(\\n    either(\\n        byTag(\\"#name\\", \\"bob\\"),\\n        byTag(\\"height\\", 2)\\n    )\\n);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"either"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4404,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4404"}],"parameters":[{"id":1203,"name":"filters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the filters that should be used."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1204,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":824,"character":25,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L824"}],"signatures":[{"id":1205,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":824,"character":25,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L824"}],"parameters":[{"id":1206,"name":"bot","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":40766,"name":"Bot","package":"@casual-simulation/aux-common","id":40766,"qualifiedName":"Bot"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots which match any (i.e. one or more) of the given filters.","tags":[{"tagName":"example","text":"```ts\\nFind all bots with the #name bob or a #height of 2\\nconst bots = getBots(\\n    either(\\n        byTag(\\"#name\\", \\"bob\\"),\\n        byTag(\\"height\\", 2)\\n    )\\n);\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"either"}]},"group":"01-filters"},{"id":1173,"order":9999,"name":"inDimension","reflection":{"id":1173,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots that are in the given dimension. That is, they have the given tag set to true.\\n\\n> This function behaves exactly like "},{"kind":"text","text":"[`byTag(tag, filter)`](ref:byTag)"},{"kind":"text","text":" with the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" parameter set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A function that returns true if the given bot is in the dimension and false if it is not."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all the bots in the \\"test\\" dimension.\\nlet bots = getBots(inDimension(\\"test\\"));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"inDimension"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4238,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4238"}],"parameters":[{"id":1174,"name":"dimension","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the dimension."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots that are in the given dimension. That is, they have the given tag set to true.\\n\\n> This function behaves exactly like byTag with the `value` parameter set to `true`.","tags":[{"tagName":"returns","text":"A function that returns true if the given bot is in the dimension and false if it is not."},{"tagName":"example","text":"```ts\\nFind all the bots in the \\"test\\" dimension.\\nlet bots = getBots(inDimension(\\"test\\"));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"inDimension"}]},"group":"01-filters"},{"id":1183,"order":9999,"name":"inStack","reflection":{"id":1183,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots in the same stack as the given bot. The given bot will always be included by this filter as long the given bot is in the given dimension.\\n\\nWhen this filter is used with "},{"kind":"text","text":"[`getBots(...filters)`](ref:getbots-filters)"},{"kind":"text","text":", the returned bots are sorted in the same order that they are stacked. This means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they\'re stackable)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots in the same stack as thisBot in the \\"test\\" dimension.\\nlet bots = getBots(inStack(this, \\"test\\"));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"inStack"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4282,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4282"}],"parameters":[{"id":1184,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot that other bots should be in the same stack with."}],"blockTags":[]},"type":{"type":"reference","target":40766,"name":"Bot","package":"@casual-simulation/aux-common","id":40766,"qualifiedName":"Bot"}},{"id":1185,"name":"dimension","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the dimension."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots in the same stack as the given bot. The given bot will always be included by this filter as long the given bot is in the given dimension.\\n\\nWhen this filter is used with getbots-filters, the returned bots are sorted in the same order that they are stacked. This means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they\'re stackable).","tags":[{"tagName":"example","text":"```ts\\nFind all bots in the same stack as thisBot in the \\"test\\" dimension.\\nlet bots = getBots(inStack(this, \\"test\\"));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"inStack"}]},"group":"01-filters"},{"id":1188,"order":9999,"name":"neighboring","reflection":{"id":1188,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a bot filter that includes bots which are neighboring the given bot. Optionally takes a direction that the neighboring bots must be in."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots in front of this bot in the test dimension.\\nconst bots = getBots(neighboring(this, \\"test\\", \\"front\\"));\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots around this bot in the test dimension.\\nconst bots = getBots(neighboring(this, \\"test\\"));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"neighboring"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4307,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4307"}],"parameters":[{"id":1189,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot that the other bots need to be neighboring."}],"blockTags":[]},"type":{"type":"reference","target":40766,"name":"Bot","package":"@casual-simulation/aux-common","id":40766,"qualifiedName":"Bot"}},{"id":1190,"name":"dimension","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the dimension that the other bots need to be in."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1191,"name":"direction","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the neighboring direction to check. If not specified, then all of the supported directions will be checked. Currently, the supported directions are front, right, back, and left. If an unsupported direction is specified, then no bots will be included."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"literal","value":"left"},{"type":"literal","value":"right"}]}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a bot filter that includes bots which are neighboring the given bot. Optionally takes a direction that the neighboring bots must be in.","tags":[{"tagName":"example","text":"```ts\\nFind all bots in front of this bot in the test dimension.\\nconst bots = getBots(neighboring(this, \\"test\\", \\"front\\"));\\n```"},{"tagName":"example","text":"```ts\\nFind all bots around this bot in the test dimension.\\nconst bots = getBots(neighboring(this, \\"test\\"));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"neighboring"}]},"group":"01-filters"},{"id":1209,"order":9999,"name":"not","reflection":{"id":1209,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a function that includes bots which _do not_ match the given filter."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind all bots that are not in the test dimension\\nconst bots = getBots(not(inDimension(\\"test\\")));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/bot-filters"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-filters"}]},{"tag":"@docname","content":[{"kind":"text","text":"not"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4420,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L4420"}],"parameters":[{"id":1210,"name":"filter","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot filter whose results should be negated."}],"blockTags":[]},"type":{"type":"reflection","declaration":{"id":1211,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":824,"character":25,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L824"}],"signatures":[{"id":1212,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":824,"character":25,"url":"https://github.com/casual-simulation/casualos/blob/7fd82ba3c/src/aux-runtime/runtime/AuxLibrary.ts#L824"}],"parameters":[{"id":1213,"name":"bot","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":40766,"name":"Bot","package":"@casual-simulation/aux-common","id":40766,"qualifiedName":"Bot"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":35901,"name":"BotFilter","package":"@casual-simulation/aux-runtime","id":35901,"qualifiedName":"BotFilter"}},"comment":{"text":"Creates a function that includes bots which _do not_ match the given filter.","tags":[{"tagName":"example","text":"```ts\\nFind all bots that are not in the test dimension\\nconst bots = getBots(not(inDimension(\\"test\\")));\\n```"},{"tagName":"dochash","text":"actions/bot-filters"},{"tagName":"docgroup","text":"01-filters"},{"tagName":"docname","text":"not"}]},"group":"01-filters"}],"references":{"CasualOSError":"types/error","id-41289":"CasualOSError","Quaternion":"types/math/rotations","id-135":"Quaternion","Rotation":"types/math/rotations","id-167":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-41338":"AIChatMessage","AIChatOptions":"types/ai","id-39298":"AIChatOptions","AIDataContent":"types/ai","id-41347":"AIDataContent","AIGenerateImageSuccess":"types/ai","id-35883":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-39338":"AIGenerateImageOptions","AIGenerateSkyboxAction":"types/ai","id-39305":"AIGenerateSkyboxAction","AIGenerateSkyboxBlockadeLabsOptions":"types/ai","id-39316":"AIGenerateSkyboxBlockadeLabsOptions","AIGenerateSkyboxOptions":"types/ai","id-39313":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-35876":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-35880":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-35886":"AIGeneratedImage","AISloydGenerateModelOptions":"types/ai","id-39374":"AISloydGenerateModelOptions","AITextContent":"types/ai","id-41345":"AITextContent","AIUrlContent":"types/ai","id-41350":"AIUrlContent","ARSupportedAction":"types/os/xr","id-37525":"ARSupportedAction","AddCountFailure":"types/records/events","id-43554":"AddCountFailure","AddCountSuccess":"types/records/events","id-43549":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-37658":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-37662":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-38073":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-35891":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-36184":"AttachDebuggerOptions","AuthData":"types/os/records","id-37834":"AuthData","DebuggerOptions":"types/debuggers/common","id-36200":"DebuggerOptions","CasualOSDevice":"types/os/system","id-41257":"CasualOSDevice","CasualOSVersion":"types/os/system","id-41249":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-213":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-37738":"BeginRecordingAction","BotIntersection":"types/os/portals","id-36393":"BotIntersection","BotTagMasks":"types/core","id-40871":"BotTagMasks","BotTags":"types/core","id-40874":"BotTags","BotState":"types/core","id-40949":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-37986":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-37365":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-37898":"CalculateRayFromCameraAction","CalculateScreenCoordinatesFromViewportCoordinatesAction":"types/os/portals","id-37912":"CalculateScreenCoordinatesFromViewportCoordinatesAction","CalculateViewportCoordinatesFromPositionAction":"types/os/portals","id-37905":"CalculateViewportCoordinatesFromPositionAction","CalculateViewportCoordinatesFromScreenCoordinatesAction":"types/os/portals","id-37919":"CalculateViewportCoordinatesFromScreenCoordinatesAction","CancelSoundAction":"types/os/audio","id-37371":"CancelSoundAction","CompiledBotListeners":"types/core","id-40824":"CompiledBotListeners","CompiledBotModules":"types/core","id-40830":"CompiledBotModules","ConfigureWakeLockAction":"types/os/portals","id-38060":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-37860":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-37856":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-42442":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-42438":"CreatePublicRecordKeySuccess","DataPermission":"types/permissions","id-325":"DataPermission","DebuggerCallFrame":"types/debuggers/common","id-36224":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-36232":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-36218":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-36178":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-36173":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-36238":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-37848":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-37377":"DownloadAction","Easing":"types/animation","id-37475":"Easing","EnableARAction":"types/os/xr","id-37521":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-37452":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-37713":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-37539":"EnablePOVAction","EnableVRAction":"types/os/xr","id-37535":"EnableVRAction","EnableXROptions":"types/os/xr","id-37519":"EnableXROptions","EndRecordingAction":"types/os/audio","id-37750":"EndRecordingAction","EraseDataFailure":"types/records/data","id-43040":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-43036":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-43221":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-43217":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-216":"EulerAnglesRotation","EventPermission":"types/permissions","id-425":"EventPermission","ExitFullscreenAction":"types/os/portals","id-37554":"ExitFullscreenAction","FilePermission":"types/permissions","id-373":"FilePermission","FilePermissionOptions":"types/permissions","id-360":"FilePermissionOptions","FocusOnOptions":"types/os/camera","id-37081":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-37093":"FocusOnRotation","FormAnimationData":"types/os/animations","id-38041":"FormAnimationData","FromToRotation":"types/math/rotations","id-210":"FromToRotation","GenericError":"types/error","id-41286":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-37878":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-43565":"GetCountFailure","GetCountSuccess":"types/records/events","id-43559":"GetCountSuccess","GetDataFailure":"types/records/data","id-43031":"GetDataFailure","GetDataSuccess":"types/records/data","id-43022":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-37791":"GetGeolocationAction","GetLoomMetadataAction":"types/loom","id-37954":"GetLoomMetadataAction","GetRoomOptionsFailure":"types/os/portals","id-36345":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-36341":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-36379":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-36374":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-36355":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-36350":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-37782":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-38066":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-37818":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-47357":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-47355":"GrantMarkerPermissionSuccess","GrantResourcePermissionFailure":"types/records/policies","id-47380":"GrantResourcePermissionFailure","GrantResourcePermissionSuccess":"types/records/policies","id-47378":"GrantResourcePermissionSuccess","GrantRoleFailure":"types/records/roles","id-47439":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-47437":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-37077":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-37066":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-37610":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-37615":"HtmlAppMethodCallAction","HumePermission":"types/permissions","id-656":"HumePermission","ImageClassifierOptions":"types/os/image-classification","id-37203":"ImageClassifierOptions","InstPermission":"types/permissions","id-551":"InstPermission","InstUpdate":"types/os/spaces","id-41282":"InstUpdate","JoinRoomFailure":"types/os/portals","id-36317":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-36314":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-36326":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-36323":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-43062":"ListDataFailure","ListDataSuccess":"types/records/data","id-43052":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-38035":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-42485":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-42482":"ListStudiosSuccess","ListedData":"types/records/data","id-43058":"ListedData","MarkerPermission":"types/permissions","id-47569":"MarkerPermission","ResourcePermission":"types/permissions","id-47558":"ResourcePermission","ListedStudio":"types/records/studios","id-42489":"ListedStudio","LoadInstAction":"types/os/spaces","id-37243":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-37437":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-37468":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-37489":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-37504":"LocalTweenAction","LookRotation":"types/math/rotations","id-233":"LookRotation","LoomPermission":"types/permissions","id-586":"LoomPermission","LoomVideo":"types/loom","id-37967":"LoomVideo","LoomVideoEmbedMetadata":"types/loom","id-37978":"LoomVideoEmbedMetadata","MediaPermissionAction":"types/os/media","id-37871":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-37868":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-37755":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-37762":"MeetFunctionAction","NodeReference":"types/os/portals","id-37636":"NodeReference","Debugger":"types/debuggers/debugger","id-35998":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-36190":"NormalDebuggerOptions","NotificationPermission":"types/permissions","id-726":"NotificationPermission","OpenCircleWipeAction":"types/os/portals","id-37648":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-37655":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-37177":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-37165":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-37354":"OpenURLAction","ParsedBotLink":"types/core","id-40815":"ParsedBotLink","PartialBotState":"types/core","id-40952":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-36054":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-36195":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-36210":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-36205":"PauseTriggerOptions","Photo":"types/camera","id-37161":"Photo","PlaySoundAction":"types/os/audio","id-37358":"PlaySoundAction","Point2D":"types/os/portals","id-38053":"Point2D","Point3D":"types/os/portals","id-38056":"Point3D","PossiblePauseTriggerLocation":"types/debuggers/common","id-36168":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-36244":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-226":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-37883":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-37890":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-36402":"RaycastRay","RaycastResult":"types/os/portals","id-36390":"RaycastResult","RecordActionOptions":"types/records/extra","id-39385":"RecordActionOptions","RecordDataFailure":"types/records/data","id-43014":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-43010":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-36287":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-36283":"RecordFileSuccess","RecordFileRequest":"types/records/files","id-43189":"RecordFileRequest","RecordLoomAction":"types/loom","id-37939":"RecordLoomAction","RecordLoomOptions":"types/loom","id-37945":"RecordLoomOptions","RecordedFile":"types/experimental","id-37813":"RecordedFile","Recording":"types/experimental","id-37811":"Recording","RecordingOptions":"types/experimental","id-37730":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-37568":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-37574":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-37587":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-37645":"RegisterPrefixOptions","RejectAction":"types/os/event","id-37404":"RejectAction","RemoteAction":"types/os/event","id-57525":"RemoteAction","ReportInstAction":"types/os/moderation","id-37823":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-37828":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-37552":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-47368":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-47366":"RevokeMarkerPermissionSuccess","RevokePermissionFailure":"types/records/policies","id-47402":"RevokePermissionFailure","RevokePermissionSuccess":"types/records/policies","id-47400":"RevokePermissionSuccess","RevokeResourcePermissionFailure":"types/records/policies","id-47391":"RevokeResourcePermissionFailure","RevokeResourcePermissionSuccess":"types/records/policies","id-47389":"RevokeResourcePermissionSuccess","RevokeRoleFailure":"types/records/roles","id-47450":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-47448":"RevokeRoleSuccess","RolePermission":"types/permissions","id-504":"RolePermission","RolePermissionOptions":"types/permissions","id-495":"RolePermissionOptions","RoomJoinOptions":"types/os/portals","id-40525":"RoomJoinOptions","RoomOptions":"types/os/portals","id-40521":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-40580":"RoomRemoteOptions","RoomTrackOptions":"types/os/rooms","id-40558":"RoomTrackOptions","RunScriptAction":"types/os/system","id-37424":"RunScriptAction","RuntimeBot":"types/core","id-40766":"RuntimeBot","RuntimeBotLinks":"types/core","id-40818":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-40821":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-224":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-37624":"SerializableMutationRecord","SessionSelector":"types/os/event","id-35859":"SessionSelector","SetAppOutputAction":"types/os/portals","id-37599":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-37407":"SetClipboardAction","SetRoomOptionsFailure":"types/os/portals","id-36335":"SetRoomOptionsFailure","SetRoomOptionsSuccess":"types/os/portals","id-36332":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-40555":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-36367":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-36362":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-37560":"ShareAction","ShareOptions":"types/os/input","id-37556":"ShareOptions","ShowChatBarAction":"types/os/input","id-37410":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-37418":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-37335":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-37341":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-37072":"ShowHtmlAction","ShowInputItem":"types/os/input","id-37392":"ShowInputItem","ShowInputOptions":"types/os/input","id-37383":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-37548":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-37052":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-37057":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-37430":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-37432":"ShowUploadFilesAction","SloydPermission":"types/permissions","id-621":"SloydPermission","SnapAxis":"types/os/portals","id-37674":"SnapAxis","SnapGrid":"types/os/portals","id-37692":"SnapGrid","SnapGridTarget":"types/os/portals","id-36292":"SnapGridTarget","SnapPoint":"types/os/portals","id-37667":"SnapPoint","SpeakTextAction":"types/os/audio","id-37773":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-35913":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-38005":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-37992":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-38027":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-38024":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-37797":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-37787":"SyntheticVoice","TweenOptions":"types/experimental","id-35917":"TweenOptions","UnloadInstAction":"types/os/spaces","id-37247":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-37581":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-37594":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-37807":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-43579":"UpdateEventRecordFailure","UpdateEventRecordRequest":"types/records/events","id-43569":"UpdateEventRecordRequest","UpdateEventRecordSuccess":"types/records/events","id-43577":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-37604":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-36405":"UploadedFile","VRSupportedAction":"types/os/xr","id-37530":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-38071":"WakeLockConfiguration","WatchLoomAction":"types/loom","id-37948":"WatchLoomAction","WebhookOptions":"types/web","id-35864":"WebhookOptions","WebhookPermission":"types/permissions","id-691":"WebhookPermission","WebhookResult":"types/web","id-36275":"WebhookResult","AIChatContent":"types/ai","id-41344":"AIChatContent","AIChatMessageRole":"types/ai","id-41337":"AIChatMessageRole","ActionKinds":"types/permissions","id-271":"ActionKinds","AddCountResult":"types/records/events","id-43548":"AddCountResult","AvailablePermissions":"types/permissions","id-283":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-37186":"BarcodeFormat","BotAction":"types/os/event","id-36971":"BotAction","BotAnchorPoint":"types/core","id-40978":"BotAnchorPoint","BotFilter":"types/core","id-35901":"BotFilter","BotSpace":"types/core","id-40861":"BotSpace","CameraPortal":"types/os/portals","id-38052":"CameraPortal","CameraType":"types/os/camera","id-37140":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-42437":"CreatePublicRecordKeyResult","DataActionKinds":"types/permissions","id-272":"DataActionKinds","EaseMode":"types/animation","id-37474":"EaseMode","EaseType":"types/animation","id-37473":"EaseType","EraseDataResult":"types/records/data","id-43035":"EraseDataResult","EraseFileResult":"types/records/files","id-43216":"EraseFileResult","EventActionKinds":"types/permissions","id-274":"EventActionKinds","FileActionKinds":"types/permissions","id-273":"FileActionKinds","Geolocation":"types/os/geolocation","id-37796":"Geolocation","GetCountResult":"types/records/events","id-43558":"GetCountResult","GetDataResult":"types/records/data","id-43021":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-36340":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-36373":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-36349":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-47354":"GrantMarkerPermissionResult","GrantResourcePermissionResult":"types/records/policies","id-47377":"GrantResourcePermissionResult","GrantRoleResult":"types/records/roles","id-47436":"GrantRoleResult","HumeActionKinds":"types/permissions","id-280":"HumeActionKinds","InstActionKinds":"types/permissions","id-277":"InstActionKinds","JoinRoomResult":"types/os/portals","id-36313":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-36322":"LeaveRoomResult","ListDataResult":"types/records/data","id-43051":"ListDataResult","ListStudiosResult":"types/records/studios","id-42481":"ListStudiosResult","LoomActionKinds":"types/permissions","id-278":"LoomActionKinds","MarkerActionKinds":"types/permissions","id-275":"MarkerActionKinds","Mod":"types/core","id-35858":"Mod","NotificationActionKinds":"types/permissions","id-282":"NotificationActionKinds","PortalType":"types/core","id-40864":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-36172":"PossiblePauseTriggerStates","PublicRecordKeyPolicy":"types/records/key","id-42850":"PublicRecordKeyPolicy","RecordDataResult":"types/records/data","id-43009":"RecordDataResult","RecordFileResult":"types/records/files","id-36282":"RecordFileResult","RecordUserPolicyType":"types/records/extra","id-39393":"RecordUserPolicyType","ResourceKinds":"types/permissions","id-250":"ResourceKinds","RevokeMarkerPermissionResult":"types/records/policies","id-47365":"RevokeMarkerPermissionResult","RevokeResourcePermissionResult":"types/records/policies","id-47388":"RevokeResourcePermissionResult","RevokeRoleResult":"types/records/roles","id-47447":"RevokeRoleResult","RoleActionKinds":"types/permissions","id-276":"RoleActionKinds","SetRoomOptionsResult":"types/os/portals","id-36331":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-36361":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-37396":"ShowInputSuptype","ShowInputType":"types/os/input","id-37395":"ShowInputType","SloydActionKinds":"types/permissions","id-279":"SloydActionKinds","SnapTarget":"types/os/portals","id-37686":"SnapTarget","StudioAssignmentRole":"types/records/studios","id-42813":"StudioAssignmentRole","SubjectType":"types/permissions","id-238":"SubjectType","TagFilter":"types/core","id-35854":"TagFilter","TrackKind":"types/records/rooms","id-40570":"TrackKind","TrackSource":"types/records/rooms","id-40571":"TrackSource","TrackVideoQuality":"types/os/rooms","id-40572":"TrackVideoQuality","UpdateEventRecordResult":"types/records/events","id-43576":"UpdateEventRecordResult","UserPolicy":"types/records/data","id-43136":"UserPolicy","WebhookActionKinds":"types/permissions","id-281":"WebhookActionKinds","animateTag-byOptions":"actions/os/animations","id-1248":"animateTag-byOptions","getbot-tag":"actions/data","id-913":"getbot-tag","getbots-tag":"actions/data","id-897":"getbots-tag","animateTag-byTag":"actions/os/animations","id-1242":"animateTag-byTag","changeState":"actions/data","id-1058":"changeState","create":"actions/data","id-1042":"create","destroy":"actions/data","id-1046":"destroy","getbot-filters":"actions/data","id-906":"getbot-filters","getbots-filters":"actions/data","id-890":"getbots-filters","priorityShout":"actions/os/event","id-1107":"priorityShout","shout":"actions/os/event","id-1120":"shout","updateBotLinks":"actions/data","id-1080":"updateBotLinks","whisper":"actions/os/event","id-1146":"whisper","action.perform":"actions/os/event","id-35332":"action.perform","action.reject":"actions/os/event","id-35336":"action.reject","ai.chat-string":"actions/ai","id-1307":"ai.chat-string","ai.chat-message":"actions/ai","id-1310":"ai.chat-message","ai.chat-messages":"actions/ai","id-1313":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-1326":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-1330":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-1318":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-1322":"ai.generateSkybox-request","ai.hume.getAccessToken":"actions/ai","id-1337":"ai.hume.getAccessToken","ai.sloyd.generateModel":"actions/ai","id-1343":"ai.sloyd.generateModel","ai.stream.chat-string":"actions/ai","id-1350":"ai.stream.chat-string","ai.stream.chat-message":"actions/ai","id-1353":"ai.stream.chat-message","ai.stream.chat-messages":"actions/ai","id-1356":"ai.stream.chat-messages","applyDiffToSnapshot":"actions/data","id-963":"applyDiffToSnapshot","applyMod":"actions/mods","id-1032":"applyMod","assert":"actions/debuggers","id-1291":"assert","assertEqual":"actions/debuggers","id-1296":"assertEqual","atPosition":"actions/bot-filters","id-1177":"atPosition","byCreator":"actions/bot-filters","id-1198":"byCreator","byID":"actions/bot-filters","id-1165":"byID","byMod":"actions/bot-filters","id-1169":"byMod","bySpace":"actions/bot-filters","id-1194":"bySpace","byTag":"actions/bot-filters","id-1160":"byTag","bytes.fromBase64String":"actions/bytes","id-35568":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-35585":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-35576":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-35564":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-35580":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-35572":"bytes.toHexString","clearAnimations":"actions/os/animations","id-1262":"clearAnimations","clearTagMasks":"actions/data","id-986":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-35591":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-35597":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-35628":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-35621":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-35686":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-35681":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-35692":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-35677":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-35673":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-35657":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-35647":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-35652":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-35667":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-35696":"crypto.keypair","crypto.sha256":"actions/crypto","id-35613":"crypto.sha256","crypto.sha512":"actions/crypto","id-35617":"crypto.sha512","crypto.sign":"actions/crypto","id-35700":"crypto.sign","deleteTagMaskText":"actions/data","id-1013":"deleteTagMaskText","deleteTagText":"actions/data","id-1006":"deleteTagText","diffSnapshots":"actions/data","id-958":"diffSnapshots","either":"actions/bot-filters","id-1202":"either","os.beginAudioRecording":"actions/os/audio","id-35384":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-35391":"experiment.beginRecording","experiment.createStaticHtmlFromBots":"actions/experimental","id-35379":"experiment.createStaticHtmlFromBots","os.endAudioRecording":"actions/os/audio","id-35388":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-35395":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-35369":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-35403":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-35342":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-35347":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-35358":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-35398":"experiment.speakText","getBotLinks":"actions/data","id-1076":"getBotLinks","getBotPosition":"actions/data","id-932":"getBotPosition","getBotRotation":"actions/data","id-937":"getBotRotation","getBotTagValues":"actions/data","id-922":"getBotTagValues","getFormattedJSON":"actions/data","id-950":"getFormattedJSON","getID":"actions/data","id-942":"getID","getJSON":"actions/data","id-946":"getJSON","getLink":"actions/data","id-1072":"getLink","getMod":"actions/mods","id-927":"getMod","getSnapshot":"actions/data","id-954":"getSnapshot","getTag":"actions/data","id-968":"getTag","inDimension":"actions/bot-filters","id-1173":"inDimension","inStack":"actions/bot-filters","id-1183":"inStack","insertTagMaskText":"actions/data","id-998":"insertTagMaskText","insertTagText":"actions/data","id-991":"insertTagText","loom.getVideoEmbedMetadata-video":"actions/loom","id-35418":"loom.getVideoEmbedMetadata-video","loom.getVideoEmbedMetadata-sharedUrl":"actions/loom","id-35420":"loom.getVideoEmbedMetadata-sharedUrl","loom.recordVideo":"actions/loom","id-35408":"loom.recordVideo","loom.watchVideo-video":"actions/loom","id-35412":"loom.watchVideo-video","loom.watchVideo-sharedUrl":"actions/loom","id-35414":"loom.watchVideo-sharedUrl","math.abs":"actions/math","id-35438":"math.abs","math.addVectors":"actions/math","id-35508":"math.addVectors","math.areClose":"actions/math","id-35539":"math.areClose","math.avg":"actions/math","id-35430":"math.avg","math.degreesToRadians":"actions/math","id-35464":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-35504":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-35472":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-35446":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-35481":"math.intersectPlane","math.negateVector":"actions/math","id-35518":"math.negateVector","math.normalizeVector":"actions/math","id-35523":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-35468":"math.radiansToDegrees","math.random":"actions/math","id-35459":"math.random","math.randomInt":"actions/math","id-35454":"math.randomInt","math.scaleVector":"actions/math","id-35533":"math.scaleVector","math.setRandomSeed":"actions/math","id-35450":"math.setRandomSeed","math.sqrt":"actions/math","id-35434":"math.sqrt","math.stdDev":"actions/math","id-35442":"math.stdDev","math.subtractVectors":"actions/math","id-35513":"math.subtractVectors","math.sum":"actions/math","id-35426":"math.sum","math.vectorLength":"actions/math","id-35528":"math.vectorLength","neighboring":"actions/bot-filters","id-1188":"neighboring","not":"actions/bot-filters","id-1209":"not","os.attachDebugger":"actions/debuggers","id-35288":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-35277":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-35281":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-1425":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-1430":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-35285":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-1452":"showChat-options","showChat-placeholder":"actions/os/input","id-1448":"showChat-placeholder","os.showInput":"actions/os/portals","id-1684":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1754":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1745":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1750":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1741":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-35225":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-1499":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-35175":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1717":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-35155":"os.calculateRayFromCamera","os.calculateScreenCoordinatesFromViewportCoordinates":"actions/os/portals","id-35165":"os.calculateScreenCoordinatesFromViewportCoordinates","os.calculateViewportCoordinatesFromPosition":"actions/os/portals","id-35160":"os.calculateViewportCoordinatesFromPosition","os.calculateViewportCoordinatesFromScreenCoordinates":"actions/os/portals","id-35170":"os.calculateViewportCoordinatesFromScreenCoordinates","os.cancelSound":"actions/os/audio","id-1721":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-1598":"os.capturePhoto","os.capturePortalScreenshot":"actions/os/portals","id-1605":"os.capturePortalScreenshot","os.classifyImages":"actions/os/image-classification","id-1590":"os.classifyImages","os.closeBarcodeScanner":"actions/os/barcodes","id-1572":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1733":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-1587":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-1602":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-1558":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1868":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-35140":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-35127":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-35221":"os.createInitializationUpdate","os.device":"actions/os/system","id-1470":"os.device","os.disableAR":"actions/os/xr","id-1489":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-1514":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-1496":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-1520":"os.disableWakeLock","os.download":"actions/os/files","id-1526":"os.download","os.downloadBots":"actions/os/files","id-1532":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-1537":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-1545":"os.downloadInst","os.enableAR":"actions/os/xr","id-1485":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-1476":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1759":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-1505":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-1492":"os.enableVR","os.eraseData":"actions/os/records","id-34963":"os.eraseData","os.eraseFile-result":"actions/os/records","id-35111":"os.eraseFile-result","os.eraseFile-url":"actions/os/records","id-35115":"os.eraseFile-url","os.eraseManualApprovalData":"actions/os/records","id-34969":"os.eraseManualApprovalData","os.eraseNotification":"actions/os/records","id-35025":"os.eraseNotification","os.eraseWebhook":"actions/os/records","id-34994":"os.eraseWebhook","os.exitFullscreenMode":"actions/os/portals","id-1396":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1816":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1772":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1776":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-1652":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-1658":"os.getCurrentInst","os.getCurrentInstRecord":"actions/os/portals","id-1661":"os.getCurrentInstRecord","os.getCurrentInstUpdate":"actions/os/spaces","id-35229":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-34938":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-1674":"os.getDimensionalDepth","os.getFile-result":"actions/os/records","id-35089":"os.getFile-result","os.getFile-url":"actions/os/records","id-35092":"os.getFile-url","os.getFocusPoint":"actions/os/portals","id-1784":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1766":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1809":"os.getInputList","os.getInputState":"actions/os/portals","id-1804":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-35217":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-34944":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1812":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-1664":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-1667":"os.getMiniPortalDimension","os.getWebhook":"actions/os/records","id-35019":"os.getWebhook","os.getPointerDirection":"actions/os/portals","id-1800":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1788":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1792":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-1670":"os.getPortalDimension","os.getPrivateFile-result":"actions/os/records","id-35103":"os.getPrivateFile-result","os.getPrivateFile-url":"actions/os/records","id-35106":"os.getPrivateFile-url","os.getPublicFile-result":"actions/os/records","id-35097":"os.getPublicFile-result","os.getPublicFile-url":"actions/os/records","id-35099":"os.getPublicFile-url","os.getPublicRecordKey":"actions/os/records","id-34865":"os.getPublicRecordKey","os.getRecordsEndpoint":"actions/os/records","id-35137":"os.getRecordsEndpoint","os.getRoomOptions":"actions/os/rooms","id-1834":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1849":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1838":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-34869":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-1523":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-1698":"os.goToDimension","os.goToURL":"actions/os/portals","id-1702":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-34885":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-34905":"os.grantInstRole","os.grantPermission":"actions/os/records","id-34873":"os.grantPermission","os.grantUserRole":"actions/os/records","id-34890":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1725":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-1580":"os.hideBarcode","os.hideChat":"actions/os/input","id-1460":"os.hideChat","os.hideHtml":"actions/os/portals","id-1403":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-1565":"os.hideQRCode","os.hideTips":"actions/os/portals","id-1384":"os.hideTips","os.importAUX":"actions/os/files","id-1636":"os.importAUX","os.inSheet":"actions/os/portals","id-1769":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-1473":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-1648":"os.isInDimension","os.isRecordKey":"actions/os/records","id-34920":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1819":"os.joinRoom","os.ldrawCountTextBuildSteps":"actions/os/ldraw","id-35194":"os.ldrawCountTextBuildSteps","os.leaveRoom":"actions/os/rooms","id-1824":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-34853":"os.listBuiltinTags","os.listData":"actions/os/records","id-34950":"os.listData","os.listDataByMarker":"actions/os/records","id-34956":"os.listDataByMarker","os.listFormAnimations":"actions/os/animations","id-35190":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-35214":"os.listInstUpdates","os.listNotificationSubscriptions":"actions/os/records","id-35072":"os.listNotificationSubscriptions","os.listNotifications":"actions/os/records","id-35031":"os.listNotifications","os.listNotificationsByMarker":"actions/os/records","id-35037":"os.listNotificationsByMarker","os.listUserNotificationSubscriptions":"actions/os/records","id-35078":"os.listUserNotificationSubscriptions","os.listUserStudios":"actions/os/records","id-35133":"os.listUserStudios","os.listWebhooks":"actions/os/records","id-35000":"os.listWebhooks","os.listWebhooksByMarker":"actions/os/records","id-35006":"os.listWebhooksByMarker","os.loadInst":"actions/os/spaces","id-1628":"os.loadInst","os.log":"actions/os/system","id-1762":"os.log","os.meetCommand":"actions/os/meets","id-35265":"os.meetCommand","os.meetFunction":"actions/os/meets","id-35270":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-35232":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-1568":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1737":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1710":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-1583":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-1594":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-1554":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1706":"os.openURL","os.parseBotsFromData":"actions/os/files","id-1640":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1713":"os.playSound","os.raycast":"actions/os/portals","id-35149":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-35144":"os.raycastFromCamera","os.recordData":"actions/os/records","id-34924":"os.recordData","os.recordEvent":"actions/os/records","id-35121":"os.recordEvent","os.recordFile":"actions/os/records","id-35082":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-34931":"os.recordManualApprovalData","os.recordNotification":"actions/os/records","id-35013":"os.recordNotification","os.recordWebhook":"actions/os/records","id-34975":"os.recordWebhook","os.registerApp":"actions/os/app","id-1859":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1854":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-35236":"os.remoteCount","os.remotes":"actions/os/remotes","id-35211":"os.remotes","os.replaceDragBot":"actions/os/portals","id-1644":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-34856":"os.reportInst","os.requestAuthBot":"actions/os/records","id-34859":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-34862":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-1393":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-1517":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-34913":"os.revokeInstRole","os.revokePermission":"actions/os/records","id-34879":"os.revokePermission","os.revokeUserRole":"actions/os/records","id-34898":"os.revokeUserRole","os.run":"actions/os/system","id-1463":"os.run","os.runWebhook":"actions/os/records","id-34981":"os.runWebhook","os.sendNotification":"actions/os/records","id-35055":"os.sendNotification","os.setClipboard":"actions/os/clipboard","id-1406":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1829":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1843":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1729":"os.share","os.showAccountInfo":"actions/os/system","id-1479":"os.showAccountInfo","os.showBarcode":"actions/os/barcodes","id-1575":"os.showBarcode","os.showConfirm":"actions/os/portals","id-1694":"os.showConfirm","os.showHtml":"actions/os/portals","id-1399":"os.showHtml","os.showInputForTag":"actions/os/portals","id-1678":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-1388":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-1561":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-1548":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-1551":"os.showUploadFiles","os.sleep":"actions/os/system","id-1363":"os.sleep","os.startFormAnimation":"actions/os/animations","id-35179":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-35185":"os.stopFormAnimation","os.subscribeToNotification":"actions/os/records","id-35044":"os.subscribeToNotification","os.tip":"actions/os/portals","id-1377":"os.tip","os.toast":"actions/os/portals","id-1367":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-35240":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-1632":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1864":"os.unregisterApp","os.unsubscribeFromNotification":"actions/os/records","id-35050":"os.unsubscribeFromNotification","os.version":"actions/os/system","id-1467":"os.version","os.vrSupported":"actions/os/xr","id-1502":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-1609":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-1617":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-1611":"os.instLatency","os.instTimeOffset":"actions/os/time","id-1613":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-1615":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-1607":"os.localTime","remote":"actions/os/event","id-1216":"remote","sendRemoteData":"actions/os/event","id-1228":"sendRemoteData","removeTags":"actions/data","id-1021":"removeTags","renameTag":"actions/data","id-1026":"renameTag","setTag":"actions/data","id-973":"setTag","setTagMask":"actions/data","id-979":"setTagMask","subtractMods":"actions/mods","id-1037":"subtractMods","superShout":"actions/os/event","id-1102":"superShout","uuid":"actions/data","id-1239":"uuid","web.get":"actions/web","id-35719":"web.get","web.hook":"actions/web","id-35730":"web.hook","web.post":"actions/web","id-35724":"web.post","configBot":"actions/os/system","id-1302":"configBot"}}');var n=o(1601);o(9683),o(1161);const r={id:"bot-filters",title:"Bot Filters",sidebar_label:"Bot Filters",description:"Bot Filters are functions that are useful for filtering bots."},c=void 0,d={id:"actions/bot-filters",title:"Bot Filters",description:"Bot Filters are functions that are useful for filtering bots.",source:"@site/docs/actions/bot-filters.mdx",sourceDirName:"actions",slug:"/actions/bot-filters",permalink:"/actions/bot-filters",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/bot-filters.mdx",tags:[],version:"current",frontMatter:{id:"bot-filters",title:"Bot Filters",sidebar_label:"Bot Filters",description:"Bot Filters are functions that are useful for filtering bots."},sidebar:"docs",previous:{title:"AI",permalink:"/actions/ai"},next:{title:"Bytes",permalink:"/actions/bytes"}},l={},p=[...(0,n.KO)(a)];function m(e){return(0,s.jsx)(n.hl,{doc:a})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m()}},1601:(e,t,o)=>{o.d(t,{hl:()=>j,KO:()=>P});var s=o(79),i=o(9683),a=o(6356),n=o(5819),r=o(1888),c=o(5250);class d extends s.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const o="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw o;console.error(o)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var l=o(8526),p=o(1161),m=o(7544),u=o(3324),g=o(5834),h=o(1623);function y(e){void 0===e&&(e={});const t=e.references;return e=>{(0,g.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,l.ZP)("tags/listen")+f(t.slice(1)):e.url=(0,l.ZP)(h.L0[t])+f(t)}else if(e.url.startsWith("ref:")){const o=e.url.slice(4),s=t[o];e.url=(0,l.ZP)(s)+"#"+o}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,l.ZP)("glossary")+"#"+b(t)}else if(e.url.startsWith("page:")){const[t,o]=e.url.slice(5).split("#");e.url=(0,l.ZP)(t)+"#"+o}}))}}function f(e){return"#"+b(e)}function b(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function x(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const k={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",k);const A=new Map([[k.Property,["type"]],["reflection",["declaration"]],[k.TypeLiteral,["children","signatures"]],[k.CallSignature,["parameters","comment","type"]]]);function R(e,t,o){void 0===o&&(o=null),function(e,t,o){var s;void 0===o&&(o=null);let i=A.get(null!=(s=e.kind)?s:e.type)||[];for(let a of i){let s=e[a];if(Array.isArray(s))for(let e of s)e&&t(e,o,a);else s&&t(s,o,a)}}(e,((e,o,s)=>{t(e,o,s),R(e,t,e)}))}function S(e,t){let o=[];return t(e)&&o.push(e),R(e,((e,s,i)=>{t(e,s,i)&&o.push(e)})),o}const v=["first","second","third","fourth","fifth"];function F(e,t){return e.name+"-"+t.name}function T(e,t){const o=F(e,t);let s;var i;return s=t.kind===k.Constructor?$(t.signatures[0],xe(t)):t.kind===k.Method?$(t.signatures[0]):t.kind===k.Accessor?(i=t).name+": "+de(i.getSignature.type):ie(t),s="<span>"+s+"</span>",{value:s,id:o,level:3}}function C(e){let t=[],{properties:o,constructors:s,methods:i}=function(e){let t=[],o=[],s=[];if(!e)return{properties:t,constructors:o,methods:s};for(let i of e)i.flags.isPrivate||(i.kind===k.Property||i.kind===k.Accessor?t.push(i):i.kind===k.Constructor?o.push(i):i.kind===k.Method&&s.push(i));return{properties:t,constructors:o,methods:s}}(e.children);return o.length>0&&t.push(...o.map((t=>T(e,t)))),s.length>0&&t.push(...s.map((t=>T(e,t)))),i.length>0&&t.push(...i.map((t=>T(e,t)))),t}function P(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let o of e.contents)if(o.reflection.kind===k.Interface||o.reflection.kind===k.Class){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2}),o.reflection.kind===k.Class&&t.push(...C(o.reflection))}else if(o.reflection.kind===k.CallSignature){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:"<span>"+$(o.reflection,e)+"</span>",id:s,level:2})}else if(o.reflection.kind===k.TypeAlias){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}else if(o.reflection.kind===k.GetSignature||o.reflection.kind===k.SetSignature){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:"<code>"+$(o.reflection,e)+"</code>",id:s,level:2})}else{const e=xe(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}return t}function j(e){let{doc:t}=e;const o=t.contents,s=t.references;return(0,c.jsx)("ul",{className:"api api-list",children:o.map((e=>(0,c.jsx)("li",{className:"api-member-item",children:(0,c.jsx)(B,{reflection:e.reflection,references:s})},e.id)))})}function B(e){let{reflection:t,references:o}=e;return t.kind===k.Interface||t.kind===k.Class?(0,c.jsx)(N,{reflection:t,references:o}):t.kind===k.CallSignature||t.kind===k.GetSignature||t.kind===k.SetSignature?(0,c.jsx)(G,{reflection:t,references:o}):t.kind===k.TypeAlias?(0,c.jsx)(O,{reflection:t,references:o}):(0,c.jsx)(L,{reflection:t,references:o})}function O(e){let{reflection:t,references:o}=e;const s=xe(t),a=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(i.Z,{as:"h2",id:a,children:s}),(0,c.jsx)(E,{reflection:t,references:o}),(0,c.jsx)(D,{reflection:t,name:s,references:o}),(0,c.jsx)(te,{member:t})]})}function D(e){let{reflection:t,name:o,references:s}=e,i="";return"union"===t.type.type&&(i=(0,c.jsx)(w,{type:t.type,name:o,references:s})),i}function w(e){let{type:t,name:o,references:s}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",o," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(I,{type:e,references:s},t)))})]})}function I(e){let{type:t,references:o}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:o})})})}function N(e){let{reflection:t,references:o}=e;const s=xe(t),a=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(i.Z,{as:"h2",id:a,children:s}),(0,c.jsx)(M,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function L(e){let{reflection:t,references:o}=e;const s=xe(t),a=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(i.Z,{as:"h2",id:a,children:s}),(0,c.jsx)(K,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function G(e){let{reflection:t,references:o}=e;const s=xe(t),i=ke(t);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:t,sig:t,name:s,link:i,references:o})})}function M(e){var t;const o=e.reflection;if(!o)throw new Error("Unable to find "+e.name+"!");const s=function(e){return(0,r.sortBy)(e,(e=>e.kind===k.Property||e.kind===k.Accessor?0:e.kind===k.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=o.children)?t:[]);return(0,c.jsx)(d,{reflection:o,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:o,references:e.references}),(0,c.jsx)(i.Z,{as:"h3",id:o.name+"-properties",children:"Members"}),(0,c.jsx)("div",{children:(0,c.jsxs)("ul",{className:"class-members-list",children:[o.indexSignature?(0,c.jsx)(U,{reflection:o,index:o.indexSignature,references:e.references}):"",o.references?(0,c.jsx)(V,{prop:o,references:e.references}):"",s.map((t=>(0,c.jsx)(W,{member:t,link:F(o,t),references:e.references},t.name)))]})})]})})}function U(e){let{reflection:t,index:o,references:s}=e;const a=o.parameters[0];return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(i.Z,{as:"h4",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(E,{reflection:o,references:s}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",a.name,": ",(0,c.jsx)(ce,{type:a.type,references:s}),"]: ",(0,c.jsx)(ce,{type:o.type,references:s})]})}),(0,c.jsx)(te,{member:o})]})}function E(e){let{reflection:t,references:o}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(z,{comment:t.comment,references:o})})}function W(e){let t;return t=e.member.kind===k.Property?function(e){let t,o=e.member,s="";o.references?(s=(0,c.jsx)(q,{prop:o,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:o.typeReference})):"reflection"===o.type.type&&o.typeText&&o.typeReference?(t=(0,c.jsx)(c.Fragment,{children:o.typeReference}),s=(0,c.jsx)(a.Z,{language:"typescript",children:o.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!s&&o.typeText&&o.typeReference&&(s=(0,c.jsx)(a.Z,{language:"typescript",children:o.typeText}));const n=xe(o);ke(o);return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(i.Z,{as:"h4",id:e.link,children:[(0,c.jsxs)("span",{className:"class-member-name",children:[n,e.member.flags.isOptional?(0,c.jsx)("span",{className:"class-member-optional",children:"?"}):""]})," ",(0,c.jsx)("span",{className:"class-member-type",children:t})]}),(0,c.jsx)(E,{reflection:e.member,references:e.references}),s]})}(e):e.member.kind===k.Constructor?function(e){const t=xe(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Method?function(e){const t=xe(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Accessor?function(e){var t;return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(i.Z,{as:"h4",id:e.link,children:[(0,c.jsx)("span",{className:"class-member-name",children:e.member.name})," ",(0,c.jsx)("span",{className:"class-member-type",children:(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})})]}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsxs)(d,{reflection:e.member,children:[(0,c.jsx)("span",{role:"separator",className:"class-member-separator"}),(0,c.jsx)("li",{className:"class-member-item",children:t})]})}function V(e){let{prop:t,references:o}=e;const s=ke(t);return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(i.Z,{as:"h4",id:s+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(n.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})]})}function q(e){let{prop:t,references:o}=e;return(0,c.jsxs)(n.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})}function K(e){const t=e.reflection,o=(t.type.declaration,Ce(t));return(0,c.jsx)(d,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:t,references:e.references}),o.map((t=>(0,c.jsx)(_,{group:t,references:e.references},t.group)))]})})}function _(e){let{group:t,references:o}=e;const s=t.children,a=Fe(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(i.Z,{as:"h3",id:t.group,children:a}),s.map((e=>(0,c.jsx)(H,{namespace:e.namespace,name:e.name,property:e.child,link:F(e.reflection,e.child),references:o},e.child.id)))]})}function H(e){let t;if(pe(e.property)){var o;const s=e.namespace?e.namespace+"."+e.name:e.name,i=e.property.type.declaration;t=J({name:s,func:e.property,sig:null!=(o=Re(i.signatures))?o:i.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){const o=e.namespace?e.namespace+"."+e.name:e.name,s=Se(e.property);t=J({name:o,func:e.property,sig:s,link:e.link,references:e.references})}else t=he(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===k.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(i.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(E,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(d,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function J(e){let{func:t,sig:o,link:s,name:a,references:n}=e;const r=o.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(i.Z,{as:"h4",id:s,children:(0,c.jsx)(Y,{func:t,sig:o,name:a,references:n})}),(0,c.jsx)(Z,{sig:o,references:n}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(ee,{param:e,index:t,references:n},e.name)))}):"",(0,c.jsx)(te,{member:o})]})}function Z(e){let{sig:t,references:o}=e;return(0,c.jsx)(z,{comment:t.comment,references:o})}function z(e){let{comment:t,references:o}=e;return(0,c.jsx)(Q,{references:o,children:X(t)})}function Q(e){let{children:t,remarkPlugins:o,rehypePlugins:s,references:i}=e;return(0,c.jsx)(m.U,{remarkPlugins:[[y,{references:i}],...o||[]],rehypePlugins:[u.Z,...s||[]],children:t})}function X(e){let t="";if(e&&e.summary)for(let o of e.summary)t+=o.text;return t}function Y(e){let{func:t,sig:o,name:s,references:i}=e;const a=o.parameters||[];let n="";return t.kind!==k.GetSignature&&(n=(0,c.jsxs)(c.Fragment,{children:["(",a.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:i})]},e.name))),")"]})),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("span",{className:"function-member-name",children:[(t.flags.isStatic?"static ":"")+(s||o.name),n]}),": ",(0,c.jsx)("span",{className:"function-member-type",children:(0,c.jsx)(ce,{type:o.type,references:i})})]})}function $(e,t){void 0===t&&(t=e.name);const o=e.parameters||[];let s="";return e.kind!==k.GetSignature&&(s="("+o.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+s+": "+de(e.type)}function ee(e){let t,{param:o,index:s,references:i}=e;return t=o.flags.isRest&&o.type.elementType?0===s?(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:i})," and are ",(0,c.jsx)(ae,{param:o,isRest:!0,references:i})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:i})," and are ",(0,c.jsx)(ae,{param:o,isRest:!0,references:i})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("em",{children:[se(s)," parameter"]})," is",o.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:o.type,references:i})," and ",(0,c.jsx)(ae,{param:o,references:i})]}),t}function te(e){var t;let{member:o}=e;if(null==(t=o.comment)||!t.blockTags)return"";const s=o.comment.blockTags.filter((e=>"@example"===e.tag));return s.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h5",{className:"examples-heading",children:"Examples"}),s.map(((e,t)=>(0,c.jsx)(oe,{example:e},t)))]}):""}function oe(e){let{example:t}=e;const o=t.content.map((e=>e.text)).join(""),s=o.indexOf("\n"),i=o.indexOf("\n",s+1);let n="typescript";s>3&&(n=o.substring(3,s).trim());const r=o.lastIndexOf("```"),d=o.substring(s,i),l=o.substring(i,r);return(0,c.jsx)(a.Z,{language:n,title:d.trim(),children:l.trim()})}function se(e){return v[e]}function ie(e,t){let o;return void 0===t&&(t=e.name),o=e.typeReference?e.typeReference:de(e.type),t+(e.flags.isOptional?"?":"")+": "+o}function ae(e){let{param:t,isRest:o,references:s}=e;return(0,c.jsx)(Q,{remarkPlugins:[x],references:s,children:ne(t,o)})}function ne(e,t){let o=X(e.comment);return o?(o=o.slice(0,1).toLowerCase()+o.slice(1),o.startsWith("the")&&!t&&(o="is "+o),o):""}const re=new Map([["ArrayBuffer","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer"],["Blob","https://developer.mozilla.org/en-US/docs/Web/API/Blob"],["Uint8Array","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"],["RegExp","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"],["Function","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"],["Error","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"]]);function ce(e){let{type:t,references:o,isInUnionOrArray:i}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var a,n,r,d,m,u;if(t.name===(null==(a=t.target)?void 0:a.qualifiedName)&&re.has(t.name)){const e=re.get(t.name);return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)("a",{className:"type-link",href:e,children:t.name})})}if("Promise"===t.name&&"Promise"===(null==(n=t.target)?void 0:n.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Partial"===t.name&&"Partial"===(null==(r=t.target)?void 0:r.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Omit"===t.name&&"Omit"===(null==(d=t.target)?void 0:d.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys",children:"Omit"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Map"===t.name&&"Map"===(null==(m=t.target)?void 0:m.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"Map"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Set"===t.name&&"Set"===(null==(u=t.target)?void 0:u.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",children:"Set"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});let e="#"+t.name;const s=t.id?null==o?void 0:o["id-"+t.id]:null;if(s){const t=null==o?void 0:o[s];t&&(e=(0,l.ZP)(t)+"#"+s)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry. ");return(0,c.jsx)(p.Z,{className:"type-link",href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(s.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:o,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===k.TypeLiteral&&e.signatures&&!e.children){var g;const t=null!=(g=Re(e.signatures))?g:e.signatures[0],s=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[i?"(":"","(",s.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:o})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:o}),i?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})))}if("tuple"===t.type){const e=t.elements.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?", ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})));return(0,c.jsxs)("span",{children:["[",e,"]"]})}return"typeOperator"===t.type?(0,c.jsxs)("span",{children:[t.operator," ",(0,c.jsx)(ce,{type:t.target,references:o,isInUnionOrArray:!0})]}):""+JSON.stringify(t)}function de(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+de(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>de(e))).join(" | ")+")":"array"===e.type?de(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function le(e){return pe(e)||ue(e)}function pe(e){return e&&me(e.type)}function me(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===k.CallSignature))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>me(e)))}function ge(e){return e&&e.kind===k.CallSignature}function he(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===k.TypeLiteral&&e.type.declaration.children}function ye(e,t){var o;const s=null==(o=e.comment)||null==(o=o.blockTags)?void 0:o.find((e=>e.tag===t));return s?s.content.map((e=>e.text)).join(""):null}function fe(e){if(e)for(let t of e){const e=ye(t,"@docname");if(e)return e.trim()}return null}function be(e){if(pe(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=Ae(null==o?void 0:o.signatures);if(s)return s}else if(ue(e)){const t=e.type.types;for(let e of t)if(me(e)){let t=Ae(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=Ae([e]);if(t)return t}return"99-default"}function xe(e){if(e.kind===k.Method){let t=fe(e.signatures);if(t)return t}else if(pe(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=fe(null==o?void 0:o.signatures);if(s)return s}else if(ue(e)){const t=e.type.types;for(let e of t)if(me(e)){let t=fe(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=fe([e]);if(t)return t}return ye(o=e,"@docname")||o.name;var o}function ke(e){const t=ye(e,"@docid");if(t)return t;const o=function(e,t){let o=[];return R(e,((e,s,i)=>{"comment"===i&&(console.log(e),o.push(...e.blockTags.filter((e=>e.tag===t))))})),o}(e,"@docid");return o.length>0?o[0].text.trim():xe(e)}function Ae(e){if(e)for(let t of e){const e=ye(t,"@docgroup");if(e)return e.trim()}return null}function Re(e){for(let t of e){if(ye(t,"@docgroup"))return t}return null}function Se(e){const t=e.type.types;let o=null;for(let s of t)if(me(s)){const e=s.declaration.signatures;o||(o=e[0]);let t=Re(e);if(t)return t}return o}function ve(e){const t=(o=e,s=k.CallSignature,S(o,(e=>e.kind===s)));var o,s;for(let i of t){const e=ye(i,"@docgrouptitle");if(e)return e.trim()}return null}function Fe(e){for(let t of e.children){let e=ve(t.child);if(e)return e}return e.group}function Te(e){if(e.kind===k.CallSignature)return ge(e)||le(e)||he(e)?[{group:be(e),name:xe(e),reflection:e,child:e}]:[];if(e.kind===k.TypeAlias||e.kind===k.GetSignature||e.kind===k.SetSignature)return[];const t=e.type.declaration.children.filter((e=>ge(e)||le(e)||he(e))),o=null!==ye(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>le(t)?{group:be(t),name:xe(t),namespace:o,reflection:e,child:t}:Te(t)))}function Ce(e){const t=Te(e),o=(0,r.groupBy)(t,(e=>e.group));let s=[];for(let i in o)s.push({group:i,children:o[i]});return s=(0,r.sortBy)(s,(e=>e.group)),s}}}]);