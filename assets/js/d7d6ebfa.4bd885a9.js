"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[678],{4169:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var s=o(5250),n=o(5545);const i=JSON.parse('{"hash":"actions/os/event","pageTitle":"Event Actions","pageDescription":"Event actions are used to send events to bots.","pageSidebarLabel":"Events","contents":[{"id":34999,"order":9999,"name":"action.perform","reflection":{"id":34999,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the given action.\\nThis function can be used to perform actions that you have stored as data without having to find out which function to call. You can find a list of action types [here](https://github.com/casual-simulation/casualos/blob/develop/src/aux-common/bots/BotEvents.ts#L40)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPerform a toast action\\naction.perform({\\n    type: \'show_toast\',\\n    message: \'Hello, world!\',\\n    duration: 2000\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPerform an add bot action\\naction.perform({\\n    type: \'add_bot\',\\n    id: \'bot_id\',\\n    bot: {\\n        id: \'bot_id\',\\n        tags: {\\n            home: true,\\n            label: \'Hello, World!\'\\n        }\\n    }\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"action.perform"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":11566,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L11566"}],"parameters":[{"id":35000,"name":"action","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the action that should be performed."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Performs the given action.\\nThis function can be used to perform actions that you have stored as data without having to find out which function to call. You can find a list of action types [here](https://github.com/casual-simulation/casualos/blob/develop/src/aux-common/bots/BotEvents.ts#L40).","tags":[{"tagName":"example","text":"```ts\\nPerform a toast action\\naction.perform({\\n    type: \'show_toast\',\\n    message: \'Hello, world!\',\\n    duration: 2000\\n});\\n```"},{"tagName":"example","text":"```ts\\nPerform an add bot action\\naction.perform({\\n    type: \'add_bot\',\\n    id: \'bot_id\',\\n    bot: {\\n        id: \'bot_id\',\\n        tags: {\\n            home: true,\\n            label: \'Hello, World!\'\\n        }\\n    }\\n});\\n```"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"action.perform"}]},"group":"01-event-actions"},{"id":35003,"order":9999,"name":"action.reject","reflection":{"id":35003,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Prevents a previous action from being performed.\\n\\nThis is especially useful when used in a "},{"kind":"text","text":"[`@onAnyAction`](tags:@onAnyAction)"},{"kind":"text","text":" listener since it lets you reject actions before they are performed."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPrevent a toast message from being performed.\\nconst toastAction = os.toast(\\"my message\\");\\naction.reject(toastAction);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"action.reject"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":11633,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L11633"}],"parameters":[{"id":35004,"name":"action","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the action that should be prevented/rejected."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":37030,"name":"RejectAction","package":"@casual-simulation/aux-common","id":37030,"qualifiedName":"RejectAction"}},"comment":{"text":"Prevents a previous action from being performed.\\n\\nThis is especially useful when used in a @onAnyAction listener since it lets you reject actions before they are performed.","tags":[{"tagName":"example","text":"```ts\\nPrevent a toast message from being performed.\\nconst toastAction = os.toast(\\"my message\\");\\naction.reject(toastAction);\\n```"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"action.reject"}]},"group":"01-event-actions"},{"id":912,"order":9999,"name":"priorityShout","reflection":{"id":912,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shouts to all bots that are "},{"kind":"text","text":"[`#listening`](tags:listening)"},{"kind":"text","text":" and have a listen tag for the specified events until one of the bots returns a value.\\nOptionally includes a custom that argument.\\nAlso triggers "},{"kind":"text","text":"[`@onListen`](tags:@onListen)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onAnyListen`](tags:@onAnyListen)"},{"kind":"text","text":" for the bots that the shout was sent to.\\n\\nThis function is useful when you want to shout but only want one bot to process the shout."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShout to the first bot that handles @onClick\\npriorityShout([\'onClick\']);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShout to the first bot that handles @myTest or @mySecondTest\\npriorityShout([\'myTest\', \'mySecondTest\']);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nPriority shout with a color\\npriorityShout([\'myTest\', \'mySecondTest\'], \\"blue\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"priorityShout"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14893,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L14893"}],"parameters":[{"id":913,"name":"eventNames","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the array of event names that should be shouted. e.g. Using onClick for the name will trigger the "},{"kind":"text","text":"[`@onClick`](tags:@onClick)"},{"kind":"text","text":" listener until a bot returns a value."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":914,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Shouts to all bots that are listening and have a listen tag for the specified events until one of the bots returns a value.\\nOptionally includes a custom that argument.\\nAlso triggers @onListen and @onAnyListen for the bots that the shout was sent to.\\n\\nThis function is useful when you want to shout but only want one bot to process the shout.","tags":[{"tagName":"example","text":"```ts\\nShout to the first bot that handles @onClick\\npriorityShout([\'onClick\']);\\n```"},{"tagName":"example","text":"```ts\\nShout to the first bot that handles @myTest or @mySecondTest\\npriorityShout([\'myTest\', \'mySecondTest\']);\\n```"},{"tagName":"example","text":"```ts\\nPriority shout with a color\\npriorityShout([\'myTest\', \'mySecondTest\'], \\"blue\\");\\n```"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"priorityShout"}]},"group":"01-event-actions"},{"id":1021,"order":9999,"name":"remote","reflection":{"id":1021,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends the given action to another remote.\\n\\nIn CasualOS, all actions are messages which are placed in a queue and processed one at at time.\\n\\nFor example, the "},{"kind":"text","text":"[`os.toast(message, duration)`](ref:os.toast)"},{"kind":"text","text":" action queues a message which, when processed, will show a toast message.\\nHowever, before any action is performed, it is run through the "},{"kind":"text","text":"[`@onAnyAction`](tags:@onAnyAction)"},{"kind":"text","text":" listener which can decide whether to reject an action using "},{"kind":"text","text":"[`action.reject(action)`](ref:action.reject)"},{"kind":"text","text":".\\nThis lets you write rules for what actions each player is allowed to take.\\n\\nThere are a couple special cases. First, when you send/receive an action from someone else (i.e. they sent an action to you using the "},{"kind":"text","text":"[`remote(action, selector, allowBatching)`](ref:remote)"},{"kind":"text","text":" function), it won\'t run by default.\\nInstead it is wrapped as a device action and sent to "},{"kind":"text","text":"[`@onAnyAction`](tags:@onAnyAction)"},{"kind":"text","text":" for processing. This lets you decide whether to allow players to send messages to each other and what the effect of those messages are.\\nIf you want to perform the action, you can use "},{"kind":"text","text":"[`action.perform(action)`](ref:action.perform)"},{"kind":"text","text":" on the inner device action to queue it for execution."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a toast message to another remote.\\n// Get the configBot ID of the other remote.\\nconst otherRemoteId = \'otherRemoteId\';\\n\\n// Create a toast action\\nconst toastAction = os.toast(\'My message!\');\\n\\n// Send the action to the other remote\\n// The toastAction will not be performed locally because\\n// it is being sent to another remote.\\nremote(toastAction, otherRemoteId);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"remote"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":10711,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L10711"}],"parameters":[{"id":1022,"name":"action","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the action to send."}],"blockTags":[]},"type":{"type":"reference","target":36597,"name":"BotAction","package":"@casual-simulation/aux-common","id":36597,"qualifiedName":"BotAction"}},{"id":1023,"name":"selector","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the object specifing which remote to send the action to.\\nIf not specified, then the action is sent to the server.\\nIf specified, then the action is sent to all remotes that match the given values.\\nIf given a string, then the action is sent to the remote with the matching ID."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":35508,"name":"SessionSelector","package":"@casual-simulation/aux-runtime","id":35508,"qualifiedName":"SessionSelector"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":35508,"name":"SessionSelector","package":"@casual-simulation/aux-runtime","id":35508,"qualifiedName":"SessionSelector"}]}}]}},{"id":1024,"name":"allowBatching","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to allow batching this remote event with other remote events. This will preserve ordering between remote events but may not preserve ordering\\n                     with respect to other events. Defaults to true."}],"blockTags":[]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"reference","target":48613,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":48613,"qualifiedName":"RemoteAction"},{"type":"array","elementType":{"type":"reference","target":48613,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":48613,"qualifiedName":"RemoteAction"}}]}},"comment":{"text":"Sends the given action to another remote.\\n\\nIn CasualOS, all actions are messages which are placed in a queue and processed one at at time.\\n\\nFor example, the os.toast action queues a message which, when processed, will show a toast message.\\nHowever, before any action is performed, it is run through the @onAnyAction listener which can decide whether to reject an action using action.reject.\\nThis lets you write rules for what actions each player is allowed to take.\\n\\nThere are a couple special cases. First, when you send/receive an action from someone else (i.e. they sent an action to you using the remote function), it won\'t run by default.\\nInstead it is wrapped as a device action and sent to @onAnyAction for processing. This lets you decide whether to allow players to send messages to each other and what the effect of those messages are.\\nIf you want to perform the action, you can use action.perform on the inner device action to queue it for execution.","tags":[{"tagName":"example","text":"```ts\\nSend a toast message to another remote.\\n// Get the configBot ID of the other remote.\\nconst otherRemoteId = \'otherRemoteId\';\\n\\n// Create a toast action\\nconst toastAction = os.toast(\'My message!\');\\n\\n// Send the action to the other remote\\n// The toastAction will not be performed locally because\\n// it is being sent to another remote.\\nremote(toastAction, otherRemoteId);\\n```"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"remote"}]},"group":"01-event-actions"},{"id":1033,"order":9999,"name":"sendRemoteData","reflection":{"id":1033,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a "},{"kind":"text","text":"[`@onRemoteData`](tags:@onRemoteData)"},{"kind":"text","text":" shout to the remote with the given ID or remotes if given a list of IDs. This is useful for sending arbitrary messages to specific remotes.\\n\\nIn effect, this allows remotes to communicate with each other by sending arbitrary events."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a \\"custom\\" message to another remote.\\nconst otherRemoteId = \\"otherRemoteId\\";\\n\\n// The other remote will receive a\\n```"}]},{"tag":"@onRemoteData","content":[{"kind":"text","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemoteId, \\"custom\\", \\"Hello\\");"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to all other remotes.\\nconst remotes = await os.remotes();\\nconst remoteId = getID(configBot);\\nconst otherRemotes = remotes.filter(id => id !== remoteId);\\n\\n// All other remotes will receive a\\n```"}]},{"tag":"@onRemoteData","content":[{"kind":"text","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemotes, \\"custom\\", \\"Hello\\");"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"sendRemoteData"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":10767,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L10767"}],"parameters":[{"id":1034,"name":"remoteId","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the remote ID or list of remote IDs that the shout should be sent to."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":1035,"name":"name","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the event that is being sent. This is useful for telling the difference between different messages."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1036,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the that argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"union","types":[{"type":"reference","target":48613,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":48613,"qualifiedName":"RemoteAction"},{"type":"array","elementType":{"type":"reference","target":48613,"name":"RemoteAction","package":"@casual-simulation/aux-common","id":48613,"qualifiedName":"RemoteAction"}}]}},"comment":{"text":"Sends a @onRemoteData shout to the remote with the given ID or remotes if given a list of IDs. This is useful for sending arbitrary messages to specific remotes.\\n\\nIn effect, this allows remotes to communicate with each other by sending arbitrary events.","tags":[{"tagName":"example","text":"```ts\\nSend a \\"custom\\" message to another remote.\\nconst otherRemoteId = \\"otherRemoteId\\";\\n\\n// The other remote will receive a\\n```"},{"tagName":"onRemoteData","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemoteId, \\"custom\\", \\"Hello\\");"},{"tagName":"example","text":"```ts\\nSend a message to all other remotes.\\nconst remotes = await os.remotes();\\nconst remoteId = getID(configBot);\\nconst otherRemotes = remotes.filter(id => id !== remoteId);\\n\\n// All other remotes will receive a\\n```"},{"tagName":"onRemoteData","text":"with\\n// that.name === \\"custom\\" and that.that === \\"Hello\\"\\nsendRemoteData(otherRemotes, \\"custom\\", \\"Hello\\");"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"sendRemoteData"}]},"group":"01-event-actions"},{"id":925,"order":9999,"name":"shout","reflection":{"id":925,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a shout to all bots that are "},{"kind":"text","text":"[`#listening`](tags:listening)"},{"kind":"text","text":" and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers "},{"kind":"text","text":"[`@onListen`](tags:@onListen)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onAnyListen`](tags:@onAnyListen)"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a list which contains the values returned from each script that was run for the shout."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a @reset event to all bots\\nshout(\\"reset\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a @hello event with your name\\nshout(\\"hello\\", \\"Bob\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Event Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Events"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Event actions are used to send events to bots."}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"shout"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14939,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L14939"}],"parameters":[{"id":926,"name":"name","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the shout. e.g. Using "},{"kind":"code","text":"`onClick`"},{"kind":"text","text":" for the name will trigger all [@onClick](tags:@onClick) listeners."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":927,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Sends a shout to all bots that are listening and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers @onListen and @onAnyListen.","tags":[{"tagName":"returns","text":"Returns a list which contains the values returned from each script that was run for the shout."},{"tagName":"example","text":"```ts\\nSend a @reset event to all bots\\nshout(\\"reset\\");\\n```"},{"tagName":"example","text":"```ts\\nSend a @hello event with your name\\nshout(\\"hello\\", \\"Bob\\");\\n```"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"doctitle","text":"Event Actions"},{"tagName":"docsidebar","text":"Events"},{"tagName":"docdescription","text":"Event actions are used to send events to bots."},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"shout"}]},"group":"01-event-actions"},{"id":907,"order":9999,"name":"superShout","reflection":{"id":907,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a shout to all of the other instances that are loaded."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a hello super shout to all the loaded instances.\\nsuperShout(\\"hello\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"superShout"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14865,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L14865"}],"parameters":[{"id":908,"name":"eventName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the shout. e.g. Using onClick for the name will trigger all the "},{"kind":"text","text":"[`@onClick`](tags:@onClick)"},{"kind":"text","text":" listeners."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":909,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the optional "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to include with the shout."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":36883,"name":"SuperShoutAction","package":"@casual-simulation/aux-common","id":36883,"qualifiedName":"SuperShoutAction"}},"comment":{"text":"Sends a shout to all of the other instances that are loaded.","tags":[{"tagName":"example","text":"```ts\\nSend a hello super shout to all the loaded instances.\\nsuperShout(\\"hello\\");\\n```"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"superShout"}]},"group":"01-event-actions"},{"id":951,"order":9999,"name":"whisper","reflection":{"id":951,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a whisper to all bots that are "},{"kind":"text","text":"[`#listening`](tags:listening)"},{"kind":"text","text":" and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers "},{"kind":"text","text":"[`@onListen`](tags:@onListen)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onAnyListen`](tags:@onAnyListen)"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a list which contains the values returned from each script that was run for the shout."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a @reset event to all bots named \\"Bob\\"\\nlet bots = getBots(\\"#name\\", \\"Bob\\");\\nwhisper(bots, \\"reset\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a @setColor event to ourself\\nwhisper(this, \\"setColor\\", \\"red\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/event"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-event-actions"}]},{"tag":"@docname","content":[{"kind":"text","text":"whisper"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14969,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/fc0da8ce2/src/aux-runtime/runtime/AuxLibrary.ts#L14969"}],"parameters":[{"id":952,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot, array of bots, bot "},{"kind":"text","text":"[`#id`](tags:id)"},{"kind":"text","text":", or array of bot "},{"kind":"text","text":"[`#id`](tags:id)"},{"kind":"text","text":" that the whisper should be sent to."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":38343,"name":"Bot","package":"@casual-simulation/aux-common","id":38343,"qualifiedName":"Bot"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":38343,"name":"Bot","package":"@casual-simulation/aux-common","id":38343,"qualifiedName":"Bot"}]}}]}},{"id":953,"name":"eventName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the whisper. e.g. Using "},{"kind":"code","text":"`onClick`"},{"kind":"text","text":" for the name will trigger the ["},{"kind":"code","text":"`@onClick`"},{"kind":"text","text":"](tags:@onClick) listener for the specified bots."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":954,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`that`"},{"kind":"text","text":" argument to send with the shout. You do not need to specify this parameter if you do not want to."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}},"comment":{"text":"Sends a whisper to all bots that are listening and have\\na listen tag for the specified name. Optionally includes a custom that argument.\\nAlso triggers @onListen and @onAnyListen.","tags":[{"tagName":"returns","text":"Returns a list which contains the values returned from each script that was run for the shout."},{"tagName":"example","text":"```ts\\nSend a @reset event to all bots named \\"Bob\\"\\nlet bots = getBots(\\"#name\\", \\"Bob\\");\\nwhisper(bots, \\"reset\\");\\n```"},{"tagName":"example","text":"```ts\\nSend a @setColor event to ourself\\nwhisper(this, \\"setColor\\", \\"red\\");\\n```"},{"tagName":"dochash","text":"actions/os/event"},{"tagName":"docgroup","text":"01-event-actions"},{"tagName":"docname","text":"whisper"}]},"group":"01-event-actions"}],"references":{"CasualOSError":"types/error","id-38864":"CasualOSError","Quaternion":"types/math/rotations","id-135":"Quaternion","Rotation":"types/math/rotations","id-167":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-38913":"AIChatMessage","AIChatOptions":"types/ai","id-37856":"AIChatOptions","AIDataContent":"types/ai","id-38922":"AIDataContent","AIGenerateImageSuccess":"types/ai","id-35532":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-37896":"AIGenerateImageOptions","AIGenerateSkyboxAction":"types/ai","id-37863":"AIGenerateSkyboxAction","AIGenerateSkyboxBlockadeLabsOptions":"types/ai","id-37874":"AIGenerateSkyboxBlockadeLabsOptions","AIGenerateSkyboxOptions":"types/ai","id-37871":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-35525":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-35529":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-35535":"AIGeneratedImage","AITextContent":"types/ai","id-38920":"AITextContent","AIUrlContent":"types/ai","id-38925":"AIUrlContent","ARSupportedAction":"types/os/xr","id-37143":"ARSupportedAction","AddCountFailure":"types/records/events","id-40933":"AddCountFailure","AddCountSuccess":"types/records/events","id-40928":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-37276":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-37280":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-37643":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-35540":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-35833":"AttachDebuggerOptions","AuthData":"types/os/records","id-37451":"AuthData","DebuggerOptions":"types/debuggers/common","id-35849":"DebuggerOptions","CasualOSDevice":"types/os/system","id-38832":"CasualOSDevice","CasualOSVersion":"types/os/system","id-38824":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-213":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-37355":"BeginRecordingAction","BotIntersection":"types/os/portals","id-36042":"BotIntersection","BotTagMasks":"types/core","id-38448":"BotTagMasks","BotTags":"types/core","id-38451":"BotTags","BotState":"types/core","id-38526":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-37556":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-36991":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-37515":"CalculateRayFromCameraAction","CalculateScreenCoordinatesFromViewportCoordinatesAction":"types/os/portals","id-37529":"CalculateScreenCoordinatesFromViewportCoordinatesAction","CalculateViewportCoordinatesFromPositionAction":"types/os/portals","id-37522":"CalculateViewportCoordinatesFromPositionAction","CalculateViewportCoordinatesFromScreenCoordinatesAction":"types/os/portals","id-37536":"CalculateViewportCoordinatesFromScreenCoordinatesAction","CancelSoundAction":"types/os/audio","id-36997":"CancelSoundAction","CompiledBotListeners":"types/core","id-38401":"CompiledBotListeners","CompiledBotModules":"types/core","id-38407":"CompiledBotModules","ConfigureWakeLockAction":"types/os/portals","id-37630":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-37477":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-37473":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-39912":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-39908":"CreatePublicRecordKeySuccess","DataPermission":"types/permissions","id-305":"DataPermission","DebuggerCallFrame":"types/debuggers/common","id-35873":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-35881":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-35867":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-35827":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-35822":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-35887":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-37465":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-37003":"DownloadAction","Easing":"types/animation","id-37093":"Easing","EnableARAction":"types/os/xr","id-37139":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-37070":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-37331":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-37157":"EnablePOVAction","EnableVRAction":"types/os/xr","id-37153":"EnableVRAction","EnableXROptions":"types/os/xr","id-37137":"EnableXROptions","EndRecordingAction":"types/os/audio","id-37367":"EndRecordingAction","EraseDataFailure":"types/records/data","id-40439":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-40435":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-40620":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-40616":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-216":"EulerAnglesRotation","EventPermission":"types/permissions","id-405":"EventPermission","ExitFullscreenAction":"types/os/portals","id-37172":"ExitFullscreenAction","FilePermission":"types/permissions","id-353":"FilePermission","FilePermissionOptions":"types/permissions","id-340":"FilePermissionOptions","FocusOnOptions":"types/os/camera","id-36707":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-36719":"FocusOnRotation","FormAnimationData":"types/os/animations","id-37611":"FormAnimationData","FromToRotation":"types/math/rotations","id-210":"FromToRotation","GenericError":"types/error","id-38861":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-37495":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-40944":"GetCountFailure","GetCountSuccess":"types/records/events","id-40938":"GetCountSuccess","GetDataFailure":"types/records/data","id-40430":"GetDataFailure","GetDataSuccess":"types/records/data","id-40421":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-37408":"GetGeolocationAction","GetRoomOptionsFailure":"types/os/portals","id-35994":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-35990":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-36028":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-36023":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-36004":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-35999":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-37399":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-37636":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-37435":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-44127":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-44125":"GrantMarkerPermissionSuccess","GrantResourcePermissionFailure":"types/records/policies","id-44150":"GrantResourcePermissionFailure","GrantResourcePermissionSuccess":"types/records/policies","id-44148":"GrantResourcePermissionSuccess","GrantRoleFailure":"types/records/roles","id-44209":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-44207":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-36703":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-36692":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-37228":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-37233":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os/image-classification","id-36829":"ImageClassifierOptions","InstPermission":"types/permissions","id-531":"InstPermission","InstUpdate":"types/os/spaces","id-38857":"InstUpdate","JoinRoomFailure":"types/os/portals","id-35966":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-35963":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-35975":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-35972":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-40461":"ListDataFailure","ListDataSuccess":"types/records/data","id-40451":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-37605":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-39955":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-39952":"ListStudiosSuccess","ListedData":"types/records/data","id-40457":"ListedData","MarkerPermission":"types/permissions","id-44339":"MarkerPermission","ResourcePermission":"types/permissions","id-44328":"ResourcePermission","ListedStudio":"types/records/studios","id-39959":"ListedStudio","LoadInstAction":"types/os/spaces","id-36869":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-37063":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-37086":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-37107":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-37122":"LocalTweenAction","LookRotation":"types/math/rotations","id-233":"LookRotation","MediaPermissionAction":"types/os/media","id-37488":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-37485":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-37372":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-37379":"MeetFunctionAction","NodeReference":"types/os/portals","id-37254":"NodeReference","Debugger":"types/debuggers/debugger","id-35647":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-35839":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os/portals","id-37266":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-37273":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-36803":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-36791":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-36980":"OpenURLAction","ParsedBotLink":"types/core","id-38392":"ParsedBotLink","PartialBotState":"types/core","id-38529":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-35703":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-35844":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-35859":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-35854":"PauseTriggerOptions","Photo":"types/camera","id-36787":"Photo","PlaySoundAction":"types/os/audio","id-36984":"PlaySoundAction","Point2D":"types/os/portals","id-37623":"Point2D","Point3D":"types/os/portals","id-37626":"Point3D","PossiblePauseTriggerLocation":"types/debuggers/common","id-35817":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-35893":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-226":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-37500":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-37507":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-36051":"RaycastRay","RaycastResult":"types/os/portals","id-36039":"RaycastResult","RecordActionOptions":"types/records/extra","id-37915":"RecordActionOptions","RecordDataFailure":"types/records/data","id-40413":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-40409":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-35936":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-35932":"RecordFileSuccess","RecordFileRequest":"types/records/files","id-40588":"RecordFileRequest","RecordedFile":"types/experimental","id-37430":"RecordedFile","Recording":"types/experimental","id-37428":"Recording","RecordingOptions":"types/experimental","id-37347":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-37186":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-37192":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-37205":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-37263":"RegisterPrefixOptions","RejectAction":"types/os/event","id-37030":"RejectAction","RemoteAction":"types/os/event","id-48613":"RemoteAction","ReportInstAction":"types/os/moderation","id-37440":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-37445":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-37170":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-44138":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-44136":"RevokeMarkerPermissionSuccess","RevokePermissionFailure":"types/records/policies","id-44172":"RevokePermissionFailure","RevokePermissionSuccess":"types/records/policies","id-44170":"RevokePermissionSuccess","RevokeResourcePermissionFailure":"types/records/policies","id-44161":"RevokeResourcePermissionFailure","RevokeResourcePermissionSuccess":"types/records/policies","id-44159":"RevokeResourcePermissionSuccess","RevokeRoleFailure":"types/records/roles","id-44220":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-44218":"RevokeRoleSuccess","RolePermission":"types/permissions","id-484":"RolePermission","RolePermissionOptions":"types/permissions","id-475":"RolePermissionOptions","RoomJoinOptions":"types/os/portals","id-38131":"RoomJoinOptions","RoomOptions":"types/os/portals","id-38127":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-38186":"RoomRemoteOptions","RoomTrackOptions":"types/os/rooms","id-38164":"RoomTrackOptions","RunScriptAction":"types/os/system","id-37050":"RunScriptAction","RuntimeBot":"types/core","id-38343":"RuntimeBot","RuntimeBotLinks":"types/core","id-38395":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-38398":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-224":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-37242":"SerializableMutationRecord","SessionSelector":"types/os/event","id-35508":"SessionSelector","SetAppOutputAction":"types/os/portals","id-37217":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-37033":"SetClipboardAction","SetRoomOptionsFailure":"types/os/portals","id-35984":"SetRoomOptionsFailure","SetRoomOptionsSuccess":"types/os/portals","id-35981":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-38161":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-36016":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-36011":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-37178":"ShareAction","ShareOptions":"types/os/input","id-37174":"ShareOptions","ShowChatBarAction":"types/os/input","id-37036":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-37044":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-36961":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-36967":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-36698":"ShowHtmlAction","ShowInputItem":"types/os/input","id-37018":"ShowInputItem","ShowInputOptions":"types/os/input","id-37009":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-37166":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-36678":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-36683":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-37056":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-37058":"ShowUploadFilesAction","SnapAxis":"types/os/portals","id-37292":"SnapAxis","SnapGrid":"types/os/portals","id-37310":"SnapGrid","SnapGridTarget":"types/os/portals","id-35941":"SnapGridTarget","SnapPoint":"types/os/portals","id-37285":"SnapPoint","SpeakTextAction":"types/os/audio","id-37390":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-35562":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-37575":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-37562":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-37597":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-37594":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-37414":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-37404":"SyntheticVoice","TweenOptions":"types/experimental","id-35566":"TweenOptions","UnloadInstAction":"types/os/spaces","id-36873":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-37199":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-37212":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-37424":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-40958":"UpdateEventRecordFailure","UpdateEventRecordRequest":"types/records/events","id-40948":"UpdateEventRecordRequest","UpdateEventRecordSuccess":"types/records/events","id-40956":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-37222":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-36054":"UploadedFile","VRSupportedAction":"types/os/xr","id-37148":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-37641":"WakeLockConfiguration","WebhookOptions":"types/web","id-35513":"WebhookOptions","WebhookResult":"types/web","id-35924":"WebhookResult","AIChatContent":"types/ai","id-38919":"AIChatContent","AIChatMessageRole":"types/ai","id-38912":"AIChatMessageRole","ActionKinds":"types/permissions","id-261":"ActionKinds","AddCountResult":"types/records/events","id-40927":"AddCountResult","AvailablePermissions":"types/permissions","id-268":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-36812":"BarcodeFormat","BotAction":"types/os/event","id-36597":"BotAction","BotAnchorPoint":"types/core","id-38555":"BotAnchorPoint","BotFilter":"types/core","id-35550":"BotFilter","BotSpace":"types/core","id-38438":"BotSpace","CameraPortal":"types/os/portals","id-37622":"CameraPortal","CameraType":"types/os/camera","id-36766":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-39907":"CreatePublicRecordKeyResult","DataActionKinds":"types/permissions","id-262":"DataActionKinds","EaseMode":"types/animation","id-37092":"EaseMode","EaseType":"types/animation","id-37091":"EaseType","EraseDataResult":"types/records/data","id-40434":"EraseDataResult","EraseFileResult":"types/records/files","id-40615":"EraseFileResult","EventActionKinds":"types/permissions","id-264":"EventActionKinds","FileActionKinds":"types/permissions","id-263":"FileActionKinds","Geolocation":"types/os/geolocation","id-37413":"Geolocation","GetCountResult":"types/records/events","id-40937":"GetCountResult","GetDataResult":"types/records/data","id-40420":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-35989":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-36022":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-35998":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-44124":"GrantMarkerPermissionResult","GrantResourcePermissionResult":"types/records/policies","id-44147":"GrantResourcePermissionResult","GrantRoleResult":"types/records/roles","id-44206":"GrantRoleResult","InstActionKinds":"types/permissions","id-267":"InstActionKinds","JoinRoomResult":"types/os/portals","id-35962":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-35971":"LeaveRoomResult","ListDataResult":"types/records/data","id-40450":"ListDataResult","ListStudiosResult":"types/records/studios","id-39951":"ListStudiosResult","MarkerActionKinds":"types/permissions","id-265":"MarkerActionKinds","Mod":"types/core","id-35507":"Mod","PortalType":"types/core","id-38441":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-35821":"PossiblePauseTriggerStates","PublicRecordKeyPolicy":"types/records/key","id-40252":"PublicRecordKeyPolicy","RecordDataResult":"types/records/data","id-40408":"RecordDataResult","RecordFileResult":"types/records/files","id-35931":"RecordFileResult","RecordUserPolicyType":"types/records/extra","id-37923":"RecordUserPolicyType","ResourceKinds":"types/permissions","id-245":"ResourceKinds","RevokeMarkerPermissionResult":"types/records/policies","id-44135":"RevokeMarkerPermissionResult","RevokeResourcePermissionResult":"types/records/policies","id-44158":"RevokeResourcePermissionResult","RevokeRoleResult":"types/records/roles","id-44217":"RevokeRoleResult","RoleActionKinds":"types/permissions","id-266":"RoleActionKinds","SetRoomOptionsResult":"types/os/portals","id-35980":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-36010":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-37022":"ShowInputSuptype","ShowInputType":"types/os/input","id-37021":"ShowInputType","SnapTarget":"types/os/portals","id-37304":"SnapTarget","StudioAssignmentRole":"types/records/studios","id-40215":"StudioAssignmentRole","SubjectType":"types/permissions","id-238":"SubjectType","TagFilter":"types/core","id-35503":"TagFilter","TrackKind":"types/records/rooms","id-38176":"TrackKind","TrackSource":"types/records/rooms","id-38177":"TrackSource","TrackVideoQuality":"types/os/rooms","id-38178":"TrackVideoQuality","UpdateEventRecordResult":"types/records/events","id-40955":"UpdateEventRecordResult","UserPolicy":"types/records/data","id-40535":"UserPolicy","animateTag-byOptions":"actions/os/animations","id-1053":"animateTag-byOptions","getbot-tag":"actions/data","id-718":"getbot-tag","getbots-tag":"actions/data","id-702":"getbots-tag","animateTag-byTag":"actions/os/animations","id-1047":"animateTag-byTag","changeState":"actions/data","id-863":"changeState","create":"actions/data","id-847":"create","destroy":"actions/data","id-851":"destroy","getbot-filters":"actions/data","id-711":"getbot-filters","getbots-filters":"actions/data","id-695":"getbots-filters","priorityShout":"actions/os/event","id-912":"priorityShout","shout":"actions/os/event","id-925":"shout","updateBotLinks":"actions/data","id-885":"updateBotLinks","whisper":"actions/os/event","id-951":"whisper","action.perform":"actions/os/event","id-34999":"action.perform","action.reject":"actions/os/event","id-35003":"action.reject","ai.chat-string":"actions/ai","id-1112":"ai.chat-string","ai.chat-message":"actions/ai","id-1115":"ai.chat-message","ai.chat-messages":"actions/ai","id-1118":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-1131":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-1135":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-1123":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-1127":"ai.generateSkybox-request","ai.hume.getAccessToken":"actions/ai","id-1142":"ai.hume.getAccessToken","ai.stream.chat-string":"actions/ai","id-1147":"ai.stream.chat-string","ai.stream.chat-message":"actions/ai","id-1150":"ai.stream.chat-message","ai.stream.chat-messages":"actions/ai","id-1153":"ai.stream.chat-messages","applyDiffToSnapshot":"actions/data","id-768":"applyDiffToSnapshot","applyMod":"actions/mods","id-837":"applyMod","assert":"actions/debuggers","id-1096":"assert","assertEqual":"actions/debuggers","id-1101":"assertEqual","atPosition":"actions/bot-filters","id-982":"atPosition","byCreator":"actions/bot-filters","id-1003":"byCreator","byID":"actions/bot-filters","id-970":"byID","byMod":"actions/bot-filters","id-974":"byMod","bySpace":"actions/bot-filters","id-999":"bySpace","byTag":"actions/bot-filters","id-965":"byTag","bytes.fromBase64String":"actions/bytes","id-35217":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-35234":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-35225":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-35213":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-35229":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-35221":"bytes.toHexString","clearAnimations":"actions/os/animations","id-1067":"clearAnimations","clearTagMasks":"actions/data","id-791":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-35240":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-35246":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-35277":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-35270":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-35335":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-35330":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-35341":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-35326":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-35322":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-35306":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-35296":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-35301":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-35316":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-35345":"crypto.keypair","crypto.sha256":"actions/crypto","id-35262":"crypto.sha256","crypto.sha512":"actions/crypto","id-35266":"crypto.sha512","crypto.sign":"actions/crypto","id-35349":"crypto.sign","deleteTagMaskText":"actions/data","id-818":"deleteTagMaskText","deleteTagText":"actions/data","id-811":"deleteTagText","diffSnapshots":"actions/data","id-763":"diffSnapshots","either":"actions/bot-filters","id-1007":"either","os.beginAudioRecording":"actions/os/audio","id-35051":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-35058":"experiment.beginRecording","experiment.createStaticHtmlFromBots":"actions/experimental","id-35046":"experiment.createStaticHtmlFromBots","os.endAudioRecording":"actions/os/audio","id-35055":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-35062":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-35036":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-35070":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-35009":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-35014":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-35025":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-35065":"experiment.speakText","getBotLinks":"actions/data","id-881":"getBotLinks","getBotPosition":"actions/data","id-737":"getBotPosition","getBotRotation":"actions/data","id-742":"getBotRotation","getBotTagValues":"actions/data","id-727":"getBotTagValues","getFormattedJSON":"actions/data","id-755":"getFormattedJSON","getID":"actions/data","id-747":"getID","getJSON":"actions/data","id-751":"getJSON","getLink":"actions/data","id-877":"getLink","getMod":"actions/mods","id-732":"getMod","getSnapshot":"actions/data","id-759":"getSnapshot","getTag":"actions/data","id-773":"getTag","inDimension":"actions/bot-filters","id-978":"inDimension","inStack":"actions/bot-filters","id-988":"inStack","insertTagMaskText":"actions/data","id-803":"insertTagMaskText","insertTagText":"actions/data","id-796":"insertTagText","math.abs":"actions/math","id-35087":"math.abs","math.addVectors":"actions/math","id-35157":"math.addVectors","math.areClose":"actions/math","id-35188":"math.areClose","math.avg":"actions/math","id-35079":"math.avg","math.degreesToRadians":"actions/math","id-35113":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-35153":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-35121":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-35095":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-35130":"math.intersectPlane","math.negateVector":"actions/math","id-35167":"math.negateVector","math.normalizeVector":"actions/math","id-35172":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-35117":"math.radiansToDegrees","math.random":"actions/math","id-35108":"math.random","math.randomInt":"actions/math","id-35103":"math.randomInt","math.scaleVector":"actions/math","id-35182":"math.scaleVector","math.setRandomSeed":"actions/math","id-35099":"math.setRandomSeed","math.sqrt":"actions/math","id-35083":"math.sqrt","math.stdDev":"actions/math","id-35091":"math.stdDev","math.subtractVectors":"actions/math","id-35162":"math.subtractVectors","math.sum":"actions/math","id-35075":"math.sum","math.vectorLength":"actions/math","id-35177":"math.vectorLength","neighboring":"actions/bot-filters","id-993":"neighboring","not":"actions/bot-filters","id-1014":"not","os.attachDebugger":"actions/debuggers","id-34955":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-34944":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-34948":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-1217":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-1222":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-34952":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-1244":"showChat-options","showChat-placeholder":"actions/os/input","id-1240":"showChat-placeholder","os.showInput":"actions/os/portals","id-1473":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1543":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1534":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1539":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1530":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-34907":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-1291":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-34857":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1506":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-34837":"os.calculateRayFromCamera","os.calculateScreenCoordinatesFromViewportCoordinates":"actions/os/portals","id-34847":"os.calculateScreenCoordinatesFromViewportCoordinates","os.calculateViewportCoordinatesFromPosition":"actions/os/portals","id-34842":"os.calculateViewportCoordinatesFromPosition","os.calculateViewportCoordinatesFromScreenCoordinates":"actions/os/portals","id-34852":"os.calculateViewportCoordinatesFromScreenCoordinates","os.cancelSound":"actions/os/audio","id-1510":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-1390":"os.capturePhoto","os.capturePortalScreenshot":"actions/os/portals","id-1397":"os.capturePortalScreenshot","os.classifyImages":"actions/os/image-classification","id-1382":"os.classifyImages","os.closeBarcodeScanner":"actions/os/barcodes","id-1364":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1522":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-1379":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-1394":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-1350":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1657":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-34822":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-34809":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-34903":"os.createInitializationUpdate","os.device":"actions/os/system","id-1262":"os.device","os.disableAR":"actions/os/xr","id-1281":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-1306":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-1288":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-1312":"os.disableWakeLock","os.download":"actions/os/files","id-1318":"os.download","os.downloadBots":"actions/os/files","id-1324":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-1329":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-1337":"os.downloadInst","os.enableAR":"actions/os/xr","id-1277":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-1268":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1548":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-1297":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-1284":"os.enableVR","os.eraseData":"actions/os/records","id-34752":"os.eraseData","os.eraseFile-result":"actions/os/records","id-34793":"os.eraseFile-result","os.eraseFile-url":"actions/os/records","id-34797":"os.eraseFile-url","os.eraseManualApprovalData":"actions/os/records","id-34758":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/os/portals","id-1188":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1605":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1561":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1565":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-1444":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-1450":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os/spaces","id-34911":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-34727":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-1463":"os.getDimensionalDepth","os.getFile-result":"actions/os/records","id-34771":"os.getFile-result","os.getFile-url":"actions/os/records","id-34774":"os.getFile-url","os.getFocusPoint":"actions/os/portals","id-1573":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1555":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1598":"os.getInputList","os.getInputState":"actions/os/portals","id-1593":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-34899":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-34733":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1601":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-1453":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-1456":"os.getMiniPortalDimension","os.getPointerDirection":"actions/os/portals","id-1589":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1577":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1581":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-1459":"os.getPortalDimension","os.getPrivateFile-result":"actions/os/records","id-34785":"os.getPrivateFile-result","os.getPrivateFile-url":"actions/os/records","id-34788":"os.getPrivateFile-url","os.getPublicFile-result":"actions/os/records","id-34779":"os.getPublicFile-result","os.getPublicFile-url":"actions/os/records","id-34781":"os.getPublicFile-url","os.getPublicRecordKey":"actions/os/records","id-34654":"os.getPublicRecordKey","os.getRecordsEndpoint":"actions/os/records","id-34819":"os.getRecordsEndpoint","os.getRoomOptions":"actions/os/rooms","id-1623":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1638":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1627":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-34658":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-1315":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-1487":"os.goToDimension","os.goToURL":"actions/os/portals","id-1491":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-34674":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-34694":"os.grantInstRole","os.grantPermission":"actions/os/records","id-34662":"os.grantPermission","os.grantUserRole":"actions/os/records","id-34679":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1514":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-1372":"os.hideBarcode","os.hideChat":"actions/os/input","id-1252":"os.hideChat","os.hideHtml":"actions/os/portals","id-1195":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-1357":"os.hideQRCode","os.hideTips":"actions/os/portals","id-1176":"os.hideTips","os.importAUX":"actions/os/files","id-1428":"os.importAUX","os.inSheet":"actions/os/portals","id-1558":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-1265":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-1440":"os.isInDimension","os.isRecordKey":"actions/os/records","id-34709":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1608":"os.joinRoom","os.ldrawCountTextBuildSteps":"actions/os/ldraw","id-34876":"os.ldrawCountTextBuildSteps","os.leaveRoom":"actions/os/rooms","id-1613":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-34642":"os.listBuiltinTags","os.listData":"actions/os/records","id-34739":"os.listData","os.listDataByMarker":"actions/os/records","id-34745":"os.listDataByMarker","os.listFormAnimations":"actions/os/animations","id-34872":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-34896":"os.listInstUpdates","os.listUserStudios":"actions/os/records","id-34815":"os.listUserStudios","os.loadInst":"actions/os/spaces","id-1420":"os.loadInst","os.log":"actions/os/system","id-1551":"os.log","os.meetCommand":"actions/os/meets","id-34932":"os.meetCommand","os.meetFunction":"actions/os/meets","id-34937":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-34914":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-1360":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1526":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1499":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-1375":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-1386":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-1346":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1495":"os.openURL","os.parseBotsFromData":"actions/os/files","id-1432":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1502":"os.playSound","os.raycast":"actions/os/portals","id-34831":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-34826":"os.raycastFromCamera","os.recordData":"actions/os/records","id-34713":"os.recordData","os.recordEvent":"actions/os/records","id-34803":"os.recordEvent","os.recordFile":"actions/os/records","id-34764":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-34720":"os.recordManualApprovalData","os.registerApp":"actions/os/app","id-1648":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1643":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-34918":"os.remoteCount","os.remotes":"actions/os/remotes","id-34893":"os.remotes","os.replaceDragBot":"actions/os/portals","id-1436":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-34645":"os.reportInst","os.requestAuthBot":"actions/os/records","id-34648":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-34651":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-1185":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-1309":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-34702":"os.revokeInstRole","os.revokePermission":"actions/os/records","id-34668":"os.revokePermission","os.revokeUserRole":"actions/os/records","id-34687":"os.revokeUserRole","os.run":"actions/os/system","id-1255":"os.run","os.setClipboard":"actions/os/clipboard","id-1198":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1618":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1632":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1518":"os.share","os.showAccountInfo":"actions/os/system","id-1271":"os.showAccountInfo","os.showBarcode":"actions/os/barcodes","id-1367":"os.showBarcode","os.showConfirm":"actions/os/portals","id-1483":"os.showConfirm","os.showHtml":"actions/os/portals","id-1191":"os.showHtml","os.showInputForTag":"actions/os/portals","id-1467":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-1180":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-1353":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-1340":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-1343":"os.showUploadFiles","os.sleep":"actions/os/system","id-1160":"os.sleep","os.startFormAnimation":"actions/os/animations","id-34861":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-34867":"os.stopFormAnimation","os.tip":"actions/os/portals","id-1169":"os.tip","os.toast":"actions/os/portals","id-1164":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-34922":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-1424":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1653":"os.unregisterApp","os.version":"actions/os/system","id-1259":"os.version","os.vrSupported":"actions/os/xr","id-1294":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-1401":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-1409":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-1403":"os.instLatency","os.instTimeOffset":"actions/os/time","id-1405":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-1407":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-1399":"os.localTime","remote":"actions/os/event","id-1021":"remote","sendRemoteData":"actions/os/event","id-1033":"sendRemoteData","removeTags":"actions/data","id-826":"removeTags","renameTag":"actions/data","id-831":"renameTag","setTag":"actions/data","id-778":"setTag","setTagMask":"actions/data","id-784":"setTagMask","subtractMods":"actions/mods","id-842":"subtractMods","superShout":"actions/os/event","id-907":"superShout","uuid":"actions/data","id-1044":"uuid","web.get":"actions/web","id-35368":"web.get","web.hook":"actions/web","id-35379":"web.hook","web.post":"actions/web","id-35373":"web.post","configBot":"actions/os/system","id-1107":"configBot"}}');var a=o(1601);o(5058),o(6967);const r={id:"event",title:"Event Actions",sidebar_label:"Events",description:"Event actions are used to send events to bots."},c=void 0,d={id:"actions/os/event",title:"Event Actions",description:"Event actions are used to send events to bots.",source:"@site/docs/actions/os/event.mdx",sourceDirName:"actions/os",slug:"/actions/os/event",permalink:"/actions/os/event",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/os/event.mdx",tags:[],version:"current",frontMatter:{id:"event",title:"Event Actions",sidebar_label:"Events",description:"Event actions are used to send events to bots."},sidebar:"docs",previous:{title:"Clipboard",permalink:"/actions/os/clipboard"},next:{title:"Files",permalink:"/actions/os/files"}},l={},p=[...(0,a.KO)(i)];function m(e){return(0,s.jsx)(a.hl,{doc:i})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m()}},1601:(e,t,o)=>{o.d(t,{hl:()=>F,KO:()=>P});var s=o(79),n=o(5058),i=o(6144),a=o(8405),r=o(1888),c=o(5250);class d extends s.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const o="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw o;console.error(o)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var l=o(1537),p=o(6967),m=o(7544),u=o(3324),g=o(5834),h=o(1623);function y(e){void 0===e&&(e={});const t=e.references;return e=>{(0,g.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,l.Z)("tags/listen")+f(t.slice(1)):e.url=(0,l.Z)(h.L0[t])+f(t)}else if(e.url.startsWith("ref:")){const o=e.url.slice(4),s=t[o];e.url=(0,l.Z)(s)+"#"+o}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,l.Z)("glossary")+"#"+x(t)}else if(e.url.startsWith("page:")){const[t,o]=e.url.slice(5).split("#");e.url=(0,l.Z)(t)+"#"+o}}))}}function f(e){return"#"+x(e)}function x(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function b(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const k={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",k);const A=new Map([[k.Property,["type"]],["reflection",["declaration"]],[k.TypeLiteral,["children","signatures"]],[k.CallSignature,["parameters","comment","type"]]]);function R(e,t,o){void 0===o&&(o=null),function(e,t,o){var s;void 0===o&&(o=null);let n=A.get(null!=(s=e.kind)?s:e.type)||[];for(let i of n){let s=e[i];if(Array.isArray(s))for(let e of s)e&&t(e,o,i);else s&&t(s,o,i)}}(e,((e,o,s)=>{t(e,o,s),R(e,t,e)}))}function S(e,t){let o=[];return t(e)&&o.push(e),R(e,((e,s,n)=>{t(e,s,n)&&o.push(e)})),o}const v=["first","second","third","fourth","fifth"];function T(e,t){return e.name+"-"+t.name}function w(e,t){const o=T(e,t);let s;var n;return s=t.kind===k.Constructor?$(t.signatures[0],be(t)):t.kind===k.Method?$(t.signatures[0]):t.kind===k.Accessor?(n=t).name+": "+de(n.getSignature.type):ne(t),s="<span>"+s+"</span>",{value:s,id:o,level:3}}function C(e){let t=[],{properties:o,constructors:s,methods:n}=function(e){let t=[],o=[],s=[];if(!e)return{properties:t,constructors:o,methods:s};for(let n of e)n.flags.isPrivate||(n.kind===k.Property||n.kind===k.Accessor?t.push(n):n.kind===k.Constructor?o.push(n):n.kind===k.Method&&s.push(n));return{properties:t,constructors:o,methods:s}}(e.children);return o.length>0&&t.push(...o.map((t=>w(e,t)))),s.length>0&&t.push(...s.map((t=>w(e,t)))),n.length>0&&t.push(...n.map((t=>w(e,t)))),t}function P(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let o of e.contents)if(o.reflection.kind===k.Interface||o.reflection.kind===k.Class){const e=be(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2}),o.reflection.kind===k.Class&&t.push(...C(o.reflection))}else if(o.reflection.kind===k.CallSignature){const e=be(o.reflection),s=ke(o.reflection);t.push({value:"<span>"+$(o.reflection,e)+"</span>",id:s,level:2})}else if(o.reflection.kind===k.TypeAlias){const e=be(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}else if(o.reflection.kind===k.GetSignature||o.reflection.kind===k.SetSignature){const e=be(o.reflection),s=ke(o.reflection);t.push({value:"<code>"+$(o.reflection,e)+"</code>",id:s,level:2})}else{const e=be(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}return t}function F(e){let{doc:t}=e;const o=t.contents,s=t.references;return(0,c.jsx)("ul",{className:"api api-list",children:o.map((e=>(0,c.jsx)("li",{className:"api-member-item",children:(0,c.jsx)(j,{reflection:e.reflection,references:s})},e.id)))})}function j(e){let{reflection:t,references:o}=e;return t.kind===k.Interface||t.kind===k.Class?(0,c.jsx)(B,{reflection:t,references:o}):t.kind===k.CallSignature||t.kind===k.GetSignature||t.kind===k.SetSignature?(0,c.jsx)(N,{reflection:t,references:o}):t.kind===k.TypeAlias?(0,c.jsx)(O,{reflection:t,references:o}):(0,c.jsx)(G,{reflection:t,references:o})}function O(e){let{reflection:t,references:o}=e;const s=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(n.Z,{as:"h2",id:i,children:s}),(0,c.jsx)(U,{reflection:t,references:o}),(0,c.jsx)(D,{reflection:t,name:s,references:o}),(0,c.jsx)(te,{member:t})]})}function D(e){let{reflection:t,name:o,references:s}=e,n="";return"union"===t.type.type&&(n=(0,c.jsx)(I,{type:t.type,name:o,references:s})),n}function I(e){let{type:t,name:o,references:s}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",o," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(L,{type:e,references:s},t)))})]})}function L(e){let{type:t,references:o}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:o})})})}function B(e){let{reflection:t,references:o}=e;const s=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(n.Z,{as:"h2",id:i,children:s}),(0,c.jsx)(E,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function G(e){let{reflection:t,references:o}=e;const s=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(n.Z,{as:"h2",id:i,children:s}),(0,c.jsx)(H,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function N(e){let{reflection:t,references:o}=e;const s=be(t),n=ke(t);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:t,sig:t,name:s,link:n,references:o})})}function E(e){var t;const o=e.reflection;if(!o)throw new Error("Unable to find "+e.name+"!");const s=function(e){return(0,r.sortBy)(e,(e=>e.kind===k.Property||e.kind===k.Accessor?0:e.kind===k.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=o.children)?t:[]);return(0,c.jsx)(d,{reflection:o,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(U,{reflection:o,references:e.references}),(0,c.jsx)(n.Z,{as:"h3",id:o.name+"-properties",children:"Members"}),(0,c.jsx)("div",{children:(0,c.jsxs)("ul",{className:"class-members-list",children:[o.indexSignature?(0,c.jsx)(M,{reflection:o,index:o.indexSignature,references:e.references}):"",o.references?(0,c.jsx)(W,{prop:o,references:e.references}):"",s.map((t=>(0,c.jsx)(V,{member:t,link:T(o,t),references:e.references},t.name)))]})})]})})}function M(e){let{reflection:t,index:o,references:s}=e;const i=o.parameters[0];return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(n.Z,{as:"h4",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(U,{reflection:o,references:s}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",i.name,": ",(0,c.jsx)(ce,{type:i.type,references:s}),"]: ",(0,c.jsx)(ce,{type:o.type,references:s})]})}),(0,c.jsx)(te,{member:o})]})}function U(e){let{reflection:t,references:o}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(z,{comment:t.comment,references:o})})}function V(e){let t;return t=e.member.kind===k.Property?function(e){let t,o=e.member,s="";o.references?(s=(0,c.jsx)(q,{prop:o,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:o.typeReference})):"reflection"===o.type.type&&o.typeText&&o.typeReference?(t=(0,c.jsx)(c.Fragment,{children:o.typeReference}),s=(0,c.jsx)(i.Z,{language:"typescript",children:o.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!s&&o.typeText&&o.typeReference&&(s=(0,c.jsx)(i.Z,{language:"typescript",children:o.typeText}));const a=be(o);ke(o);return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(n.Z,{as:"h4",id:e.link,children:[(0,c.jsxs)("span",{className:"class-member-name",children:[a,e.member.flags.isOptional?(0,c.jsx)("span",{className:"class-member-optional",children:"?"}):""]})," ",(0,c.jsx)("span",{className:"class-member-type",children:t})]}),(0,c.jsx)(U,{reflection:e.member,references:e.references}),s]})}(e):e.member.kind===k.Constructor?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Method?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Accessor?function(e){var t;return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(n.Z,{as:"h4",id:e.link,children:[(0,c.jsx)("span",{className:"class-member-name",children:e.member.name})," ",(0,c.jsx)("span",{className:"class-member-type",children:(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})})]}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsxs)(d,{reflection:e.member,children:[(0,c.jsx)("span",{role:"separator",className:"class-member-separator"}),(0,c.jsx)("li",{className:"class-member-item",children:t})]})}function W(e){let{prop:t,references:o}=e;const s=ke(t);return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(n.Z,{as:"h4",id:s+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(a.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})]})}function q(e){let{prop:t,references:o}=e;return(0,c.jsxs)(a.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})}function H(e){const t=e.reflection,o=(t.type.declaration,Ce(t));return(0,c.jsx)(d,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(U,{reflection:t,references:e.references}),o.map((t=>(0,c.jsx)(K,{group:t,references:e.references},t.group)))]})})}function K(e){let{group:t,references:o}=e;const s=t.children,i=Te(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(n.Z,{as:"h3",id:t.group,children:i}),s.map((e=>(0,c.jsx)(_,{namespace:e.namespace,name:e.name,property:e.child,link:T(e.reflection,e.child),references:o},e.child.id)))]})}function _(e){let t;if(pe(e.property)){var o;const s=e.namespace?e.namespace+"."+e.name:e.name,n=e.property.type.declaration;t=J({name:s,func:e.property,sig:null!=(o=Re(n.signatures))?o:n.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){const o=e.namespace?e.namespace+"."+e.name:e.name,s=Se(e.property);t=J({name:o,func:e.property,sig:s,link:e.link,references:e.references})}else t=he(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===k.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(n.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(U,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(d,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function J(e){let{func:t,sig:o,link:s,name:i,references:a}=e;const r=o.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(n.Z,{as:"h4",id:s,children:(0,c.jsx)(X,{func:t,sig:o,name:i,references:a})}),(0,c.jsx)(Z,{sig:o,references:a}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(ee,{param:e,index:t,references:a},e.name)))}):"",(0,c.jsx)(te,{member:o})]})}function Z(e){let{sig:t,references:o}=e;return(0,c.jsx)(z,{comment:t.comment,references:o})}function z(e){let{comment:t,references:o}=e;return(0,c.jsx)(Q,{references:o,children:Y(t)})}function Q(e){let{children:t,remarkPlugins:o,rehypePlugins:s,references:n}=e;return(0,c.jsx)(m.U,{remarkPlugins:[[y,{references:n}],...o||[]],rehypePlugins:[u.Z,...s||[]],children:t})}function Y(e){let t="";if(e&&e.summary)for(let o of e.summary)t+=o.text;return t}function X(e){let{func:t,sig:o,name:s,references:n}=e;const i=o.parameters||[];let a="";return t.kind!==k.GetSignature&&(a=(0,c.jsxs)(c.Fragment,{children:["(",i.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:n})]},e.name))),")"]})),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("span",{className:"function-member-name",children:[(t.flags.isStatic?"static ":"")+(s||o.name),a]}),": ",(0,c.jsx)("span",{className:"function-member-type",children:(0,c.jsx)(ce,{type:o.type,references:n})})]})}function $(e,t){void 0===t&&(t=e.name);const o=e.parameters||[];let s="";return e.kind!==k.GetSignature&&(s="("+o.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+s+": "+de(e.type)}function ee(e){let t,{param:o,index:s,references:n}=e;return t=o.flags.isRest&&o.type.elementType?0===s?(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:n})," and are ",(0,c.jsx)(ie,{param:o,isRest:!0,references:n})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:n})," and are ",(0,c.jsx)(ie,{param:o,isRest:!0,references:n})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("em",{children:[se(s)," parameter"]})," is",o.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:o.type,references:n})," and ",(0,c.jsx)(ie,{param:o,references:n})]}),t}function te(e){var t;let{member:o}=e;if(null==(t=o.comment)||!t.blockTags)return"";const s=o.comment.blockTags.filter((e=>"@example"===e.tag));return s.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h5",{className:"examples-heading",children:"Examples"}),s.map(((e,t)=>(0,c.jsx)(oe,{example:e},t)))]}):""}function oe(e){let{example:t}=e;const o=t.content.map((e=>e.text)).join(""),s=o.indexOf("\n"),n=o.indexOf("\n",s+1);let a="typescript";s>3&&(a=o.substring(3,s).trim());const r=o.lastIndexOf("```"),d=o.substring(s,n),l=o.substring(n,r);return(0,c.jsx)(i.Z,{language:a,title:d.trim(),children:l.trim()})}function se(e){return v[e]}function ne(e,t){let o;return void 0===t&&(t=e.name),o=e.typeReference?e.typeReference:de(e.type),t+(e.flags.isOptional?"?":"")+": "+o}function ie(e){let{param:t,isRest:o,references:s}=e;return(0,c.jsx)(Q,{remarkPlugins:[b],references:s,children:ae(t,o)})}function ae(e,t){let o=Y(e.comment);return o?(o=o.slice(0,1).toLowerCase()+o.slice(1),o.startsWith("the")&&!t&&(o="is "+o),o):""}const re=new Map([["ArrayBuffer","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer"],["Blob","https://developer.mozilla.org/en-US/docs/Web/API/Blob"],["Uint8Array","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"],["RegExp","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"],["Function","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"],["Error","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"]]);function ce(e){let{type:t,references:o,isInUnionOrArray:n}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var i,a,r,d,m,u;if(t.name===(null==(i=t.target)?void 0:i.qualifiedName)&&re.has(t.name)){const e=re.get(t.name);return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)("a",{className:"type-link",href:e,children:t.name})})}if("Promise"===t.name&&"Promise"===(null==(a=t.target)?void 0:a.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Partial"===t.name&&"Partial"===(null==(r=t.target)?void 0:r.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Omit"===t.name&&"Omit"===(null==(d=t.target)?void 0:d.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys",children:"Omit"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Map"===t.name&&"Map"===(null==(m=t.target)?void 0:m.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"Map"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Set"===t.name&&"Set"===(null==(u=t.target)?void 0:u.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",children:"Set"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});let e="#"+t.name;const s=t.id?null==o?void 0:o["id-"+t.id]:null;if(s){const t=null==o?void 0:o[s];t&&(e=(0,l.Z)(t)+"#"+s)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry. ");return(0,c.jsx)(p.Z,{className:"type-link",href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(s.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:o,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===k.TypeLiteral&&e.signatures&&!e.children){var g;const t=null!=(g=Re(e.signatures))?g:e.signatures[0],s=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[n?"(":"","(",s.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:o})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:o}),n?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})))}if("tuple"===t.type){const e=t.elements.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?", ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})));return(0,c.jsxs)("span",{children:["[",e,"]"]})}return"typeOperator"===t.type?(0,c.jsxs)("span",{children:[t.operator," ",(0,c.jsx)(ce,{type:t.target,references:o,isInUnionOrArray:!0})]}):""+JSON.stringify(t)}function de(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+de(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>de(e))).join(" | ")+")":"array"===e.type?de(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function le(e){return pe(e)||ue(e)}function pe(e){return e&&me(e.type)}function me(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===k.CallSignature))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>me(e)))}function ge(e){return e&&e.kind===k.CallSignature}function he(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===k.TypeLiteral&&e.type.declaration.children}function ye(e,t){var o;const s=null==(o=e.comment)||null==(o=o.blockTags)?void 0:o.find((e=>e.tag===t));return s?s.content.map((e=>e.text)).join(""):null}function fe(e){if(e)for(let t of e){const e=ye(t,"@docname");if(e)return e.trim()}return null}function xe(e){if(pe(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=Ae(null==o?void 0:o.signatures);if(s)return s}else if(ue(e)){const t=e.type.types;for(let e of t)if(me(e)){let t=Ae(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=Ae([e]);if(t)return t}return"99-default"}function be(e){if(e.kind===k.Method){let t=fe(e.signatures);if(t)return t}else if(pe(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=fe(null==o?void 0:o.signatures);if(s)return s}else if(ue(e)){const t=e.type.types;for(let e of t)if(me(e)){let t=fe(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=fe([e]);if(t)return t}return ye(o=e,"@docname")||o.name;var o}function ke(e){const t=ye(e,"@docid");if(t)return t;const o=function(e,t){let o=[];return R(e,((e,s,n)=>{"comment"===n&&(console.log(e),o.push(...e.blockTags.filter((e=>e.tag===t))))})),o}(e,"@docid");return o.length>0?o[0].text.trim():be(e)}function Ae(e){if(e)for(let t of e){const e=ye(t,"@docgroup");if(e)return e.trim()}return null}function Re(e){for(let t of e){if(ye(t,"@docgroup"))return t}return null}function Se(e){const t=e.type.types;let o=null;for(let s of t)if(me(s)){const e=s.declaration.signatures;o||(o=e[0]);let t=Re(e);if(t)return t}return o}function ve(e){const t=(o=e,s=k.CallSignature,S(o,(e=>e.kind===s)));var o,s;for(let n of t){const e=ye(n,"@docgrouptitle");if(e)return e.trim()}return null}function Te(e){for(let t of e.children){let e=ve(t.child);if(e)return e}return e.group}function we(e){if(e.kind===k.CallSignature)return ge(e)||le(e)||he(e)?[{group:xe(e),name:be(e),reflection:e,child:e}]:[];if(e.kind===k.TypeAlias||e.kind===k.GetSignature||e.kind===k.SetSignature)return[];const t=e.type.declaration.children.filter((e=>ge(e)||le(e)||he(e))),o=null!==ye(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>le(t)?{group:xe(t),name:be(t),namespace:o,reflection:e,child:t}:we(t)))}function Ce(e){const t=we(e),o=(0,r.groupBy)(t,(e=>e.group));let s=[];for(let n in o)s.push({group:n,children:o[n]});return s=(0,r.sortBy)(s,(e=>e.group)),s}}}]);