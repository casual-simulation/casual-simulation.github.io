"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[3321],{4629:function(e,t,n){n.d(t,{hl:function(){return N},zl:function(){return V},KO:function(){return C},HE:function(){return w},Op:function(){return S}});var o=n(7639),i=n(7294),a=n(2503),r=n(814),s=n(4673),c=n(6486),l=n(1073),d=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={hasError:!1},n}(0,l.Z)(t,e),t.getDerivedStateFromError=function(e){return{hasError:!0,error:e}};var n=t.prototype;return n.componentDidCatch=function(e,t){var n="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw n;console.error(n)},n.render=function(){return this.state.hasError?i.createElement("h1",null,"[",this.props.reflection.name,"] ",this.state.error):this.props.children},t}(i.Component),m=n(4996),p=n(9960),u=n(7120),g=n(6388),h=n(1169);function y(e){void 0===e&&(e={});var t=e.references;return function(e){(0,h.Vn)(e,"link",(function(e){if(e.url.startsWith("tags:")){var n=e.url.slice("tags:".length);n.startsWith("@")?e.url=(0,m.Z)("listen-tags")+f(n.slice(1)):e.url=(0,m.Z)("tags")+f(n)}else if(e.url.startsWith("ref:")){var o=e.url.slice("ref:".length),i=t[o];e.url=(0,m.Z)(i)+"#"+o}else if(e.url.startsWith("glossary:")){var a=e.url.slice("glossary:".length);e.url=(0,m.Z)("glossary")+"#"+x(a)}else if(e.url.startsWith("page:")){var r=e.url.slice("page:".length).split("#"),s=r[0],c=r[1];e.url=(0,m.Z)(s)+"#"+c}}))}}function f(e){return"#"+x(e)}function x(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function b(e){return void 0===e&&(e={}),function(e){e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}var v={Property:["type"],reflection:["declaration"],"Type literal":["children","signatures"],"Call signature":["parameters","comment","type"]};function R(e,t,n){void 0===n&&(n=null),function(e,t,n){var i;void 0===n&&(n=null);for(var a,r=v[null!=(i=e.kindString)?i:e.type]||[],s=(0,o.Z)(r);!(a=s()).done;){var c=a.value,l=e[c];if(Array.isArray(l))for(var d,m=(0,o.Z)(l);!(d=m()).done;){var p=d.value;p&&t(p,n,c)}else l&&t(l,n,c)}}(e,(function(e,n,o){t(e,n,o),R(e,t,e)}))}function k(e,t){var n=[];return t(e)&&n.push(e),R(e,(function(e,o,i){t(e,o,i)&&n.push(e)})),n}function S(e){e}var T=["first","second","third","fourth","fifth"];function E(e,t){return e.name+"-"+t.name}function P(e,t){var n,o=E(e,t);return{value:"<code>"+("Constructor"===t.kindString||"Method"===t.kindString?te(t.signatures[0]):"Accessor"===t.kindString?(n=t).name+": "+ce(n.getSignature[0].type):ae(t))+"</code>",id:o,level:3}}function w(e){var t=[],n=function(e){var t=[],n=[],i=[];if(!e)return{properties:t,constructors:n,methods:i};for(var a,r=(0,o.Z)(e);!(a=r()).done;){var s=a.value;s.flags.isPrivate||("Property"===s.kindString||"Accessor"===s.kindString?t.push(s):"Constructor"===s.kindString?n.push(s):"Method"===s.kindString&&i.push(s))}return{properties:t,constructors:n,methods:i}}(e.children),i=n.properties,a=n.constructors,r=n.methods;return i.length>0&&t.push.apply(t,i.map((function(t){return P(e,t)}))),a.length>0&&t.push.apply(t,a.map((function(t){return P(e,t)}))),r.length>0&&t.push.apply(t,r.map((function(t){return P(e,t)}))),t}function O(e){for(var t,n=[],i=Pe(e),a=(0,o.Z)(i);!(t=a()).done;){var r=t.value,s=Te(r);n.push({value:s,id:r.group,level:2}),n.push.apply(n,r.children.map((function(e){return A(e)})))}return n}function A(e){var t,n=e.reflection,o=e.child,i=(e.group,e.name),a=e.namespace,r=a?a+"."+i:i;if(de(o)){var s,c=o.type.declaration.signatures;t=te(null!=(s=Re(c))?s:c[0],r)}else if(pe(o)){t=te(ke(o),r)}else t=ae(o,r);return{value:t="<code>"+t+"</code>",id:n.name+"-"+o.name,level:3}}function C(e){for(var t,n=[{value:e.pageTitle,id:"",level:2}],i=(0,o.Z)(e.contents);!(t=i()).done;){var a=t.value;if("Interface"===a.reflection.kindString||"Class"===a.reflection.kindString){var r=xe(a.reflection),s=be(a.reflection);n.push({value:r,id:s,level:2}),n.push.apply(n,w(a.reflection))}else if("Call signature"===a.reflection.kindString){var c=xe(a.reflection),l=be(a.reflection);n.push({value:"<code>"+te(a.reflection,c)+"</code>",id:l,level:3})}else if("Type alias"===a.reflection.kindString){var d=xe(a.reflection),m=be(a.reflection);n.push({value:d,id:m,level:2})}else if("Get signature"===a.reflection.kindString||"Set signature"===a.reflection.kindString){var p=xe(a.reflection),u=be(a.reflection);n.push({value:"<code>"+te(a.reflection,p)+"</code>",id:u,level:3})}else{var g=xe(a.reflection),h=be(a.reflection);n.push({value:g,id:h,level:2}),n.push.apply(n,O(a.reflection))}}return n}function N(e){var t=e.doc,n=t.contents,o=t.references;return i.createElement("div",{className:"api"},n.map((function(e){return i.createElement(D,{key:e.id,reflection:e.reflection,references:o})})))}function D(e){var t=e.reflection,n=e.references;return"Interface"===t.kindString||"Class"===t.kindString?i.createElement(M,{reflection:t,references:n}):"Call signature"===t.kindString||"Get signature"===t.kindString||"Set signature"===t.kindString?i.createElement(U,{reflection:t,references:n}):"Type alias"===t.kindString?i.createElement(F,{reflection:t,references:n}):i.createElement(L,{reflection:t,references:n})}function F(e){var t=e.reflection,n=e.references,o=xe(t),r=be(t);return i.createElement("div",null,i.createElement(a.Z,{as:"h2",id:r},o),i.createElement(q,{reflection:t,references:n}),i.createElement(I,{reflection:t,name:o,references:n}),i.createElement(oe,{member:t}))}function I(e){var t=e.reflection,n=e.name,o=e.references,a="";return"union"===t.type.type&&(a=i.createElement(G,{type:t.type,name:n,references:o})),a}function G(e){var t=e.type,n=e.name,o=e.references;return i.createElement("div",null,i.createElement("p",null,"A ",n," can be one of the following values:"),i.createElement("ul",null,t.types.map((function(e,t){return i.createElement(B,{key:t,type:e,references:o})}))))}function B(e){var t=e.type,n=e.references;return i.createElement("li",null,i.createElement("code",null,i.createElement(se,{type:t,references:n})))}function M(e){var t=e.reflection,n=e.references,o=xe(t),r=be(t);return i.createElement("div",null,i.createElement(a.Z,{as:"h2",id:r},o),i.createElement(V,{reflection:t,references:n}),i.createElement(oe,{member:t}))}function L(e){var t=e.reflection,n=e.references,o=xe(t),r=be(t);return i.createElement("div",null,i.createElement(a.Z,{as:"h2",id:r},o),i.createElement(J,{reflection:t,references:n}),i.createElement(oe,{member:t}))}function U(e){var t=e.reflection,n=e.references,o=xe(t),a=be(t);return i.createElement("div",null,i.createElement(Q,{func:t,sig:t,name:o,link:a,references:n}))}function V(e){var t,n=e.reflection;if(!n)throw new Error("Unable to find "+e.name+"!");var o=function(e){return(0,c.sortBy)(e,(function(e){return"Property"===e.kindString||"Accessor"===e.kindString?0:"Constructor"===e.kindString?1:2})).filter((function(e){return!e.flags.isPrivate}))}(null!=(t=n.children)?t:[]);return i.createElement(d,{reflection:n,root:!0},i.createElement("div",{className:"api"},i.createElement(q,{reflection:n,references:e.references}),n.indexSignature?i.createElement(Z,{reflection:n,index:n.indexSignature,references:e.references}):"",n.references?i.createElement(_,{prop:n,references:e.references}):"",o.map((function(t){return i.createElement(W,{key:t.name,member:t,link:E(n,t),references:e.references})}))))}function Z(e){var t=e.reflection,n=e.index,o=e.references,r=n.parameters[0];return i.createElement("div",null,i.createElement(a.Z,{as:"h3",id:t.name+"-_index"},"Index Signature"),i.createElement(q,{reflection:n,references:o}),i.createElement("pre",null,i.createElement("code",null,"[",r.name,": ",i.createElement(se,{type:r.type,references:o}),"]: ",i.createElement(se,{type:n.type,references:o}))),i.createElement(oe,{member:n}))}function q(e){var t=e.reflection,n=e.references;return i.createElement("div",null,i.createElement(H,{comment:t.comment,references:n}))}function W(e){var t;return t="Property"===e.member.kindString?function(e){var t,n=e.member,o="";n.references?(o=i.createElement(z,{prop:n,references:e.references}),t=i.createElement(i.Fragment,null,n.typeReference)):"reflection"===n.type.type&&n.typeText&&n.typeReference?(t=i.createElement(i.Fragment,null,n.typeReference),o=i.createElement(r.Z,{language:"typescript"},n.typeText)):t=i.createElement(se,{type:e.member.type,references:e.references});!o&&n.typeText&&n.typeReference&&(o=i.createElement(r.Z,{language:"typescript"},n.typeText));var s=xe(n);be(n);return i.createElement("div",null,i.createElement(a.Z,{as:"h3",id:e.link},i.createElement("code",null,s,e.member.flags.isOptional?"?":"",": ",t)),i.createElement(q,{reflection:e.member,references:e.references}),o)}(e):"Constructor"===e.member.kindString?function(e){var t=xe(e.member);return i.createElement("div",null,i.createElement(Q,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references}))}(e):"Method"===e.member.kindString?function(e){var t=xe(e.member);return i.createElement("div",null,i.createElement(Q,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references}))}(e):"Accessor"===e.member.kindString?function(e){var t;return i.createElement("div",null,i.createElement(a.Z,{as:"h3",id:e.link},i.createElement("code",null,e.member.name,": ",i.createElement(se,{type:e.member.getSignature[0].type,references:e.references}))),i.createElement("p",null,null==(t=e.member.getSignature[0].comment)?void 0:t.shortText))}(e):"Not found "+e.member.kindString,i.createElement(d,{reflection:e.member},i.createElement("div",null,t))}function _(e){var t=e.prop,n=e.references,o=be(t);return i.createElement("div",null,i.createElement(a.Z,{as:"h3",id:o+"-extra-functions"},"Extra Functions"),i.createElement("p",null,"The extra functions that are available on this type."),i.createElement(s.Z,null,i.createElement("p",null,"See the following functions for more information:"),i.createElement($,{children:t.references,references:n})))}function z(e){var t=e.prop,n=e.references;return i.createElement(s.Z,null,i.createElement("p",null,"See the following functions for more information:"),i.createElement($,{children:t.references,references:n}))}function J(e){var t=e.reflection,n=(t.type.declaration,Pe(t));return console.log(n),i.createElement(d,{reflection:t,root:!0},i.createElement("div",{className:"api"},i.createElement(q,{reflection:t,references:e.references}),n.map((function(t){return i.createElement(K,{key:t.group,group:t,references:e.references})}))))}function K(e){var t=e.group,n=e.references,o=t.children,r=Te(t);return i.createElement("div",null,i.createElement(a.Z,{as:"h3",id:t.group},r),o.map((function(e){return i.createElement(j,{key:e.child.id,namespace:e.namespace,name:e.name,property:e.child,link:E(e.reflection,e.child),references:n})})))}function j(e){var t;if(de(e.property)){var n,o=e.namespace?e.namespace+"."+e.name:e.name,r=e.property.type.declaration;t=Q({name:o,func:e.property,sig:null!=(n=Re(r.signatures))?n:r.signatures[0],link:e.link,references:e.references})}else if(pe(e.property)){var s=e.namespace?e.namespace+"."+e.name:e.name,c=ke(e.property);console.log(s,c,e.property),t=Q({name:s,func:e.property,sig:c,link:e.link,references:e.references})}else t=ge(e.property)?i.createElement(i.Fragment,null,"This is really fun! ",e.property.name):"Property"===e.property.kindString?function(e){return i.createElement("div",null,i.createElement(a.Z,{as:"h3",id:e.link},i.createElement("code",null,e.property.name,": ",i.createElement(se,{type:e.property.type,references:e.references}))),i.createElement(q,{reflection:e.property,references:e.references}))}(e):"Not found "+e.property.kindString;return i.createElement(d,{reflection:e.property},i.createElement("div",null,t))}function Q(e){var t=e.func,n=e.sig,o=e.link,r=e.name,s=e.references;n||console.log(r,t);var c=n.parameters||[];return i.createElement("div",null,i.createElement(a.Z,{as:"h3",id:o},i.createElement(ee,{func:t,sig:n,name:r,references:s})),i.createElement(X,{sig:n,references:s}),c.length>0?i.createElement("div",null,c.map((function(e,t){return i.createElement(ne,{key:e.name,param:e,index:t,references:s})}))):"",i.createElement(oe,{member:n}))}function X(e){var t=e.sig,n=e.references;return i.createElement(H,{comment:t.comment,references:n})}function H(e){var t=e.comment,n=e.references;return i.createElement($,{references:n},Y(t))}function $(e){var t=e.children,n=e.remarkPlugins,o=e.rehypePlugins,a=e.references;return i.createElement(u.D,{remarkPlugins:[[y,{references:a}]].concat(n||[]),rehypePlugins:[g.Z].concat(o||[])},t)}function Y(e){var t="";return e&&(t+=e.shortText,e.text&&(t+="\n\n"+e.text)),t}function ee(e){var t=e.func,n=e.sig,o=e.name,a=e.references,r=n.parameters||[],s="";return"Get signature"!==t.kindString&&(s=i.createElement(i.Fragment,null,"(",r.map((function(e,t){return i.createElement("span",{key:e.name},t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",i.createElement(se,{type:e.type,references:a}))})),")")),i.createElement("code",null,(t.flags.isStatic?"static ":"")+(o||n.name),s,": ",i.createElement(se,{type:n.type,references:a}))}function te(e,t){void 0===t&&(t=e.name);var n=e.parameters||[],o="";return"Get signature"!==e.kindString&&(o="("+n.map((function(e,t){return(e.flags.isRest?"...":"")+e.name})).join(", ")+")"),""+t+o+": "+ce(e.type)}function ne(e){var t,n=e.param,o=e.index,a=e.references;return t=n.flags.isRest&&n.type.elementType?0===o?i.createElement("p",null,i.createElement("strong",null,"Each parameter")," is a ",i.createElement(se,{type:n.type.elementType,references:a})," and are ",i.createElement(re,{param:n,isRest:!0,references:a})):i.createElement("p",null,i.createElement("strong",null,"Each other parameter")," is a ",i.createElement(se,{type:n.type.elementType,references:a})," and are ",i.createElement(re,{param:n,isRest:!0,references:a})):i.createElement("p",null,"The ",i.createElement("strong",null,function(e){return T[e]}(o)," parameter")," is",n.flags.isOptional?" optional and is":""," a ",i.createElement(se,{type:n.type,references:a})," and ",i.createElement(re,{param:n,references:a})),t}function oe(e){var t,n=e.member;if(null==(t=n.comment)||!t.tags)return"";var o=n.comment.tags.filter((function(e){return"example"===e.tag}));return o.length>0?i.createElement("div",null,i.createElement("h4",null,"Examples"),o.map((function(e,t){return i.createElement(ie,{key:t,example:e})}))):""}function ie(e){var t=e.example.text,n=t.indexOf("\n"),o=t.substring(0,n),a=t.substring(n+1);return i.createElement(r.Z,{language:"typescript",title:o.trim()},a.trim())}function ae(e,t){var n;return void 0===t&&(t=e.name),n=e.typeReference?e.typeReference:ce(e.type),t+(e.flags.isOptional?"?":"")+": "+n}function re(e){var t=e.param,n=e.isRest,o=e.references;return i.createElement($,{remarkPlugins:[b],references:o},function(e,t){var n=Y(e.comment);if(!n)return"";(n=n.slice(0,1).toLowerCase()+n.slice(1)).startsWith("the")&&!t&&(n="is "+n);return n}(t,n))}function se(e){var t=e.type,n=e.references,o=e.isInUnionOrArray;if("intrinsic"===t.type)return i.createElement("span",null,t.name);if(t.name){if("Promise"===t.name&&"Promise"===t.qualifiedName&&t.typeArguments&&1===t.typeArguments.length)return i.createElement(i.Fragment,null,"Promise<",i.createElement(se,{type:t.typeArguments[0],references:n}),">");if("Partial"===t.name&&"Partial"===t.qualifiedName&&t.typeArguments&&1===t.typeArguments.length)return i.createElement(i.Fragment,null,i.createElement("a",{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"},"Partial"),"<",i.createElement(se,{type:t.typeArguments[0],references:n}),">");var a="#"+t.name,r=t.id?null==n?void 0:n["id-"+t.id]:null;if(r){var s=null==n?void 0:n[r];s&&(a=(0,m.Z)(s)+"#"+r)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry");return i.createElement(p.Z,{href:a},t.name)}if("union"===t.type)return i.createElement("span",null,"(",t.types.map((function(e,t){return i.createElement(i.Fragment,{key:t},t>0?" | ":"",i.createElement(se,{type:e,references:n,isInUnionOrArray:!0}))})),")");if("array"===t.type)return i.createElement(i.Fragment,null,i.createElement(se,{type:t.elementType,references:n,isInUnionOrArray:!0}),"[]");if("literal"===t.type)return"string"==typeof t.value?i.createElement("span",null,'"',t.value,'"'):"number"==typeof t.value?i.createElement("span",null,t.value):"boolean"==typeof t.value?i.createElement("span",null,t.value?"true":"false"):void 0===t.value?i.createElement("span",null,"undefined"):null===t.value?i.createElement("span",null,"null"):""+JSON.stringify(t);if("reflection"===t.type){var c=t.declaration;if("Type literal"===c.kindString&&c.signatures&&!c.children){var l,d=null!=(l=Re(c.signatures))?l:c.signatures[0],u=d.parameters||[];return i.createElement(i.Fragment,null,i.createElement("span",null,o?"(":"","(",u.map((function(e,t){return i.createElement("span",{key:t},t>0?",":"",e.name,": ",i.createElement(se,{type:e.type,references:n}))})),") => ",i.createElement(se,{type:d.type,references:n}),o?")":""))}return"object"}return"intersection"===t.type?t.types.map((function(e,t){return i.createElement(i.Fragment,null,t>0?" & ":"",i.createElement(se,{type:e,references:n,isInUnionOrArray:!0}))})):""+JSON.stringify(t)}function ce(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+ce(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((function(e){return ce(e)})).join(" | ")+")":"array"===e.type?ce(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function le(e){return de(e)||pe(e)}function de(e){return e&&me(e.type)}function me(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((function(e){return"Call signature"===e.kindString}))}function pe(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((function(e){return me(e)}))}function ue(e){return e&&"Call signature"===e.kindString}function ge(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&"Type literal"===e.type.declaration.kindString&&e.type.declaration.children}function he(e,t){var n,o,i=null==(n=e.comment)||null==(o=n.tags)?void 0:o.find((function(e){return e.tag===t}));return i?i.text.trim():null}function ye(e){if(e)for(var t,n=(0,o.Z)(e);!(t=n()).done;){var i=he(t.value,"docname");if(i)return i.trim()}return null}function fe(e){if(de(e)){var t,n=null==e||null==(t=e.type)?void 0:t.declaration,i=ve(null==n?void 0:n.signatures);if(i)return i}else if(pe(e))for(var a,r=e.type.types,s=(0,o.Z)(r);!(a=s()).done;){var c=a.value;if(me(c)){var l=ve(c.declaration.signatures);if(l)return l}}else if(ue(e)){var d=ve([e]);if(d)return d}return"99-default"}function xe(e){if("Method"===e.kindString){var t=ye(e.signatures);if(t)return t}else if(de(e)){var n,i=null==e||null==(n=e.type)?void 0:n.declaration,a=ye(null==i?void 0:i.signatures);if(a)return a}else if(pe(e))for(var r,s=e.type.types,c=(0,o.Z)(s);!(r=c()).done;){var l=r.value;if(me(l)){var d=ye(l.declaration.signatures);if(d)return d}}else if(ue(e)){var m=ye([e]);if(m)return m}return he(p=e,"docname")||p.name;var p}function be(e){var t=he(e,"docid");if(t)return t;var n,o,i=(n="docid",o=[],R(e,(function(e,t,i){"comment"===i&&o.push.apply(o,e.tags.filter((function(e){return e.tag===n})))})),o);return i.length>0?i[0].text.trim():xe(e)}function ve(e){if(e)for(var t,n=(0,o.Z)(e);!(t=n()).done;){var i=he(t.value,"docgroup");if(i)return i.trim()}return null}function Re(e){for(var t,n=(0,o.Z)(e);!(t=n()).done;){var i=t.value;if(he(i,"docgroup"))return i}return null}function ke(e){for(var t,n=e.type.types,i=null,a=(0,o.Z)(n);!(t=a()).done;){var r=t.value;if(me(r)){var s=r.declaration.signatures;i||(i=s[0]);var c=Re(s);if(c)return c}}return i}function Se(e){for(var t,n,i=(t="Call signature",k(e,(function(e){return e.kindString===t}))),a=(0,o.Z)(i);!(n=a()).done;){var r=he(n.value,"docgrouptitle");if(r)return r.trim()}return null}function Te(e){for(var t,n=(0,o.Z)(e.children);!(t=n()).done;){var i=Se(t.value.child);if(i)return i}return e.group}function Ee(e){if("Call signature"===e.kindString)return ue(e)||le(e)||ge(e)?[{group:fe(e),name:xe(e),reflection:e,child:e}]:[];if("Type alias"===e.kindString||"Get signature"===e.kindString||"Set signature"===e.kindString)return[];var t=e.type.declaration.children.filter((function(e){return ue(e)||le(e)||ge(e)})),n=null!==he(e,"hiddennamespace")?null:e.name;return(0,c.flatMap)(t,(function(t){return le(t)?{group:fe(t),name:xe(t),namespace:n,reflection:e,child:t}:Ee(t)}))}function Pe(e){var t=Ee(e),n=(0,c.groupBy)(t,(function(e){return e.group})),o=[];for(var i in n)o.push({group:i,children:n[i]});return o=(0,c.sortBy)(o,(function(e){return e.group}))}},2598:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return u}});var o=n(3117),i=n(102),a=(n(7294),n(3905)),r=JSON.parse('{"hash":"actions/experimental","pageTitle":"Experimental Actions","pageDescription":"Experimental actions are actions that are not yet fully supported and may change in the future.","pageSidebarLabel":"Experimental","contents":[{"id":1695,"order":9999,"name":"experiment.beginRecording","reflection":{"id":1695,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Starts a new recording. Returns a promise that resolves when recording has started.\\nThe returned promise will throw an error if recording could not be started. Reasons for this include insufficient permissions and not having a microphone.","tags":[{"tag":"example","paramName":"","text":"Record for 10 seconds and download the files.\\nawait experiment.beginRecording({\\n    audio: true,\\n    video: true,\\n    screen: false\\n});\\nawait os.sleep(10000);\\nconst data = await experiment.endRecording();\\nlet index = 0;\\nfor(let file of data.files) {\\n    os.download(file.data, `file-${index}`);\\n    index += 1;\\n}\\n"},{"tag":"example","paramName":"","text":"Record the screen with microphone audio.\\nawait experiment.beginRecording({\\n    audio: [\'microphone\'],\\n    video: false,\\n    screen: true\\n});\\nawait os.sleep(10000);\\nconst data = await experiment.endRecording();\\nlet index = 0;\\nfor(let file of data.files) {\\n    os.download(file.data, `file-${index}`);\\n    index += 1;\\n}\\n"},{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"doctitle","paramName":"","text":"Experimental Actions"},{"tag":"docsidebar","paramName":"","text":"Experimental"},{"tag":"docdescription","paramName":"","text":"Experimental actions are actions that are not yet fully supported and may change in the future."},{"tag":"docname","paramName":"","text":"experiment.beginRecording\\n"}]},"parameters":[{"id":1696,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"the options that should be used for the recording.\\nDefaults to: `{ audio: true, video: true, screen: false }`\\n","tags":[]},"type":{"type":"reference","id":2722,"name":"RecordingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}},"comment":{"shortText":"Starts a new recording. Returns a promise that resolves when recording has started.\\nThe returned promise will throw an error if recording could not be started. Reasons for this include insufficient permissions and not having a microphone.","text":"","tags":[{"tagName":"example","paramName":"","text":"Record for 10 seconds and download the files.\\nawait experiment.beginRecording({\\n    audio: true,\\n    video: true,\\n    screen: false\\n});\\nawait os.sleep(10000);\\nconst data = await experiment.endRecording();\\nlet index = 0;\\nfor(let file of data.files) {\\n    os.download(file.data, `file-${index}`);\\n    index += 1;\\n}\\n"},{"tagName":"example","paramName":"","text":"Record the screen with microphone audio.\\nawait experiment.beginRecording({\\n    audio: [\'microphone\'],\\n    video: false,\\n    screen: true\\n});\\nawait os.sleep(10000);\\nconst data = await experiment.endRecording();\\nlet index = 0;\\nfor(let file of data.files) {\\n    os.download(file.data, `file-${index}`);\\n    index += 1;\\n}\\n"},{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"doctitle","paramName":"","text":"Experimental Actions"},{"tagName":"docsidebar","paramName":"","text":"Experimental"},{"tagName":"docdescription","paramName":"","text":"Experimental actions are actions that are not yet fully supported and may change in the future."},{"tagName":"docname","paramName":"","text":"experiment.beginRecording\\n"}]},"group":null},{"id":1699,"order":9999,"name":"experiment.endRecording","reflection":{"id":1699,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Stops the recording that is in progress. Returns a promise that resolves with the recorded data.","tags":[{"tag":"example","paramName":"","text":"Record for 10 seconds and download the files.\\nawait experiment.beginRecording({\\n    audio: true,\\n    video: true,\\n    screen: false\\n});\\nawait os.sleep(10000);\\nconst data = await experiment.endRecording();\\nlet index = 0;\\nfor(let file of data.files) {\\n    os.download(file.data, `file-${index}`);\\n    index += 1;\\n}\\n"},{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"docname","paramName":"","text":"experiment.endRecording\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2715,"name":"Recording"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}},"comment":{"shortText":"Stops the recording that is in progress. Returns a promise that resolves with the recorded data.","text":"","tags":[{"tagName":"example","paramName":"","text":"Record for 10 seconds and download the files.\\nawait experiment.beginRecording({\\n    audio: true,\\n    video: true,\\n    screen: false\\n});\\nawait os.sleep(10000);\\nconst data = await experiment.endRecording();\\nlet index = 0;\\nfor(let file of data.files) {\\n    os.download(file.data, `file-${index}`);\\n    index += 1;\\n}\\n"},{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"docname","paramName":"","text":"experiment.endRecording\\n"}]},"group":null},{"id":1678,"order":9999,"name":"experiment.getAnchorPointPosition","reflection":{"id":1678,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the absolute position in the given dimension that the center of the given bot would be placed at if the bot was using the given anchor point.","tags":[{"tag":"example","paramName":"","text":"Get the top anchor point of the current bot in the \\"home\\" dimension.\\nconst point = experiment.getAnchorPointPosition(bot, \\"home\\", \\"top\\");\\nos.toast(point);\\n"},{"tag":"example","paramName":"","text":"Get the back right anchor point of the current bot in the \\"home\\" dimension.\\nconst point = experiment.getAnchorPointPosition(bot, \\"home\\", [ 0.5, -0.5, 0 ]);\\nos.toast(point);\\n"},{"tag":"example","paramName":"","text":"Place bots at each of the anchor points.\\nlet points = [\\n    \'top\',\\n    \'bottom\',\\n    \'front\',\\n    \'back\',\\n    \'left\',\\n    \'right\',\\n    \'center\',\\n];\\n\\nfor(let point of points) {\\n    let pos = experiment.getAnchorPointPosition(bot, os.getCurrentDimension(), point);\\n    create({\\n        space: \'tempShared\',\\n        color: \'green\',\\n        [os.getCurrentDimension()]: true,\\n        [os.getCurrentDimension() + \\"X\\"]: pos.x,\\n        [os.getCurrentDimension() + \\"Y\\"]: pos.y,\\n        [os.getCurrentDimension() + \\"Z\\"]: pos.z,\\n        anchorPoint: \'center\',\\n        targetAnchorPoint: point,\\n        scale: 0.1,\\n    });\\n}\\n"},{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"docname","paramName":"","text":"experiment.getAnchorPointPosition\\n"}]},"parameters":[{"id":1679,"name":"bot","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the bot that the anchor point position should be calculated for.","tags":[]},"type":{"type":"reference","id":2773,"name":"Bot"}},{"id":1680,"name":"dimension","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the dimension that the anchor point position should be calculated in.","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1681,"name":"anchorPoint","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the anchor point that should be calculated. Can be any valid [`#anchorPoint`](tags:anchorPoint) value.\\n","tags":[]},"type":{"type":"reference","name":"BotAnchorPoint"}}],"type":{"type":"reflection","declaration":{"id":1682,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1683,"name":"x","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":12129,"character":9}],"type":{"type":"intrinsic","name":"number"}},{"id":1684,"name":"y","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":12129,"character":20}],"type":{"type":"intrinsic","name":"number"}},{"id":1685,"name":"z","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":12129,"character":31}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1683,1684,1685]}],"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":12129,"character":7}]}}},"comment":{"shortText":"Gets the absolute position in the given dimension that the center of the given bot would be placed at if the bot was using the given anchor point.","text":"","tags":[{"tagName":"example","paramName":"","text":"Get the top anchor point of the current bot in the \\"home\\" dimension.\\nconst point = experiment.getAnchorPointPosition(bot, \\"home\\", \\"top\\");\\nos.toast(point);\\n"},{"tagName":"example","paramName":"","text":"Get the back right anchor point of the current bot in the \\"home\\" dimension.\\nconst point = experiment.getAnchorPointPosition(bot, \\"home\\", [ 0.5, -0.5, 0 ]);\\nos.toast(point);\\n"},{"tagName":"example","paramName":"","text":"Place bots at each of the anchor points.\\nlet points = [\\n    \'top\',\\n    \'bottom\',\\n    \'front\',\\n    \'back\',\\n    \'left\',\\n    \'right\',\\n    \'center\',\\n];\\n\\nfor(let point of points) {\\n    let pos = experiment.getAnchorPointPosition(bot, os.getCurrentDimension(), point);\\n    create({\\n        space: \'tempShared\',\\n        color: \'green\',\\n        [os.getCurrentDimension()]: true,\\n        [os.getCurrentDimension() + \\"X\\"]: pos.x,\\n        [os.getCurrentDimension() + \\"Y\\"]: pos.y,\\n        [os.getCurrentDimension() + \\"Z\\"]: pos.z,\\n        anchorPoint: \'center\',\\n        targetAnchorPoint: point,\\n        scale: 0.1,\\n    });\\n}\\n"},{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"docname","paramName":"","text":"experiment.getAnchorPointPosition\\n"}]},"group":null},{"id":1707,"order":9999,"name":"experiment.getVoices","reflection":{"id":1707,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the list of synthetic voices that are supported by the system.\\nReturns a promise that resolves with the voices.","tags":[{"tag":"example","paramName":"","text":"Toast the list of voices that are supported.\\nconst voices = await experiment.getVoices();\\nos.toast(voices);\\n"},{"tag":"example","paramName":"","text":"Get the first US English voice.\\nconst voices = await experiment.getVoices();\\nconst usEnglish = voices.find(v => v.language === \\"en-US\\");\\nos.toast(usEnglish);\\n"},{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"docname","paramName":"","text":"experiment.getVoices\\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":2726,"name":"SyntheticVoice"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}},"comment":{"shortText":"Gets the list of synthetic voices that are supported by the system.\\nReturns a promise that resolves with the voices.","text":"","tags":[{"tagName":"example","paramName":"","text":"Toast the list of voices that are supported.\\nconst voices = await experiment.getVoices();\\nos.toast(voices);\\n"},{"tagName":"example","paramName":"","text":"Get the first US English voice.\\nconst voices = await experiment.getVoices();\\nconst usEnglish = voices.find(v => v.language === \\"en-US\\");\\nos.toast(usEnglish);\\n"},{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"docname","paramName":"","text":"experiment.getVoices\\n"}]},"group":null},{"id":1651,"order":9999,"name":"experiment.localFormAnimation","reflection":{"id":1651,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Locally plays the given animation on the given bot.","text":"If an animation is already playing, it will be interrupted.\\nWhen the given animation is finished playing, the interrupted animation will be restored.\\n","tags":[{"tag":"example","paramName":"","text":"Play the \\"jump\\" animation on this bot.\\nexperiment.localFormAnimation(this, \\"jump\\");\\n"},{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"docname","paramName":"","text":"experiment.localFormAnimation\\n"}]},"parameters":[{"id":1652,"name":"bot","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the Bot or Bot ID that the animation should be played on.","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2773,"name":"Bot"}]}},{"id":1653,"name":"animation","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the name or index of the animation that should be played.\\n","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","name":"LocalFormAnimationAction"}},"comment":{"shortText":"Locally plays the given animation on the given bot.","text":"If an animation is already playing, it will be interrupted.\\nWhen the given animation is finished playing, the interrupted animation will be restored.\\n","tags":[{"tagName":"example","paramName":"","text":"Play the \\"jump\\" animation on this bot.\\nexperiment.localFormAnimation(this, \\"jump\\");\\n"},{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"docname","paramName":"","text":"experiment.localFormAnimation\\n"}]},"group":null},{"id":1656,"order":9999,"name":"experiment.localPositionTween","reflection":{"id":1656,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Locally plays a tween that moves the given bot in the given dimension to the given position.\\nOptionally allows customizing the easing of the tween.","text":"Returns a promise that resolves when the tween is finished.\\n\\nWhile the tween is playing, any updates to the bot\'s position and rotation are ignored.\\nOnce the tween is done playing, any change to the bot will reset the position/rotation.\\n\\n\\n","tags":[{"tag":"example","paramName":"","text":"Tween the bot to X = 10 in the `home` dimension.\\nexperiment.localPositionTween(\\n    this,\\n    \'home\',\\n    {\\n        x: 10,\\n    });\\n"},{"tag":"example","paramName":"","text":"Tween the bot over 5 seconds.\\nexperiment.localPositionTween(\\n    this,\\n    \'home\',\\n    {\\n        x: 10,\\n    },\\n    {\\n        duration: 5\\n    });\\n"},{"tag":"example","paramName":"","text":"Tween the bot with quadratic easing.\\nexperiment.localPositionTween(\\n    this,\\n    \'home\',\\n    {\\n        x: 10,\\n    },\\n    {\\n        easing: {\\n            type: \'quadratic\',\\n            mode: \'inout\'\\n        }\\n    });\\n"},{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"docname","paramName":"","text":"experiment.localPositionTween\\n"}]},"parameters":[{"id":1657,"name":"bot","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the bot or ID of the bot that should be tweened.","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2773,"name":"Bot"}]}},{"id":1658,"name":"dimension","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the dimension that the bot should be tweened in.\\nNote that the tween will only work if the given dimension is currently in the grid portal or miniGridPortal.\\n","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1659,"name":"position","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the position that the bot should be tweened to. If you exclude a dimension (like `x`, `y`, or `z`), then it will remain unchanged.","tags":[]},"type":{"type":"reflection","declaration":{"id":1660,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1661,"name":"x","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":11996,"character":20}],"type":{"type":"intrinsic","name":"number"}},{"id":1662,"name":"y","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":11996,"character":31}],"type":{"type":"intrinsic","name":"number"}},{"id":1663,"name":"z","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":11996,"character":42}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1661,1662,1663]}]}}},{"id":1664,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"the options that should be used.\\n","tags":[]},"type":{"type":"reference","id":2526,"name":"TweenOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}},"comment":{"shortText":"Locally plays a tween that moves the given bot in the given dimension to the given position.\\nOptionally allows customizing the easing of the tween.","text":"Returns a promise that resolves when the tween is finished.\\n\\nWhile the tween is playing, any updates to the bot\'s position and rotation are ignored.\\nOnce the tween is done playing, any change to the bot will reset the position/rotation.\\n\\n\\n","tags":[{"tagName":"example","paramName":"","text":"Tween the bot to X = 10 in the `home` dimension.\\nexperiment.localPositionTween(\\n    this,\\n    \'home\',\\n    {\\n        x: 10,\\n    });\\n"},{"tagName":"example","paramName":"","text":"Tween the bot over 5 seconds.\\nexperiment.localPositionTween(\\n    this,\\n    \'home\',\\n    {\\n        x: 10,\\n    },\\n    {\\n        duration: 5\\n    });\\n"},{"tagName":"example","paramName":"","text":"Tween the bot with quadratic easing.\\nexperiment.localPositionTween(\\n    this,\\n    \'home\',\\n    {\\n        x: 10,\\n    },\\n    {\\n        easing: {\\n            type: \'quadratic\',\\n            mode: \'inout\'\\n        }\\n    });\\n"},{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"docname","paramName":"","text":"experiment.localPositionTween\\n"}]},"group":null},{"id":1667,"order":9999,"name":"experiment.localRotationTween","reflection":{"id":1667,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Locally plays a tween that rotates the given bot in the given dimension to the given rotation.\\nOptionally allows customizing the easing of the tween.","text":"Returns a promise that resolves when the tween is finished.\\n\\nWhile the tween is playing, any updates to the bot\'s position and rotation are ignored.\\nOnce the tween is done playing, any change to the bot will reset the position/rotation.\\n","tags":[{"tag":"example","paramName":"","text":"Tween the bot 90 degrees around the Z axis in the `home` dimension.\\nexperiment.localRotationTween(\\n    this,\\n    \'home\',\\n    {\\n        z: Math.PI / 2,\\n    });\\n"},{"tag":"example","paramName":"","text":"Tween the bot for 5 seconds.\\nexperiment.localRotationTween(\\n    this,\\n    \'home\',\\n    {\\n        z: Math.PI / 2,\\n    },\\n    {\\n        duration: 5\\n    });\\n"},{"tag":"example","paramName":"","text":"Tween the bot with quadratic easing.\\nexperiment.localRotationTween(\\n    this,\\n    \'home\',\\n    {\\n        z: Math.PI / 2,\\n    },\\n    {\\n        easing: {\\n            type: \'quadratic\',\\n            mode: \'inout\'\\n        }\\n    });\\n"},{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"docname","paramName":"","text":"experiment.localRotationTween\\n"}]},"parameters":[{"id":1668,"name":"bot","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the bot or ID of the bot that should be tweened.","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2773,"name":"Bot"}]}},{"id":1669,"name":"dimension","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the dimension that the bot should be tweened in.\\nNote that the tween will only work if the given dimension is currently in the grid portal or miniGridPortal.\\n","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1670,"name":"rotation","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the rotation that the bot should be tweened to in radians. If you exclude a dimension (like `x`, `y`, or `z`), then it will remain unchanged.","tags":[]},"type":{"type":"reflection","declaration":{"id":1671,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1672,"name":"x","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":12066,"character":20}],"type":{"type":"intrinsic","name":"number"}},{"id":1673,"name":"y","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":12066,"character":31}],"type":{"type":"intrinsic","name":"number"}},{"id":1674,"name":"z","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":12066,"character":42}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1672,1673,1674]}]}}},{"id":1675,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The options that should be used for the tween.\\n","tags":[]},"type":{"type":"reference","id":2526,"name":"TweenOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}},"comment":{"shortText":"Locally plays a tween that rotates the given bot in the given dimension to the given rotation.\\nOptionally allows customizing the easing of the tween.","text":"Returns a promise that resolves when the tween is finished.\\n\\nWhile the tween is playing, any updates to the bot\'s position and rotation are ignored.\\nOnce the tween is done playing, any change to the bot will reset the position/rotation.\\n","tags":[{"tagName":"example","paramName":"","text":"Tween the bot 90 degrees around the Z axis in the `home` dimension.\\nexperiment.localRotationTween(\\n    this,\\n    \'home\',\\n    {\\n        z: Math.PI / 2,\\n    });\\n"},{"tagName":"example","paramName":"","text":"Tween the bot for 5 seconds.\\nexperiment.localRotationTween(\\n    this,\\n    \'home\',\\n    {\\n        z: Math.PI / 2,\\n    },\\n    {\\n        duration: 5\\n    });\\n"},{"tagName":"example","paramName":"","text":"Tween the bot with quadratic easing.\\nexperiment.localRotationTween(\\n    this,\\n    \'home\',\\n    {\\n        z: Math.PI / 2,\\n    },\\n    {\\n        easing: {\\n            type: \'quadratic\',\\n            mode: \'inout\'\\n        }\\n    });\\n"},{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"docname","paramName":"","text":"experiment.localRotationTween\\n"}]},"group":null},{"id":1702,"order":9999,"name":"experiment.speakText","reflection":{"id":1702,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Speaks the given text using a synthetic voice and options.\\nNote that this is a local effect. The gererated sounds are only played in the current session.","text":"Returns a promise that resolves when the text has been spoken.","tags":[{"tag":"dochash","paramName":"","text":"actions/experimental"},{"tag":"docname","paramName":"","text":"experiment.speakText\\n"}]},"parameters":[{"id":1703,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the text that should be spoken.","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1704,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"the options that should be used to speak the text.\\n","tags":[]},"type":{"type":"reference","id":2529,"name":"SpeakTextOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}},"comment":{"shortText":"Speaks the given text using a synthetic voice and options.\\nNote that this is a local effect. The gererated sounds are only played in the current session.","text":"Returns a promise that resolves when the text has been spoken.","tags":[{"tagName":"dochash","paramName":"","text":"actions/experimental"},{"tagName":"docname","paramName":"","text":"experiment.speakText\\n"}]},"group":null}],"references":{"CasualOSError":"types/error","id-2949":"CasualOSError","Quaternion":"types/math/rotations","id-3339":"Quaternion","Rotation":"types/math/rotations","id-3371":"Rotation","Vector2":"types/math/vectors","id-3205":"Vector2","Vector3":"types/math/vectors","id-3262":"Vector3","AIChatMessage":"types/ai","id-2968":"AIChatMessage","AIChatOptions":"types/ai","id-2746":"AIChatOptions","AIGenerateImageSuccess":"types/ai","id-2551":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-2760":"AIGenerateImageOptions","AIGenerateSkyboxOptions":"types/ai","id-2756":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-2544":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-2548":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-2554":"AIGeneratedImage","AddCountFailure":"types/records/events","id-3152":"AddCountFailure","AddCountSuccess":"types/records/events","id-3147":"AddCountSuccess","AnimateTagOptions":"types/animation","id-2149":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-2524":"AttachDebuggerOptions","CasualOSDevice":"types/os","id-2937":"CasualOSDevice","CasualOSVersion":"types/os","id-2929":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-3417":"AxisAndAngle","BotTagMasks":"types/core","id-2906":"BotTagMasks","BotTags":"types/core","id-2821":"BotTags","BotState":"types/core","id-2919":"BotState","CompiledBotListeners":"types/core","id-2900":"CompiledBotListeners","ConvertGeolocationToWhat3WordsOptions":"types/os","id-2581":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-2979":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-2975":"CreatePublicRecordKeySuccess","DebuggerCallFrame":"types/debuggers/common","id-2477":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-2512":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-2506":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-2485":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-2491":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-2518":"DebuggerVariable","Easing":"types/animation","id-2561":"Easing","EnableXROptions":"types/os","id-2655":"EnableXROptions","EraseDataFailure":"types/records/data","id-3123":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-3119":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-3142":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-3138":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-3420":"EulerAnglesRotation","FocusOnOptions":"types/os","id-2615":"FocusOnOptions","FocusOnRotation":"types/os","id-2627":"FocusOnRotation","FormAnimationData":"types/os","id-2673":"FormAnimationData","FromToRotation":"types/math/rotations","id-3414":"FromToRotation","GenericError":"types/error","id-2946":"GenericError","GetCountFailure":"types/records/events","id-3163":"GetCountFailure","GetCountSuccess":"types/records/events","id-3157":"GetCountSuccess","GetDataFailure":"types/records/data","id-3114":"GetDataFailure","GetDataSuccess":"types/records/data","id-3105":"GetDataSuccess","GetRoomOptionsFailure":"types/os","id-2239":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os","id-2235":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os","id-2282":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os","id-2277":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os","id-2258":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os","id-2253":"GetRoomTrackOptionsSuccess","GrantMarkerPermissionFailure":"types/records/policies","id-3191":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-3189":"GrantMarkerPermissionSuccess","GrantRoleFailure":"types/records/roles","id-3177":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-3175":"GrantRoleSuccess","ImageClassifierOptions":"types/os","id-2633":"ImageClassifierOptions","InstUpdate":"types/os","id-2942":"InstUpdate","JoinRoomFailure":"types/os","id-2220":"JoinRoomFailure","JoinRoomSuccess":"types/os","id-2217":"JoinRoomSuccess","LeaveRoomFailure":"types/os","id-2229":"LeaveRoomFailure","LeaveRoomSuccess":"types/os","id-2226":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-3133":"ListDataFailure","ListDataSuccess":"types/records/data","id-3128":"ListDataSuccess","LookRotation":"types/math/rotations","id-3437":"LookRotation","MediaPermissionOptions":"types/os","id-2652":"MediaPermissionOptions","Debugger":"types/debuggers/debugger","id-2289":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-2496":"NormalDebuggerOptions","PhotoCameraOptions":"types/camera","id-2730":"PhotoCameraOptions","ParsedBotLink":"types/core","id-2925":"ParsedBotLink","PartialBotState":"types/core","id-2922":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-2345":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-2501":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-2464":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-2472":"PauseTriggerOptions","Photo":"types/camera","id-2742":"Photo","PossiblePauseTriggerLocation":"types/debuggers/common","id-2459":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-2533":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-3430":"QuaternionRotation","RaycastRay":"types/os","id-2213":"RaycastRay","RaycastResult":"types/os","id-2210":"RaycastResult","RecordActionOptions":"types/records/extra","id-2564":"RecordActionOptions","RecordDataFailure":"types/records/data","id-3100":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-3096":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-2180":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-2176":"RecordFileSuccess","RecordedFile":"types/experimental","id-2717":"RecordedFile","Recording":"types/experimental","id-2715":"Recording","RecordingOptions":"types/experimental","id-2722":"RecordingOptions","RegisterPrefixOptions":"types/core","id-2712":"RegisterPrefixOptions","RevokeMarkerPermissionFailure":"types/records/policies","id-3198":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-3196":"RevokeMarkerPermissionSuccess","RevokeRoleFailure":"types/records/roles","id-3184":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-3182":"RevokeRoleSuccess","RoomJoinOptions":"types/os","id-2678":"RoomJoinOptions","RoomOptions":"types/os","id-2687":"RoomOptions","RoomRemoteOptions":"types/os","id-2703":"RoomRemoteOptions","RoomTrackOptions":"types/os","id-2691":"RoomTrackOptions","RuntimeBot":"types/core","id-2773":"RuntimeBot","RuntimeBotLinks":"types/core","id-2912":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-2909":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-3428":"SequenceRotation","SetRoomOptionsSuccess":"types/os","id-2244":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os","id-2709":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os","id-2270":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os","id-2265":"SetRoomTrackOptionsSuccess","ShareOptions":"types/os","id-2611":"ShareOptions","ShowChatOptions":"types/os","id-2605":"ShowChatOptions","ShowConfirmOptions":"types/os","id-2647":"ShowConfirmOptions","ShowInputOptions":"types/os","id-2638":"ShowInputOptions","SnapAxis":"types/os","id-2585":"SnapAxis","SnapGridTarget":"types/os","id-2185":"SnapGridTarget","SnapPoint":"types/os","id-2597":"SnapPoint","SpeakTextOptions":"types/experimental","id-2529":"SpeakTextOptions","StartFormAnimationOptions":"types/os","id-2657":"StartFormAnimationOptions","StopFormAnimationOptions":"types/os","id-2670":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os","id-2567":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-2726":"SyntheticVoice","TweenOptions":"types/experimental","id-2526":"TweenOptions","UnsuccessfulGeolocation":"types/os","id-2577":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-3170":"UpdateEventRecordFailure","UpdateEventRecordSuccess":"types/records/events","id-3168":"UpdateEventRecordSuccess","UploadedFile":"types/os","id-2206":"UploadedFile","WebhookOptions":"types/web","id-2130":"WebhookOptions","WebhookResult":"types/web","id-2142":"WebhookResult","AddCountResult":"types/records/events","id-3146":"AddCountResult","AvailablePermissions":"types/permissions","id-2984":"AvailablePermissions","BarcodeFormat":"types/os","id-2632":"BarcodeFormat","BotFilter":"types/core","id-2164":"BotFilter","BotSpace":"types/core","id-2896":"BotSpace","CameraType":"types/os","id-2631":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-2974":"CreatePublicRecordKeyResult","EaseMode":"types/animation","id-2560":"EaseMode","EaseType":"types/animation","id-2559":"EaseType","EraseDataResult":"types/records/data","id-3118":"EraseDataResult","EraseFileResult":"types/records/files","id-3137":"EraseFileResult","Geolocation":"types/os","id-2566":"Geolocation","GetCountResult":"types/records/events","id-3156":"GetCountResult","GetDataResult":"types/records/data","id-3104":"GetDataResult","GetRoomOptionsResult":"types/os","id-2234":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os","id-2276":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os","id-2252":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-3188":"GrantMarkerPermissionResult","GrantRoleResult":"types/records/roles","id-3174":"GrantRoleResult","JoinRoomResult":"types/os","id-2216":"JoinRoomResult","LeaveRoomResult":"types/os","id-2225":"LeaveRoomResult","ListDataResult":"types/records/data","id-3127":"ListDataResult","Mod":"types/core","id-2159":"Mod","PortalType":"types/core","id-2928":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-2463":"PossiblePauseTriggerStates","RecordDataResult":"types/records/data","id-3095":"RecordDataResult","RecordFileResult":"types/records/files","id-2175":"RecordFileResult","RevokeMarkerPermissionResult":"types/records/policies","id-3195":"RevokeMarkerPermissionResult","RevokeRoleResult":"types/records/roles","id-3181":"RevokeRoleResult","SetRoomOptionsResult":"types/os","id-2243":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os","id-2264":"SetRoomTrackOptionsResult","SnapTarget":"types/os","id-2604":"SnapTarget","TagFilter":"types/core","id-2160":"TagFilter","UpdateEventRecordResult":"types/records/events","id-3167":"UpdateEventRecordResult","animateTag-byOptions":"actions/utility","id-364":"animateTag-byOptions","getbot-tag":"actions/data","id-33":"getbot-tag","getbots-tag":"actions/data","id-17":"getbots-tag","animateTag-byTag":"actions/utility","id-358":"animateTag-byTag","changeState":"actions/data","id-177":"changeState","create":"actions/data","id-162":"create","destroy":"actions/data","id-166":"destroy","getbot-filters":"actions/data","id-26":"getbot-filters","getbots-filters":"actions/data","id-10":"getbots-filters","priorityShout":"actions/event","id-225":"priorityShout","shout":"actions/event","id-237":"shout","updateBotLinks":"actions/data","id-198":"updateBotLinks","whisper":"actions/event","id-263":"whisper","action.perform":"actions/event","id-1630":"action.perform","action.reject":"actions/event","id-1634":"action.reject","ai.chat-string":"actions/ai","id-423":"ai.chat-string","ai.chat-message":"actions/ai","id-426":"ai.chat-message","ai.chat-messages":"actions/ai","id-429":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-442":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-446":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-434":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-438":"ai.generateSkybox-request","applyDiffToSnapshot":"actions/data","id-83":"applyDiffToSnapshot","applyMod":"actions/mods","id-152":"applyMod","assert":"actions/debuggers","id-407":"assert","assertEqual":"actions/debuggers","id-412":"assertEqual","atPosition":"actions/bot-filters","id-293":"atPosition","byCreator":"actions/bot-filters","id-314":"byCreator","byID":"actions/bot-filters","id-281":"byID","byMod":"actions/bot-filters","id-285":"byMod","bySpace":"actions/bot-filters","id-310":"bySpace","byTag":"actions/bot-filters","id-276":"byTag","bytes.fromBase64String":"actions/bytes","id-1854":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-1871":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-1862":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-1850":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-1866":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-1858":"bytes.toHexString","clearAnimations":"actions/utility","id-378":"clearAnimations","clearTagMasks":"actions/data","id-106":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-1877":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-1883":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-1914":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-1907":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-1972":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-1967":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-1978":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-1963":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-1959":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-1943":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-1933":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-1938":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-1953":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-1982":"crypto.keypair","crypto.sha256":"actions/crypto","id-1899":"crypto.sha256","crypto.sha512":"actions/crypto","id-1903":"crypto.sha512","crypto.sign":"actions/crypto","id-1986":"crypto.sign","deleteTagMaskText":"actions/data","id-133":"deleteTagMaskText","deleteTagText":"actions/data","id-126":"deleteTagText","diffSnapshots":"actions/data","id-78":"diffSnapshots","either":"actions/bot-filters","id-318":"either","os.beginAudioRecording":"actions/audio","id-1688":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-1695":"experiment.beginRecording","os.endAudioRecording":"actions/audio","id-1692":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-1699":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-1678":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-1707":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-1651":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-1656":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-1667":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-1702":"experiment.speakText","getBotLinks":"actions/data","id-194":"getBotLinks","getBotPosition":"actions/data","id-52":"getBotPosition","getBotRotation":"actions/data","id-57":"getBotRotation","getBotTagValues":"actions/data","id-42":"getBotTagValues","getFormattedJSON":"actions/data","id-70":"getFormattedJSON","getID":"actions/data","id-62":"getID","getJSON":"actions/data","id-66":"getJSON","getLink":"actions/data","id-190":"getLink","getMod":"actions/mods","id-47":"getMod","getSnapshot":"actions/data","id-74":"getSnapshot","getTag":"actions/data","id-88":"getTag","inDimension":"actions/bot-filters","id-289":"inDimension","inStack":"actions/bot-filters","id-299":"inStack","insertTagMaskText":"actions/data","id-118":"insertTagMaskText","insertTagText":"actions/data","id-111":"insertTagText","math.abs":"actions/math","id-1724":"math.abs","math.addVectors":"actions/math","id-1794":"math.addVectors","math.areClose":"actions/math","id-1825":"math.areClose","math.avg":"actions/math","id-1716":"math.avg","math.degreesToRadians":"actions/math","id-1750":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-1790":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-1758":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-1732":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-1767":"math.intersectPlane","math.negateVector":"actions/math","id-1804":"math.negateVector","math.normalizeVector":"actions/math","id-1809":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-1754":"math.radiansToDegrees","math.random":"actions/math","id-1745":"math.random","math.randomInt":"actions/math","id-1740":"math.randomInt","math.scaleVector":"actions/math","id-1819":"math.scaleVector","math.setRandomSeed":"actions/math","id-1736":"math.setRandomSeed","math.sqrt":"actions/math","id-1720":"math.sqrt","math.stdDev":"actions/math","id-1728":"math.stdDev","math.subtractVectors":"actions/math","id-1799":"math.subtractVectors","math.sum":"actions/math","id-1712":"math.sum","math.vectorLength":"actions/math","id-1814":"math.vectorLength","neighboring":"actions/bot-filters","id-304":"neighboring","not":"actions/bot-filters","id-325":"not","os.attachDebugger":"actions/debuggers","id-1328":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-1317":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-1321":"os.createDebugger-pausable","os.focusOn-bot":"actions/portals","id-510":"os.focusOn-bot","os.focusOn-position":"actions/portals","id-515":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-1325":"os.getExecutingDebugger","showChat-options":"actions/os","id-537":"showChat-options","showChat-placeholder":"actions/os","id-533":"showChat-placeholder","os.showInput":"actions/portals","id-753":"os.showInput","os.addBotDropGrid":"actions/portals","id-827":"os.addBotDropGrid","os.addBotDropSnap":"actions/portals","id-818":"os.addBotDropSnap","os.addDropGrid":"actions/portals","id-823":"os.addDropGrid","os.addDropSnap":"actions/portals","id-814":"os.addDropSnap","os.applyUpdatesToInst":"actions/os","id-1271":"os.applyUpdatesToInst","os.arSupported":"actions/xr","id-578":"os.arSupported","os.bufferFormAddressGLTF":"actions/animations","id-1224":"os.bufferFormAddressGLTF","os.bufferSound":"actions/audio","id-790":"os.bufferSound","os.calculateRayFromCamera":"actions/portals","id-1219":"os.calculateRayFromCamera","os.cancelSound":"actions/audio","id-794":"os.cancelSound","os.capturePhoto":"actions/camera","id-673":"os.capturePhoto","os.closeBarcodeScanner":"actions/barcodes","id-651":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/portals","id-806":"os.closeCircleWipe","os.closeImageClassifier":"actions/image-classification","id-666":"os.closeImageClassifier","os.closePhotoCamera":"actions/camera","id-677":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/barcodes","id-637":"os.closeQRCodeScanner","os.compileApp":"actions/app","id-941":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os","id-1204":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/records","id-1198":"os.countEvents","os.createInitializationUpdate":"actions/os","id-1267":"os.createInitializationUpdate","os.device":"actions/os","id-555":"os.device","os.disableAR":"actions/xr","id-568":"os.disableAR","os.disablePointOfView":"actions/portals","id-593":"os.disablePointOfView","os.disableVR":"actions/xr","id-575":"os.disableVR","os.disableWakeLock":"actions/os","id-599":"os.disableWakeLock","os.download":"actions/files","id-605":"os.download","os.downloadBots":"actions/files","id-611":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/files","id-616":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/files","id-624":"os.downloadInst","os.enableAR":"actions/xr","id-564":"os.enableAR","os.enableCustomDragging":"actions/portals","id-832":"os.enableCustomDragging","os.enablePointOfView":"actions/portals","id-584":"os.enablePointOfView","os.enableVR":"actions/xr","id-571":"os.enableVR","os.eraseData":"actions/records","id-1141":"os.eraseData","os.eraseManualApprovalData":"actions/records","id-1147":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/portals","id-481":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os","id-889":"os.getAverageFrameRate","os.getCameraPosition":"actions/portals","id-845":"os.getCameraPosition","os.getCameraRotation":"actions/portals","id-849":"os.getCameraRotation","os.getCurrentDimension":"actions/portals","id-724":"os.getCurrentDimension","os.getCurrentInst":"actions/portals","id-730":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os","id-1275":"os.getCurrentInstUpdate","os.getData":"actions/records","id-1123":"os.getData","os.getDimensionalDepth":"actions/portals","id-743":"os.getDimensionalDepth","os.getFocusPoint":"actions/portals","id-857":"os.getFocusPoint","os.getGeolocation":"actions/os","id-839":"os.getGeolocation","os.getInputList":"actions/portals","id-882":"os.getInputList","os.getInputState":"actions/portals","id-877":"os.getInputState","os.getInstStateFromUpdates":"actions/os","id-1263":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/records","id-1129":"os.getManualApprovalData","os.getMediaPermission":"actions/os","id-885":"os.getMediaPermission","os.getMenuDimension":"actions/portals","id-733":"os.getMenuDimension","os.getMiniPortalDimension":"actions/portals","id-736":"os.getMiniPortalDimension","os.getPointerDirection":"actions/portals","id-873":"os.getPointerDirection","os.getPointerPosition":"actions/portals","id-861":"os.getPointerPosition","os.getPointerRotation":"actions/portals","id-865":"os.getPointerRotation","os.getPortalDimension":"actions/portals","id-739":"os.getPortalDimension","os.getPublicRecordKey":"actions/records","id-1048":"os.getPublicRecordKey","os.getRoomOptions":"actions/rooms","id-907":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/rooms","id-922":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/rooms","id-911":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/records","id-1052":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os","id-602":"os.getWakeLockConfiguration","os.goToDimension":"actions/portals","id-767":"os.goToDimension","os.goToURL":"actions/portals","id-771":"os.goToURL","os.grantInstAdminPermission":"actions/records","id-1070":"os.grantInstAdminPermission","os.grantInstRole":"actions/records","id-1090":"os.grantInstRole","os.grantRecordMarkerPermission":"actions/records","id-1056":"os.grantRecordMarkerPermission","os.grantUserRole":"actions/records","id-1075":"os.grantUserRole","os.hasBotInMiniPortal":"actions/portals","id-798":"os.hasBotInMiniPortal","os.hideBarcode":"actions/barcodes","id-659":"os.hideBarcode","os.hideChat":"actions/os","id-545":"os.hideChat","os.hideHtml":"actions/os","id-488":"os.hideHtml","os.hideQRCode":"actions/barcodes","id-644":"os.hideQRCode","os.hideTips":"actions/portals","id-469":"os.hideTips","os.importAUX":"actions/files","id-708":"os.importAUX","os.inSheet":"actions/portals","id-842":"os.inSheet","os.instStatuses":"actions/os","id-1292":"os.instStatuses","os.instances":"actions/os","id-1282":"os.instances","os.isCollaborative":"actions/os","id-558":"os.isCollaborative","os.isInDimension":"actions/portals","id-720":"os.isInDimension","os.isRecordKey":"actions/records","id-1105":"os.isRecordKey","os.joinRoom":"actions/rooms","id-892":"os.joinRoom","os.leaveRoom":"actions/rooms","id-897":"os.leaveRoom","os.listBuiltinTags":"actions/app","id-1042":"os.listBuiltinTags","os.listData":"actions/records","id-1135":"os.listData","os.listFormAnimations":"actions/animations","id-1239":"os.listFormAnimations","os.listInstUpdates":"actions/os","id-1260":"os.listInstUpdates","os.loadInst":"actions/os","id-700":"os.loadInst","os.log":"actions/os","id-835":"os.log","os.meetCommand":"actions/os","id-1305":"os.meetCommand","os.meetFunction":"actions/os","id-1310":"os.meetFunction","os.openBarcodeScanner":"actions/barcodes","id-647":"os.openBarcodeScanner","os.openCircleWipe":"actions/portals","id-810":"os.openCircleWipe","os.openDevConsole":"actions/os","id-779":"os.openDevConsole","os.openImageClassifier":"actions/image-classification","id-662":"os.openImageClassifier","os.openPhotoCamera":"actions/camera","id-669":"os.openPhotoCamera","os.openQRCodeScanner":"actions/barcodes","id-633":"os.openQRCodeScanner","os.openURL":"actions/portals","id-775":"os.openURL","os.parseBotsFromData":"actions/files","id-712":"os.parseBotsFromData","os.playSound":"actions/audio","id-786":"os.playSound","os.raycast":"actions/portals","id-1213":"os.raycast","os.raycastFromCamera":"actions/portals","id-1208":"os.raycastFromCamera","os.recordData":"actions/records","id-1109":"os.recordData","os.recordEvent":"actions/records","id-1192":"os.recordEvent","os.recordFile":"actions/records","id-1153":"os.recordFile","os.recordManualApprovalData":"actions/records","id-1116":"os.recordManualApprovalData","os.registerApp":"actions/app","id-932":"os.registerApp","os.registerTagPrefix":"actions/app","id-927":"os.registerTagPrefix","os.remoteCount":"actions/os","id-1285":"os.remoteCount","os.remotes":"actions/os","id-1257":"os.remotes","os.replaceDragBot":"actions/portals","id-716":"os.replaceDragBot","os.requestAuthBot":"actions/records","id-1045":"os.requestAuthBot","os.requestFullscreenMode":"actions/portals","id-478":"os.requestFullscreenMode","os.requestWakeLock":"actions/os","id-596":"os.requestWakeLock","os.revokeInstRole":"actions/records","id-1098":"os.revokeInstRole","os.revokeRecordMarkerPermission":"actions/records","id-1063":"os.revokeRecordMarkerPermission","os.revokeUserRole":"actions/records","id-1083":"os.revokeUserRole","os.run":"actions/os","id-548":"os.run","os.setClipboard":"actions/os","id-491":"os.setClipboard","os.setRoomOptions":"actions/rooms","id-902":"os.setRoomOptions","os.setRoomTrackOptions":"actions/rooms","id-916":"os.setRoomTrackOptions","os.share":"actions/os","id-802":"os.share","os.showBarcode":"actions/barcodes","id-654":"os.showBarcode","os.showConfirm":"actions/portals","id-763":"os.showConfirm","os.showHtml":"actions/os","id-484":"os.showHtml","os.showInputForTag":"actions/portals","id-747":"os.showInputForTag","os.showJoinCode":"actions/barcodes","id-473":"os.showJoinCode","os.showQRCode":"actions/barcodes","id-640":"os.showQRCode","os.showUploadAuxFile":"actions/files","id-627":"os.showUploadAuxFile","os.showUploadFiles":"actions/files","id-630":"os.showUploadFiles","os.sleep":"actions/os","id-453":"os.sleep","os.startFormAnimation":"actions/animations","id-1228":"os.startFormAnimation","os.stopFormAnimation":"actions/animations","id-1234":"os.stopFormAnimation","os.tip":"actions/portals","id-462":"os.tip","os.toast":"actions/os","id-457":"os.toast","os.totalRemoteCount":"actions/os","id-1289":"os.totalRemoteCount","os.unloadInst":"actions/os","id-704":"os.unloadInst","os.unregisterApp":"actions/app","id-937":"os.unregisterApp","os.version":"actions/os","id-552":"os.version","os.vrSupported":"actions/xr","id-581":"os.vrSupported","os.agreedUponTime":"actions/time","id-681":"os.agreedUponTime","os.deadReckoningTime":"actions/time","id-689":"os.deadReckoningTime","os.instLatency":"actions/time","id-683":"os.instLatency","os.instTimeOffset":"actions/time","id-685":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/time","id-687":"os.instTimeOffsetSpread","os.localTime":"actions/time","id-679":"os.localTime","removeTags":"actions/data","id-141":"removeTags","renameTag":"actions/data","id-146":"renameTag","setTag":"actions/data","id-93":"setTag","setTagMask":"actions/data","id-99":"setTagMask","subtractMods":"actions/mods","id-157":"subtractMods","superShout":"actions/event","id-220":"superShout","uuid":"actions/data","id-355":"uuid","web.get":"actions/web","id-2029":"web.get","web.hook":"actions/web","id-2040":"web.hook","web.post":"actions/web","id-2034":"web.post","configBot":"actions/os","id-418":"configBot"}}'),s=n(4629),c=(n(2503),n(9960),["components"]),l={id:"experimental",title:"Experimental Actions",sidebar_label:"Experimental",description:"Experimental actions are actions that are not yet fully supported and may change in the future."},d=void 0,m={unversionedId:"actions/experimental",id:"actions/experimental",title:"Experimental Actions",description:"Experimental actions are actions that are not yet fully supported and may change in the future.",source:"@site/docs/actions/experimental.mdx",sourceDirName:"actions",slug:"/actions/experimental",permalink:"/actions/experimental",draft:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/experimental.mdx",tags:[],version:"current",frontMatter:{id:"experimental",title:"Experimental Actions",sidebar_label:"Experimental",description:"Experimental actions are actions that are not yet fully supported and may change in the future."},sidebar:"docs",previous:{title:"Events",permalink:"/actions/event"},next:{title:"Files",permalink:"/actions/files"}},p={},u=[].concat((0,s.KO)(r)),g={toc:u};function h(e){var t=e.components,n=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.hl,{doc:r,mdxType:"ApiContents"}))}h.isMDXComponent=!0}}]);