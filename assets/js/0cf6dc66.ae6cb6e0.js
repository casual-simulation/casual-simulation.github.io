"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[580],{9989:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var s=o(5250),a=o(5545);const n=JSON.parse('{"hash":"actions/math","pageTitle":"Math Actions","pageDescription":"Math actions are useful for performing math operations on bots and numbers.","pageSidebarLabel":"Math","contents":[{"id":35438,"order":9999,"name":"math.abs","reflection":{"id":35438,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the absolute value of the given number. That is, the number without its sign."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the absolute value for the number -42.\\nconst _42 = math.abs(-42);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.abs"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13414,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13414"}],"parameters":[{"id":35439,"name":"number","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number that the absolute value should be calculated for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Calculates the absolute value of the given number. That is, the number without its sign.","tags":[{"tagName":"example","text":"```ts\\nCalculate the absolute value for the number -42.\\nconst _42 = math.abs(-42);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.abs"}]},"group":null},{"id":35508,"order":9999,"name":"math.addVectors","reflection":{"id":35508,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mathematically adds the given vectors to each other and returns the sum result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector "},{"kind":"code","text":"`{ x: 1, y: 2, z: 3 }`"},{"kind":"text","text":" represents the point "},{"kind":"code","text":"`(1, 2, 3)`"},{"kind":"text","text":" in 3D space where "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", and "},{"kind":"code","text":"`z`"},{"kind":"text","text":" are the names of the dimensions (or axes)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd two 3D points together.\\nconst result = math.addVectors(\\n    { x: 1, y: 2, z: 3 },\\n    { x: 5, y: 6, z: 7 }\\n);\\n\\nos.toast(result); // { x: 6, y: 8, z: 10 }\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd arbitrary numbers together.\\nconst result = math.addVectors(\\n    { salary: 1000, tax: 50 },\\n    { salary: 5000, tax: 250 },\\n    { salary: 750, tax: 37.5 },\\n);\\n\\nos.toast(result); // { salary: 6750, tax: 337.5 }\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.addVectors"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13773,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13773"}],"typeParameter":[{"id":35509,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":35510,"name":"vectors","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the vectors that should be added together."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}},"comment":{"text":"Mathematically adds the given vectors to each other and returns the sum result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector `{ x: 1, y: 2, z: 3 }` represents the point `(1, 2, 3)` in 3D space where `x`, `y`, and `z` are the names of the dimensions (or axes).","tags":[{"tagName":"example","text":"```ts\\nAdd two 3D points together.\\nconst result = math.addVectors(\\n    { x: 1, y: 2, z: 3 },\\n    { x: 5, y: 6, z: 7 }\\n);\\n\\nos.toast(result); // { x: 6, y: 8, z: 10 }\\n```"},{"tagName":"example","text":"```ts\\nAdd arbitrary numbers together.\\nconst result = math.addVectors(\\n    { salary: 1000, tax: 50 },\\n    { salary: 5000, tax: 250 },\\n    { salary: 750, tax: 37.5 },\\n);\\n\\nos.toast(result); // { salary: 6750, tax: 337.5 }\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.addVectors"}]},"group":null},{"id":35539,"order":9999,"name":"math.areClose","reflection":{"id":35539,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines if the given numbers are within 2 decimal places of each other.\\n\\nBecause [JavaScript numbers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) have limited precision, some calculations cannot be represented like they can in normal math.\\nFor example, "},{"kind":"code","text":"`1/3`"},{"kind":"text","text":" is "},{"kind":"code","text":"`0.3333...`"},{"kind":"text","text":" but in JavaScript "},{"kind":"code","text":"`1/3`"},{"kind":"text","text":" gives "},{"kind":"code","text":"`0.33333333333333331483`"},{"kind":"text","text":".\\nThis inaccuracy can cause problems when many calculations are done, which can cause numbers that appear to be the same to actually be different.\\n\\nThe solution is to check the difference between two numbers to see if it is below some arbitrary threshold.\\nIn this case, the threshold is "},{"kind":"code","text":"`0.005`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nDetermine 0.1 + 0.2 is close to 0.3.\\nconst first = 0.1 + 0.2;\\nconst second = 0.3;\\nconst result = math.areClose(first, second);\\nconst areEqual = first === second;\\nos.toast(\\"Equal: \\" + areEqual + \\", Close: \\" + result); // Equal: false, Close: true\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.areClose"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14060,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L14060"}],"parameters":[{"id":35540,"name":"first","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the first number to check."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":35541,"name":"second","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the second number to check."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}},"comment":{"text":"Determines if the given numbers are within 2 decimal places of each other.\\n\\nBecause [JavaScript numbers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) have limited precision, some calculations cannot be represented like they can in normal math.\\nFor example, `1/3` is `0.3333...` but in JavaScript `1/3` gives `0.33333333333333331483`.\\nThis inaccuracy can cause problems when many calculations are done, which can cause numbers that appear to be the same to actually be different.\\n\\nThe solution is to check the difference between two numbers to see if it is below some arbitrary threshold.\\nIn this case, the threshold is `0.005`.","tags":[{"tagName":"example","text":"```ts\\nDetermine 0.1 + 0.2 is close to 0.3.\\nconst first = 0.1 + 0.2;\\nconst second = 0.3;\\nconst result = math.areClose(first, second);\\nconst areEqual = first === second;\\nos.toast(\\"Equal: \\" + areEqual + \\", Close: \\" + result); // Equal: false, Close: true\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.areClose"}]},"group":null},{"id":35430,"order":9999,"name":"math.avg","reflection":{"id":35430,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the arithmetic mean of the given list of values.\\nThat is, the sum of the values divided by the number of values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the average of a list of numbers.\\nconst average = math.avg([4, 54.2, 31]);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the average #age of all the bots.\\nconst averageAge = math.avg(getBotTagValues(\'#age\'));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.avg"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13380,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13380"}],"parameters":[{"id":35431,"name":"list","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value that should be averaged.\\n            If it is a list, then the result will be sum(list)/list.length.\\n            If it is not a list, then the result will be the value converted to a number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Calculates the arithmetic mean of the given list of values.\\nThat is, the sum of the values divided by the number of values.","tags":[{"tagName":"example","text":"```ts\\nCalculate the average of a list of numbers.\\nconst average = math.avg([4, 54.2, 31]);\\n```"},{"tagName":"example","text":"```ts\\nCalculate the average #age of all the bots.\\nconst averageAge = math.avg(getBotTagValues(\'#age\'));\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.avg"}]},"group":null},{"id":35464,"order":9999,"name":"math.degreesToRadians","reflection":{"id":35464,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given number of [degrees](https://en.wikipedia.org/wiki/Degree_(angle)) to [radians](https://en.wikipedia.org/wiki/Radian) and returns the result.\\n\\nThis operation is equivalent to "},{"kind":"code","text":"`radians = degrees * (Math.PI / 180)`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the number of radians for a 90 degree angle\\nconst radians = math.degreesToRadians(90);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.degreesToRadians"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13600,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13600"}],"parameters":[{"id":35465,"name":"degrees","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number of degrees that should be converted to radians."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Converts the given number of [degrees](https://en.wikipedia.org/wiki/Degree_(angle)) to [radians](https://en.wikipedia.org/wiki/Radian) and returns the result.\\n\\nThis operation is equivalent to `radians = degrees * (Math.PI / 180)`.","tags":[{"tagName":"example","text":"```ts\\nGet the number of radians for a 90 degree angle\\nconst radians = math.degreesToRadians(90);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.degreesToRadians"}]},"group":null},{"id":35504,"order":9999,"name":"math.getAnchorPointOffset","reflection":{"id":35504,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the 3D position offset for the given anchor point and returns it.\\nThis is essentially "},{"kind":"text","text":"[`experiment.getAnchorPointPosition(bot, dimension, anchorPoint)`](ref:experiment.getAnchorPointPosition)"},{"kind":"text","text":" but without the bot\'s position/scale applied."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the anchor point offset for \\"bottom\\".\\nconst offset = math.getAnchorPointOffset(\\"bottom\\");\\nos.toast(offset);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.getAnchorPointOffset"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13739,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13739"}],"parameters":[{"id":35505,"name":"anchorPoint","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the anchor point that should be calculated. Can be any valid "},{"kind":"text","text":"[`#anchorPoint`](tags:anchorPoint)"},{"kind":"text","text":" value."}],"blockTags":[]},"type":{"type":"reference","target":40978,"name":"BotAnchorPoint","package":"@casual-simulation/aux-common","id":40978,"qualifiedName":"BotAnchorPoint"}}],"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},"comment":{"text":"Calculates the 3D position offset for the given anchor point and returns it.\\nThis is essentially experiment.getAnchorPointPosition but without the bot\'s position/scale applied.","tags":[{"tagName":"example","text":"```ts\\nCalculate the anchor point offset for \\"bottom\\".\\nconst offset = math.getAnchorPointOffset(\\"bottom\\");\\nos.toast(offset);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.getAnchorPointOffset"}]},"group":null},{"id":35472,"order":9999,"name":"math.getForwardDirection","reflection":{"id":35472,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the forward direction for the given rotation.\\n\\nUseful for finding where a bot would be pointing if it has a custom rotation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the direction that a pointer is pointing.\\nconst pointerRotation = os.getPointerRotation(\'mouse\');\\nconst pointerDirection = math.getForwardDirection(pointerRotation);\\nos.toast(pointerDirection);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.getForwardDirection"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13636,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13636"}],"parameters":[{"id":35473,"name":"pointerRotation","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The rotation that the pointer has represented in radians."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"reference","target":167,"name":"Rotation","package":"@casual-simulation/aux-common","id":167,"qualifiedName":"Rotation"},{"type":"reflection","declaration":{"id":35474,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":35478,"name":"w","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13642,"character":18,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13642"}],"type":{"type":"intrinsic","name":"number"}},{"id":35475,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13639,"character":18,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13639"}],"type":{"type":"intrinsic","name":"number"}},{"id":35476,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13640,"character":18,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13640"}],"type":{"type":"intrinsic","name":"number"}},{"id":35477,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13641,"character":18,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13641"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[35478,35475,35476,35477]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13638,"character":14,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13638"}]}}]}}],"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},"comment":{"text":"Gets the forward direction for the given rotation.\\n\\nUseful for finding where a bot would be pointing if it has a custom rotation.","tags":[{"tagName":"example","text":"```ts\\nGet the direction that a pointer is pointing.\\nconst pointerRotation = os.getPointerRotation(\'mouse\');\\nconst pointerDirection = math.getForwardDirection(pointerRotation);\\nos.toast(pointerDirection);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.getForwardDirection"}]},"group":null},{"id":35446,"order":9999,"name":"math.getSeededRandomNumberGenerator","reflection":{"id":35446,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new random number generator from the given seed and returns it.\\nBecause of how random number generators work, generators created with the same seed will return the same sequence of random numbers."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate two random number generators with the same seed.\\nlet random1 = math.getSeededRandomNumberGenerator(123);\\nlet random2 = math.getSeededRandomNumberGenerator(123);\\n\\nos.toast(random1.randomInt(0, 10) + \' == \' + random2.randomInt(0, 10) + \' == 9\');\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate a random number generator and store it for later\\nlet randomNumberGenerator = math.getSeededRandomNumberGenerator(123);\\n\\n// Store it in the bot variables so it can be used in other scripts.\\nbot.vars.randomNumberGenerator = randomNumberGenerator;\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.getSeededRandomNumberGenerator"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13466,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13466"}],"parameters":[{"id":35447,"name":"seed","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the number or string that should be used as the seed value for the random number generator.\\nIf omitted, then a seed will be chosen in a somewhat unpredictable manner."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":36244,"name":"PseudoRandomNumberGenerator","package":"@casual-simulation/aux-runtime","id":36244,"qualifiedName":"PseudoRandomNumberGenerator"}},"comment":{"text":"Creates a new random number generator from the given seed and returns it.\\nBecause of how random number generators work, generators created with the same seed will return the same sequence of random numbers.","tags":[{"tagName":"example","text":"```ts\\nCreate two random number generators with the same seed.\\nlet random1 = math.getSeededRandomNumberGenerator(123);\\nlet random2 = math.getSeededRandomNumberGenerator(123);\\n\\nos.toast(random1.randomInt(0, 10) + \' == \' + random2.randomInt(0, 10) + \' == 9\');\\n```"},{"tagName":"example","text":"```ts\\nCreate a random number generator and store it for later\\nlet randomNumberGenerator = math.getSeededRandomNumberGenerator(123);\\n\\n// Store it in the bot variables so it can be used in other scripts.\\nbot.vars.randomNumberGenerator = randomNumberGenerator;\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.getSeededRandomNumberGenerator"}]},"group":null},{"id":35481,"order":9999,"name":"math.intersectPlane","reflection":{"id":35481,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the 3D point that a ray starting at the given origin point and traveling in the given direction intersects the grid portal ground plane.\\nReturns null if the ray does not intersect the ground plane.\\n\\nUseful for calculating where on the ground something is pointing."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the spot on the ground that a pointer is pointing at.\\nconst pointerPosition = os.getPointerPosition(\'mouse\');\\nconst pointerRotation = os.getPointerRotation(\'mouse\');\\nconst pointerDirection = math.getForwardDirection(pointerRotation);\\nconst groundPoint = math.intersectPlane(pointerPosition, pointerDirection);\\nos.toast(groundPoint);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.intersectPlane"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13693,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13693"}],"parameters":[{"id":35482,"name":"origin","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the 3D point that the ray should start at."}],"blockTags":[]},"type":{"type":"reflection","declaration":{"id":35483,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":35484,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13694,"character":18,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13694"}],"type":{"type":"intrinsic","name":"number"}},{"id":35485,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13694,"character":29,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13694"}],"type":{"type":"intrinsic","name":"number"}},{"id":35486,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13694,"character":40,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13694"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[35484,35485,35486]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13694,"character":16,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13694"}]}}},{"id":35487,"name":"direction","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the direction that the ray is traveling along."}],"blockTags":[]},"type":{"type":"reflection","declaration":{"id":35488,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":35489,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13695,"character":21,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13695"}],"type":{"type":"intrinsic","name":"number"}},{"id":35490,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13695,"character":32,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13695"}],"type":{"type":"intrinsic","name":"number"}},{"id":35491,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13695,"character":43,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13695"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[35489,35490,35491]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13695,"character":19,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13695"}]}}},{"id":35492,"name":"planeNormal","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the normal vector that the plane should use.\\nFor 2D planes, the normal vector is the 3D direction that is perpendicular to the the surface of the plane.\\nFor example, a plane that covers the entire XY surface has a normal vector equal to "},{"kind":"code","text":"`\u27a1\ufe0f0,0,1`"},{"kind":"text","text":", while a plane that covers the YZ surface has a normal vector equal to "},{"kind":"code","text":"`\u27a1\ufe0f1,0,0`"},{"kind":"text","text":".\\nThis parameter defaults to "},{"kind":"code","text":"`\u27a1\ufe0f0,0,1`"},{"kind":"text","text":"."}],"blockTags":[]},"type":{"type":"reflection","declaration":{"id":35493,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":35494,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13696,"character":24,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13696"}],"type":{"type":"intrinsic","name":"number"}},{"id":35495,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13696,"character":35,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13696"}],"type":{"type":"intrinsic","name":"number"}},{"id":35496,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13696,"character":46,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13696"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[35494,35495,35496]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13696,"character":22,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13696"}]}}},{"id":35497,"name":"planeOrigin","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the 3D position that the center of the plane should travel through. Defaults to "},{"kind":"code","text":"`\u27a1\ufe0f0,0,0`"},{"kind":"text","text":"."}],"blockTags":[]},"type":{"type":"reflection","declaration":{"id":35498,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":35499,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13697,"character":24,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13697"}],"type":{"type":"intrinsic","name":"number"}},{"id":35500,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13697,"character":35,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13697"}],"type":{"type":"intrinsic","name":"number"}},{"id":35501,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13697,"character":46,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13697"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[35499,35500,35501]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13697,"character":22,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13697"}]}}}],"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},"comment":{"text":"Calculates the 3D point that a ray starting at the given origin point and traveling in the given direction intersects the grid portal ground plane.\\nReturns null if the ray does not intersect the ground plane.\\n\\nUseful for calculating where on the ground something is pointing.","tags":[{"tagName":"example","text":"```ts\\nGet the spot on the ground that a pointer is pointing at.\\nconst pointerPosition = os.getPointerPosition(\'mouse\');\\nconst pointerRotation = os.getPointerRotation(\'mouse\');\\nconst pointerDirection = math.getForwardDirection(pointerRotation);\\nconst groundPoint = math.intersectPlane(pointerPosition, pointerDirection);\\nos.toast(groundPoint);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.intersectPlane"}]},"group":null},{"id":35518,"order":9999,"name":"math.negateVector","reflection":{"id":35518,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mathematically negates the given vector and returns the result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector "},{"kind":"code","text":"`{ x: 1, y: 2, z: 3 }`"},{"kind":"text","text":" represents the point "},{"kind":"code","text":"`(1, 2, 3)`"},{"kind":"text","text":" in 3D space where "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", and "},{"kind":"code","text":"`z`"},{"kind":"text","text":" are the names of the dimensions (or axes)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nNegate a 3D point.\\nconst result = math.negateVector(\\n    { x: 5, y: 6, z: 7 }\\n);\\n\\nos.toast(result); // { x: -5, y: -6, z: -7 }\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.negateVector"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13896,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13896"}],"typeParameter":[{"id":35519,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":35520,"name":"vector","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the vector that should be negated."}],"blockTags":[]},"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}}],"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}},"comment":{"text":"Mathematically negates the given vector and returns the result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector `{ x: 1, y: 2, z: 3 }` represents the point `(1, 2, 3)` in 3D space where `x`, `y`, and `z` are the names of the dimensions (or axes).","tags":[{"tagName":"example","text":"```ts\\nNegate a 3D point.\\nconst result = math.negateVector(\\n    { x: 5, y: 6, z: 7 }\\n);\\n\\nos.toast(result); // { x: -5, y: -6, z: -7 }\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.negateVector"}]},"group":null},{"id":35523,"order":9999,"name":"math.normalizeVector","reflection":{"id":35523,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Normalizes the given vector. The result is a vector that has the same direction as the given vector but has a length/magnitude of 1.\\n\\nMathemematically, this is the same as finding the "},{"kind":"text","text":"[`math.vectorLength(vector)`](ref:math.vectorLength)"},{"kind":"text","text":" and dividing each component in the vector by it.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector "},{"kind":"code","text":"`{ x: 1, y: 2, z: 3 }`"},{"kind":"text","text":" represents the point "},{"kind":"code","text":"`(1, 2, 3)`"},{"kind":"text","text":" in 3D space where "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", and "},{"kind":"code","text":"`z`"},{"kind":"text","text":" are the names of the dimensions (or axes)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nNormalize a 3D point.\\nconst result = math.normalizeVector(\\n    { x: 1, y: 2, z: 3 }\\n);\\n\\nos.toast(result);\\n// x: 0.2672612419124244\\n// y: 0.5345224838248488\\n// z: 0.8017837257372732\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.normalizeVector"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13938,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13938"}],"typeParameter":[{"id":35524,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":35525,"name":"vector","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the vector that should be normalized."}],"blockTags":[]},"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}}],"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}},"comment":{"text":"Normalizes the given vector. The result is a vector that has the same direction as the given vector but has a length/magnitude of 1.\\n\\nMathemematically, this is the same as finding the math.vectorLength and dividing each component in the vector by it.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector `{ x: 1, y: 2, z: 3 }` represents the point `(1, 2, 3)` in 3D space where `x`, `y`, and `z` are the names of the dimensions (or axes).","tags":[{"tagName":"example","text":"```ts\\nNormalize a 3D point.\\nconst result = math.normalizeVector(\\n    { x: 1, y: 2, z: 3 }\\n);\\n\\nos.toast(result);\\n// x: 0.2672612419124244\\n// y: 0.5345224838248488\\n// z: 0.8017837257372732\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.normalizeVector"}]},"group":null},{"id":35468,"order":9999,"name":"math.radiansToDegrees","reflection":{"id":35468,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given number of [radians](https://en.wikipedia.org/wiki/Radian) to [degrees](https://en.wikipedia.org/wiki/Degree_(angle)) and returns the result.\\n\\nThis operation is equivalent to "},{"kind":"code","text":"`degrees = radians * (180 / Math.PI)`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the number of degrees for a Math.PI / 2 angle\\nconst degrees = math.radiansToDegrees(Math.PI / 2);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.radiansToDegrees"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13617,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13617"}],"parameters":[{"id":35469,"name":"radians","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number of radians that should be converted to degrees."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Converts the given number of [radians](https://en.wikipedia.org/wiki/Radian) to [degrees](https://en.wikipedia.org/wiki/Degree_(angle)) and returns the result.\\n\\nThis operation is equivalent to `degrees = radians * (180 / Math.PI)`.","tags":[{"tagName":"example","text":"```ts\\nGet the number of degrees for a Math.PI / 2 angle\\nconst degrees = math.radiansToDegrees(Math.PI / 2);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.radiansToDegrees"}]},"group":null},{"id":35459,"order":9999,"name":"math.random","reflection":{"id":35459,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random number between the given minimum and maximum values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a random number between 0 and Math.PI.\\nconst number = math.random(0, Math.PI);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.random"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13548,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13548"}],"parameters":[{"id":35460,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The smallest allowed value."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":35461,"name":"max","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The largest allowed value."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Generates a random number between the given minimum and maximum values.","tags":[{"tagName":"example","text":"```ts\\nGenerate a random number between 0 and Math.PI.\\nconst number = math.random(0, Math.PI);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.random"}]},"group":null},{"id":35454,"order":9999,"name":"math.randomInt","reflection":{"id":35454,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random integer number between the given minimum and maximum values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a random number between 5 and 10.\\nconst number = math.randomInt(5, 10);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.randomInt"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13532,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13532"}],"parameters":[{"id":35455,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The smallest allowed value."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":35456,"name":"max","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The largest allowed value."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Generates a random integer number between the given minimum and maximum values.","tags":[{"tagName":"example","text":"```ts\\nGenerate a random number between 5 and 10.\\nconst number = math.randomInt(5, 10);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.randomInt"}]},"group":null},{"id":35533,"order":9999,"name":"math.scaleVector","reflection":{"id":35533,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplies each property of the given vector by the given scale and returns the result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector "},{"kind":"code","text":"`{ x: 1, y: 2, z: 3 }`"},{"kind":"text","text":" represents the point "},{"kind":"code","text":"`(1, 2, 3)`"},{"kind":"text","text":" in 3D space where "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", and "},{"kind":"code","text":"`z`"},{"kind":"text","text":" are the names of the dimensions (or axes)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nScale a 3D point by 5.\\nconst result = math.scaleVector(\\n    { x: 5, y: 6, z: 7 },\\n    5\\n);\\n\\nos.toast(result); // { x: 25, y: 30, z: 35 }\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.scaleVector"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14018,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L14018"}],"typeParameter":[{"id":35534,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":35535,"name":"vector","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the vector that should be scaled."}],"blockTags":[]},"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}},{"id":35536,"name":"scale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number that the vector should be multiplied by."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}},"comment":{"text":"Multiplies each property of the given vector by the given scale and returns the result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector `{ x: 1, y: 2, z: 3 }` represents the point `(1, 2, 3)` in 3D space where `x`, `y`, and `z` are the names of the dimensions (or axes).","tags":[{"tagName":"example","text":"```ts\\nScale a 3D point by 5.\\nconst result = math.scaleVector(\\n    { x: 5, y: 6, z: 7 },\\n    5\\n);\\n\\nos.toast(result); // { x: 25, y: 30, z: 35 }\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.scaleVector"}]},"group":null},{"id":35450,"order":9999,"name":"math.setRandomSeed","reflection":{"id":35450,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the seed that should be used for the random numbers generated with "},{"kind":"text","text":"[`math.randomInt(min, max)`](ref:math.randomInt)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`math.random(min, max)`](ref:math.random)"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSet the random seed for math.random() and math.randomInt().\\nmath.setRandomSeed(123);\\n\\nexpect(math.randomInt(0, 10)).toBe(9);\\nexpect(math.random()).toBe(0.36078753814001446);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nClear the random seed.\\nmath.setRandomSeed(null);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.setRandomSeed"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13509,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13509"}],"parameters":[{"id":35451,"name":"seed","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number or string that should be used as the seed value for the internal random number generator.\\nIf null is provided, then a seed will be chosen in a somewhat unpredictable manner."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}},"comment":{"text":"Sets the seed that should be used for the random numbers generated with math.randomInt and math.random.","tags":[{"tagName":"example","text":"```ts\\nSet the random seed for math.random() and math.randomInt().\\nmath.setRandomSeed(123);\\n\\nexpect(math.randomInt(0, 10)).toBe(9);\\nexpect(math.random()).toBe(0.36078753814001446);\\n```"},{"tagName":"example","text":"```ts\\nClear the random seed.\\nmath.setRandomSeed(null);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.setRandomSeed"}]},"group":null},{"id":35434,"order":9999,"name":"math.sqrt","reflection":{"id":35434,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the square root of the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the square root of 4.\\nconst rootOf4 = math.sqrt(4);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.sqrt"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13400,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13400"}],"parameters":[{"id":35435,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value that the square root should be calculated for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Calculates the square root of the given value.","tags":[{"tagName":"example","text":"```ts\\nCalculate the square root of 4.\\nconst rootOf4 = math.sqrt(4);\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.sqrt"}]},"group":null},{"id":35442,"order":9999,"name":"math.stdDev","reflection":{"id":35442,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the [standard deviation](https://en.wikipedia.org/wiki/Standard_deviation for the given list of values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the standard deviation of a list of numbers.\\nconst standardDeviation = math.stdDev([2, 97, 745]);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the standard deviation of the #age of all the bots.\\nconst ageDeviation = math.stdDev(getBotTagValues(\'#age\'));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.stdDev"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13432,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13432"}],"parameters":[{"id":35443,"name":"list","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the list of values that the standard deviation should be calculated for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Calculates the [standard deviation](https://en.wikipedia.org/wiki/Standard_deviation for the given list of values.","tags":[{"tagName":"example","text":"```ts\\nCalculate the standard deviation of a list of numbers.\\nconst standardDeviation = math.stdDev([2, 97, 745]);\\n```"},{"tagName":"example","text":"```ts\\nCalculate the standard deviation of the #age of all the bots.\\nconst ageDeviation = math.stdDev(getBotTagValues(\'#age\'));\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.stdDev"}]},"group":null},{"id":35513,"order":9999,"name":"math.subtractVectors","reflection":{"id":35513,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mathematically subtracts the given vectors from each other and returns the result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector "},{"kind":"code","text":"`{ x: 1, y: 2, z: 3 }`"},{"kind":"text","text":" represents the point "},{"kind":"code","text":"`(1, 2, 3)`"},{"kind":"text","text":" in 3D space where "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", and "},{"kind":"code","text":"`z`"},{"kind":"text","text":" are the names of the dimensions (or axes)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSubtract two 3D points from each other.\\nconst result = math.addVectors(\\n    { x: 5, y: 6, z: 7 },\\n    { x: 1, y: 2, z: 3 },\\n);\\n\\nos.toast(result); // { x: 4, y: 4, z: 4 }\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.subtractVectors"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13835,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13835"}],"typeParameter":[{"id":35514,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":35515,"name":"vectors","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the vectors that should be subtracted from each other."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}},"comment":{"text":"Mathematically subtracts the given vectors from each other and returns the result.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector `{ x: 1, y: 2, z: 3 }` represents the point `(1, 2, 3)` in 3D space where `x`, `y`, and `z` are the names of the dimensions (or axes).","tags":[{"tagName":"example","text":"```ts\\nSubtract two 3D points from each other.\\nconst result = math.addVectors(\\n    { x: 5, y: 6, z: 7 },\\n    { x: 1, y: 2, z: 3 },\\n);\\n\\nos.toast(result); // { x: 4, y: 4, z: 4 }\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.subtractVectors"}]},"group":null},{"id":35426,"order":9999,"name":"math.sum","reflection":{"id":35426,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the numerical sum of the given values.\\n\\nIf any value in the list is not a number, it will be converted to one.\\nIf the given value is not an array, then it will be converted to a number and returned."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the sum of a list of numbers.\\nconst total = math.sum([92, 123, 21]);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the total #age of all the bots.\\nconst totalAge = math.sum(getBotTagValues(\'#age\'));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Math Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Math"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Math actions are useful for performing math operations on bots and numbers."}]},{"tag":"@docname","content":[{"kind":"text","text":"math.sum"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13346,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13346"}],"parameters":[{"id":35427,"name":"list","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the list of values that should be summed up. If any value in the list is not a number, it will be converted to one.\\nIf the list is not actually a list, then it will be converted to a number and returned."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Calculates the numerical sum of the given values.\\n\\nIf any value in the list is not a number, it will be converted to one.\\nIf the given value is not an array, then it will be converted to a number and returned.","tags":[{"tagName":"example","text":"```ts\\nCalculate the sum of a list of numbers.\\nconst total = math.sum([92, 123, 21]);\\n```"},{"tagName":"example","text":"```ts\\nCalculate the total #age of all the bots.\\nconst totalAge = math.sum(getBotTagValues(\'#age\'));\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"doctitle","text":"Math Actions"},{"tagName":"docsidebar","text":"Math"},{"tagName":"docdescription","text":"Math actions are useful for performing math operations on bots and numbers."},{"tagName":"docname","text":"math.sum"}]},"group":null},{"id":35528,"order":9999,"name":"math.vectorLength","reflection":{"id":35528,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the length (i.e. magnitude) of the given vector.\\n\\nMathemematically, this is equivalent to "},{"kind":"code","text":"`length = sqrt(sum(components.map(c => c * c)))`"},{"kind":"text","text":". As a consequence, vectors that are normalized always have a length of 1.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector "},{"kind":"code","text":"`{ x: 1, y: 2, z: 3 }`"},{"kind":"text","text":" represents the point "},{"kind":"code","text":"`(1, 2, 3)`"},{"kind":"text","text":" in 3D space where "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", and "},{"kind":"code","text":"`z`"},{"kind":"text","text":" are the names of the dimensions (or axes)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCalculate the length of a 3D point\\nconst result = math.vectorLength(\\n    { x: 1, y: 2, z: 3 }\\n);\\n\\nos.toast(result); // 3.7416573867739413\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/math"}]},{"tag":"@docname","content":[{"kind":"text","text":"math.vectorLength"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":13983,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/2b5a2f4d7/src/aux-runtime/runtime/AuxLibrary.ts#L13983"}],"typeParameter":[{"id":35529,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":35530,"name":"vector","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the vector to calculate the length of."}],"blockTags":[]},"type":{"type":"reference","target":-1,"name":"T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Calculates the length (i.e. magnitude) of the given vector.\\n\\nMathemematically, this is equivalent to `length = sqrt(sum(components.map(c => c * c)))`. As a consequence, vectors that are normalized always have a length of 1.\\n\\nA vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\\nFor example, the vector `{ x: 1, y: 2, z: 3 }` represents the point `(1, 2, 3)` in 3D space where `x`, `y`, and `z` are the names of the dimensions (or axes).","tags":[{"tagName":"example","text":"```ts\\nCalculate the length of a 3D point\\nconst result = math.vectorLength(\\n    { x: 1, y: 2, z: 3 }\\n);\\n\\nos.toast(result); // 3.7416573867739413\\n```"},{"tagName":"dochash","text":"actions/math"},{"tagName":"docname","text":"math.vectorLength"}]},"group":null}],"references":{"CasualOSError":"types/error","id-41289":"CasualOSError","Quaternion":"types/math/rotations","id-135":"Quaternion","Rotation":"types/math/rotations","id-167":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-41338":"AIChatMessage","AIChatOptions":"types/ai","id-39298":"AIChatOptions","AIDataContent":"types/ai","id-41347":"AIDataContent","AIGenerateImageSuccess":"types/ai","id-35883":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-39338":"AIGenerateImageOptions","AIGenerateSkyboxAction":"types/ai","id-39305":"AIGenerateSkyboxAction","AIGenerateSkyboxBlockadeLabsOptions":"types/ai","id-39316":"AIGenerateSkyboxBlockadeLabsOptions","AIGenerateSkyboxOptions":"types/ai","id-39313":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-35876":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-35880":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-35886":"AIGeneratedImage","AISloydGenerateModelOptions":"types/ai","id-39374":"AISloydGenerateModelOptions","AITextContent":"types/ai","id-41345":"AITextContent","AIUrlContent":"types/ai","id-41350":"AIUrlContent","ARSupportedAction":"types/os/xr","id-37525":"ARSupportedAction","AddCountFailure":"types/records/events","id-43554":"AddCountFailure","AddCountSuccess":"types/records/events","id-43549":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-37658":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-37662":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-38073":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-35891":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-36184":"AttachDebuggerOptions","AuthData":"types/os/records","id-37834":"AuthData","DebuggerOptions":"types/debuggers/common","id-36200":"DebuggerOptions","CasualOSDevice":"types/os/system","id-41257":"CasualOSDevice","CasualOSVersion":"types/os/system","id-41249":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-213":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-37738":"BeginRecordingAction","BotIntersection":"types/os/portals","id-36393":"BotIntersection","BotTagMasks":"types/core","id-40871":"BotTagMasks","BotTags":"types/core","id-40874":"BotTags","BotState":"types/core","id-40949":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-37986":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-37365":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-37898":"CalculateRayFromCameraAction","CalculateScreenCoordinatesFromViewportCoordinatesAction":"types/os/portals","id-37912":"CalculateScreenCoordinatesFromViewportCoordinatesAction","CalculateViewportCoordinatesFromPositionAction":"types/os/portals","id-37905":"CalculateViewportCoordinatesFromPositionAction","CalculateViewportCoordinatesFromScreenCoordinatesAction":"types/os/portals","id-37919":"CalculateViewportCoordinatesFromScreenCoordinatesAction","CancelSoundAction":"types/os/audio","id-37371":"CancelSoundAction","CompiledBotListeners":"types/core","id-40824":"CompiledBotListeners","CompiledBotModules":"types/core","id-40830":"CompiledBotModules","ConfigureWakeLockAction":"types/os/portals","id-38060":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-37860":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-37856":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-42442":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-42438":"CreatePublicRecordKeySuccess","DataPermission":"types/permissions","id-325":"DataPermission","DebuggerCallFrame":"types/debuggers/common","id-36224":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-36232":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-36218":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-36178":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-36173":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-36238":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-37848":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-37377":"DownloadAction","Easing":"types/animation","id-37475":"Easing","EnableARAction":"types/os/xr","id-37521":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-37452":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-37713":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-37539":"EnablePOVAction","EnableVRAction":"types/os/xr","id-37535":"EnableVRAction","EnableXROptions":"types/os/xr","id-37519":"EnableXROptions","EndRecordingAction":"types/os/audio","id-37750":"EndRecordingAction","EraseDataFailure":"types/records/data","id-43040":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-43036":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-43221":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-43217":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-216":"EulerAnglesRotation","EventPermission":"types/permissions","id-425":"EventPermission","ExitFullscreenAction":"types/os/portals","id-37554":"ExitFullscreenAction","FilePermission":"types/permissions","id-373":"FilePermission","FilePermissionOptions":"types/permissions","id-360":"FilePermissionOptions","FocusOnOptions":"types/os/camera","id-37081":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-37093":"FocusOnRotation","FormAnimationData":"types/os/animations","id-38041":"FormAnimationData","FromToRotation":"types/math/rotations","id-210":"FromToRotation","GenericError":"types/error","id-41286":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-37878":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-43565":"GetCountFailure","GetCountSuccess":"types/records/events","id-43559":"GetCountSuccess","GetDataFailure":"types/records/data","id-43031":"GetDataFailure","GetDataSuccess":"types/records/data","id-43022":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-37791":"GetGeolocationAction","GetLoomMetadataAction":"types/loom","id-37954":"GetLoomMetadataAction","GetRoomOptionsFailure":"types/os/portals","id-36345":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-36341":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-36379":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-36374":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-36355":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-36350":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-37782":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-38066":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-37818":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-47357":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-47355":"GrantMarkerPermissionSuccess","GrantResourcePermissionFailure":"types/records/policies","id-47380":"GrantResourcePermissionFailure","GrantResourcePermissionSuccess":"types/records/policies","id-47378":"GrantResourcePermissionSuccess","GrantRoleFailure":"types/records/roles","id-47439":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-47437":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-37077":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-37066":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-37610":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-37615":"HtmlAppMethodCallAction","HumePermission":"types/permissions","id-656":"HumePermission","ImageClassifierOptions":"types/os/image-classification","id-37203":"ImageClassifierOptions","InstPermission":"types/permissions","id-551":"InstPermission","InstUpdate":"types/os/spaces","id-41282":"InstUpdate","JoinRoomFailure":"types/os/portals","id-36317":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-36314":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-36326":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-36323":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-43062":"ListDataFailure","ListDataSuccess":"types/records/data","id-43052":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-38035":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-42485":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-42482":"ListStudiosSuccess","ListedData":"types/records/data","id-43058":"ListedData","MarkerPermission":"types/permissions","id-47569":"MarkerPermission","ResourcePermission":"types/permissions","id-47558":"ResourcePermission","ListedStudio":"types/records/studios","id-42489":"ListedStudio","LoadInstAction":"types/os/spaces","id-37243":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-37437":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-37468":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-37489":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-37504":"LocalTweenAction","LookRotation":"types/math/rotations","id-233":"LookRotation","LoomPermission":"types/permissions","id-586":"LoomPermission","LoomVideo":"types/loom","id-37967":"LoomVideo","LoomVideoEmbedMetadata":"types/loom","id-37978":"LoomVideoEmbedMetadata","MediaPermissionAction":"types/os/media","id-37871":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-37868":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-37755":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-37762":"MeetFunctionAction","NodeReference":"types/os/portals","id-37636":"NodeReference","Debugger":"types/debuggers/debugger","id-35998":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-36190":"NormalDebuggerOptions","NotificationPermission":"types/permissions","id-726":"NotificationPermission","OpenCircleWipeAction":"types/os/portals","id-37648":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-37655":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-37177":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-37165":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-37354":"OpenURLAction","ParsedBotLink":"types/core","id-40815":"ParsedBotLink","PartialBotState":"types/core","id-40952":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-36054":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-36195":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-36210":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-36205":"PauseTriggerOptions","Photo":"types/camera","id-37161":"Photo","PlaySoundAction":"types/os/audio","id-37358":"PlaySoundAction","Point2D":"types/os/portals","id-38053":"Point2D","Point3D":"types/os/portals","id-38056":"Point3D","PossiblePauseTriggerLocation":"types/debuggers/common","id-36168":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-36244":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-226":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-37883":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-37890":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-36402":"RaycastRay","RaycastResult":"types/os/portals","id-36390":"RaycastResult","RecordActionOptions":"types/records/extra","id-39385":"RecordActionOptions","RecordDataFailure":"types/records/data","id-43014":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-43010":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-36287":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-36283":"RecordFileSuccess","RecordFileRequest":"types/records/files","id-43189":"RecordFileRequest","RecordLoomAction":"types/loom","id-37939":"RecordLoomAction","RecordLoomOptions":"types/loom","id-37945":"RecordLoomOptions","RecordedFile":"types/experimental","id-37813":"RecordedFile","Recording":"types/experimental","id-37811":"Recording","RecordingOptions":"types/experimental","id-37730":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-37568":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-37574":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-37587":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-37645":"RegisterPrefixOptions","RejectAction":"types/os/event","id-37404":"RejectAction","RemoteAction":"types/os/event","id-57525":"RemoteAction","ReportInstAction":"types/os/moderation","id-37823":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-37828":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-37552":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-47368":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-47366":"RevokeMarkerPermissionSuccess","RevokePermissionFailure":"types/records/policies","id-47402":"RevokePermissionFailure","RevokePermissionSuccess":"types/records/policies","id-47400":"RevokePermissionSuccess","RevokeResourcePermissionFailure":"types/records/policies","id-47391":"RevokeResourcePermissionFailure","RevokeResourcePermissionSuccess":"types/records/policies","id-47389":"RevokeResourcePermissionSuccess","RevokeRoleFailure":"types/records/roles","id-47450":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-47448":"RevokeRoleSuccess","RolePermission":"types/permissions","id-504":"RolePermission","RolePermissionOptions":"types/permissions","id-495":"RolePermissionOptions","RoomJoinOptions":"types/os/portals","id-40525":"RoomJoinOptions","RoomOptions":"types/os/portals","id-40521":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-40580":"RoomRemoteOptions","RoomTrackOptions":"types/os/rooms","id-40558":"RoomTrackOptions","RunScriptAction":"types/os/system","id-37424":"RunScriptAction","RuntimeBot":"types/core","id-40766":"RuntimeBot","RuntimeBotLinks":"types/core","id-40818":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-40821":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-224":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-37624":"SerializableMutationRecord","SessionSelector":"types/os/event","id-35859":"SessionSelector","SetAppOutputAction":"types/os/portals","id-37599":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-37407":"SetClipboardAction","SetRoomOptionsFailure":"types/os/portals","id-36335":"SetRoomOptionsFailure","SetRoomOptionsSuccess":"types/os/portals","id-36332":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-40555":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-36367":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-36362":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-37560":"ShareAction","ShareOptions":"types/os/input","id-37556":"ShareOptions","ShowChatBarAction":"types/os/input","id-37410":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-37418":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-37335":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-37341":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-37072":"ShowHtmlAction","ShowInputItem":"types/os/input","id-37392":"ShowInputItem","ShowInputOptions":"types/os/input","id-37383":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-37548":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-37052":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-37057":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-37430":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-37432":"ShowUploadFilesAction","SloydPermission":"types/permissions","id-621":"SloydPermission","SnapAxis":"types/os/portals","id-37674":"SnapAxis","SnapGrid":"types/os/portals","id-37692":"SnapGrid","SnapGridTarget":"types/os/portals","id-36292":"SnapGridTarget","SnapPoint":"types/os/portals","id-37667":"SnapPoint","SpeakTextAction":"types/os/audio","id-37773":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-35913":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-38005":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-37992":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-38027":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-38024":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-37797":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-37787":"SyntheticVoice","TweenOptions":"types/experimental","id-35917":"TweenOptions","UnloadInstAction":"types/os/spaces","id-37247":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-37581":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-37594":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-37807":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-43579":"UpdateEventRecordFailure","UpdateEventRecordRequest":"types/records/events","id-43569":"UpdateEventRecordRequest","UpdateEventRecordSuccess":"types/records/events","id-43577":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-37604":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-36405":"UploadedFile","VRSupportedAction":"types/os/xr","id-37530":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-38071":"WakeLockConfiguration","WatchLoomAction":"types/loom","id-37948":"WatchLoomAction","WebhookOptions":"types/web","id-35864":"WebhookOptions","WebhookPermission":"types/permissions","id-691":"WebhookPermission","WebhookResult":"types/web","id-36275":"WebhookResult","AIChatContent":"types/ai","id-41344":"AIChatContent","AIChatMessageRole":"types/ai","id-41337":"AIChatMessageRole","ActionKinds":"types/permissions","id-271":"ActionKinds","AddCountResult":"types/records/events","id-43548":"AddCountResult","AvailablePermissions":"types/permissions","id-283":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-37186":"BarcodeFormat","BotAction":"types/os/event","id-36971":"BotAction","BotAnchorPoint":"types/core","id-40978":"BotAnchorPoint","BotFilter":"types/core","id-35901":"BotFilter","BotSpace":"types/core","id-40861":"BotSpace","CameraPortal":"types/os/portals","id-38052":"CameraPortal","CameraType":"types/os/camera","id-37140":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-42437":"CreatePublicRecordKeyResult","DataActionKinds":"types/permissions","id-272":"DataActionKinds","EaseMode":"types/animation","id-37474":"EaseMode","EaseType":"types/animation","id-37473":"EaseType","EraseDataResult":"types/records/data","id-43035":"EraseDataResult","EraseFileResult":"types/records/files","id-43216":"EraseFileResult","EventActionKinds":"types/permissions","id-274":"EventActionKinds","FileActionKinds":"types/permissions","id-273":"FileActionKinds","Geolocation":"types/os/geolocation","id-37796":"Geolocation","GetCountResult":"types/records/events","id-43558":"GetCountResult","GetDataResult":"types/records/data","id-43021":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-36340":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-36373":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-36349":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-47354":"GrantMarkerPermissionResult","GrantResourcePermissionResult":"types/records/policies","id-47377":"GrantResourcePermissionResult","GrantRoleResult":"types/records/roles","id-47436":"GrantRoleResult","HumeActionKinds":"types/permissions","id-280":"HumeActionKinds","InstActionKinds":"types/permissions","id-277":"InstActionKinds","JoinRoomResult":"types/os/portals","id-36313":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-36322":"LeaveRoomResult","ListDataResult":"types/records/data","id-43051":"ListDataResult","ListStudiosResult":"types/records/studios","id-42481":"ListStudiosResult","LoomActionKinds":"types/permissions","id-278":"LoomActionKinds","MarkerActionKinds":"types/permissions","id-275":"MarkerActionKinds","Mod":"types/core","id-35858":"Mod","NotificationActionKinds":"types/permissions","id-282":"NotificationActionKinds","PortalType":"types/core","id-40864":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-36172":"PossiblePauseTriggerStates","PublicRecordKeyPolicy":"types/records/key","id-42850":"PublicRecordKeyPolicy","RecordDataResult":"types/records/data","id-43009":"RecordDataResult","RecordFileResult":"types/records/files","id-36282":"RecordFileResult","RecordUserPolicyType":"types/records/extra","id-39393":"RecordUserPolicyType","ResourceKinds":"types/permissions","id-250":"ResourceKinds","RevokeMarkerPermissionResult":"types/records/policies","id-47365":"RevokeMarkerPermissionResult","RevokeResourcePermissionResult":"types/records/policies","id-47388":"RevokeResourcePermissionResult","RevokeRoleResult":"types/records/roles","id-47447":"RevokeRoleResult","RoleActionKinds":"types/permissions","id-276":"RoleActionKinds","SetRoomOptionsResult":"types/os/portals","id-36331":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-36361":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-37396":"ShowInputSuptype","ShowInputType":"types/os/input","id-37395":"ShowInputType","SloydActionKinds":"types/permissions","id-279":"SloydActionKinds","SnapTarget":"types/os/portals","id-37686":"SnapTarget","StudioAssignmentRole":"types/records/studios","id-42813":"StudioAssignmentRole","SubjectType":"types/permissions","id-238":"SubjectType","TagFilter":"types/core","id-35854":"TagFilter","TrackKind":"types/records/rooms","id-40570":"TrackKind","TrackSource":"types/records/rooms","id-40571":"TrackSource","TrackVideoQuality":"types/os/rooms","id-40572":"TrackVideoQuality","UpdateEventRecordResult":"types/records/events","id-43576":"UpdateEventRecordResult","UserPolicy":"types/records/data","id-43136":"UserPolicy","WebhookActionKinds":"types/permissions","id-281":"WebhookActionKinds","animateTag-byOptions":"actions/os/animations","id-1248":"animateTag-byOptions","getbot-tag":"actions/data","id-913":"getbot-tag","getbots-tag":"actions/data","id-897":"getbots-tag","animateTag-byTag":"actions/os/animations","id-1242":"animateTag-byTag","changeState":"actions/data","id-1058":"changeState","create":"actions/data","id-1042":"create","destroy":"actions/data","id-1046":"destroy","getbot-filters":"actions/data","id-906":"getbot-filters","getbots-filters":"actions/data","id-890":"getbots-filters","priorityShout":"actions/os/event","id-1107":"priorityShout","shout":"actions/os/event","id-1120":"shout","updateBotLinks":"actions/data","id-1080":"updateBotLinks","whisper":"actions/os/event","id-1146":"whisper","action.perform":"actions/os/event","id-35332":"action.perform","action.reject":"actions/os/event","id-35336":"action.reject","ai.chat-string":"actions/ai","id-1307":"ai.chat-string","ai.chat-message":"actions/ai","id-1310":"ai.chat-message","ai.chat-messages":"actions/ai","id-1313":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-1326":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-1330":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-1318":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-1322":"ai.generateSkybox-request","ai.hume.getAccessToken":"actions/ai","id-1337":"ai.hume.getAccessToken","ai.sloyd.generateModel":"actions/ai","id-1343":"ai.sloyd.generateModel","ai.stream.chat-string":"actions/ai","id-1350":"ai.stream.chat-string","ai.stream.chat-message":"actions/ai","id-1353":"ai.stream.chat-message","ai.stream.chat-messages":"actions/ai","id-1356":"ai.stream.chat-messages","applyDiffToSnapshot":"actions/data","id-963":"applyDiffToSnapshot","applyMod":"actions/mods","id-1032":"applyMod","assert":"actions/debuggers","id-1291":"assert","assertEqual":"actions/debuggers","id-1296":"assertEqual","atPosition":"actions/bot-filters","id-1177":"atPosition","byCreator":"actions/bot-filters","id-1198":"byCreator","byID":"actions/bot-filters","id-1165":"byID","byMod":"actions/bot-filters","id-1169":"byMod","bySpace":"actions/bot-filters","id-1194":"bySpace","byTag":"actions/bot-filters","id-1160":"byTag","bytes.fromBase64String":"actions/bytes","id-35568":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-35585":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-35576":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-35564":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-35580":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-35572":"bytes.toHexString","clearAnimations":"actions/os/animations","id-1262":"clearAnimations","clearTagMasks":"actions/data","id-986":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-35591":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-35597":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-35628":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-35621":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-35686":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-35681":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-35692":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-35677":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-35673":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-35657":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-35647":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-35652":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-35667":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-35696":"crypto.keypair","crypto.sha256":"actions/crypto","id-35613":"crypto.sha256","crypto.sha512":"actions/crypto","id-35617":"crypto.sha512","crypto.sign":"actions/crypto","id-35700":"crypto.sign","deleteTagMaskText":"actions/data","id-1013":"deleteTagMaskText","deleteTagText":"actions/data","id-1006":"deleteTagText","diffSnapshots":"actions/data","id-958":"diffSnapshots","either":"actions/bot-filters","id-1202":"either","os.beginAudioRecording":"actions/os/audio","id-35384":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-35391":"experiment.beginRecording","experiment.createStaticHtmlFromBots":"actions/experimental","id-35379":"experiment.createStaticHtmlFromBots","os.endAudioRecording":"actions/os/audio","id-35388":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-35395":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-35369":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-35403":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-35342":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-35347":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-35358":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-35398":"experiment.speakText","getBotLinks":"actions/data","id-1076":"getBotLinks","getBotPosition":"actions/data","id-932":"getBotPosition","getBotRotation":"actions/data","id-937":"getBotRotation","getBotTagValues":"actions/data","id-922":"getBotTagValues","getFormattedJSON":"actions/data","id-950":"getFormattedJSON","getID":"actions/data","id-942":"getID","getJSON":"actions/data","id-946":"getJSON","getLink":"actions/data","id-1072":"getLink","getMod":"actions/mods","id-927":"getMod","getSnapshot":"actions/data","id-954":"getSnapshot","getTag":"actions/data","id-968":"getTag","inDimension":"actions/bot-filters","id-1173":"inDimension","inStack":"actions/bot-filters","id-1183":"inStack","insertTagMaskText":"actions/data","id-998":"insertTagMaskText","insertTagText":"actions/data","id-991":"insertTagText","loom.getVideoEmbedMetadata-video":"actions/loom","id-35418":"loom.getVideoEmbedMetadata-video","loom.getVideoEmbedMetadata-sharedUrl":"actions/loom","id-35420":"loom.getVideoEmbedMetadata-sharedUrl","loom.recordVideo":"actions/loom","id-35408":"loom.recordVideo","loom.watchVideo-video":"actions/loom","id-35412":"loom.watchVideo-video","loom.watchVideo-sharedUrl":"actions/loom","id-35414":"loom.watchVideo-sharedUrl","math.abs":"actions/math","id-35438":"math.abs","math.addVectors":"actions/math","id-35508":"math.addVectors","math.areClose":"actions/math","id-35539":"math.areClose","math.avg":"actions/math","id-35430":"math.avg","math.degreesToRadians":"actions/math","id-35464":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-35504":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-35472":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-35446":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-35481":"math.intersectPlane","math.negateVector":"actions/math","id-35518":"math.negateVector","math.normalizeVector":"actions/math","id-35523":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-35468":"math.radiansToDegrees","math.random":"actions/math","id-35459":"math.random","math.randomInt":"actions/math","id-35454":"math.randomInt","math.scaleVector":"actions/math","id-35533":"math.scaleVector","math.setRandomSeed":"actions/math","id-35450":"math.setRandomSeed","math.sqrt":"actions/math","id-35434":"math.sqrt","math.stdDev":"actions/math","id-35442":"math.stdDev","math.subtractVectors":"actions/math","id-35513":"math.subtractVectors","math.sum":"actions/math","id-35426":"math.sum","math.vectorLength":"actions/math","id-35528":"math.vectorLength","neighboring":"actions/bot-filters","id-1188":"neighboring","not":"actions/bot-filters","id-1209":"not","os.attachDebugger":"actions/debuggers","id-35288":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-35277":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-35281":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-1425":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-1430":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-35285":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-1452":"showChat-options","showChat-placeholder":"actions/os/input","id-1448":"showChat-placeholder","os.showInput":"actions/os/portals","id-1684":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1754":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1745":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1750":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1741":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-35225":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-1499":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-35175":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1717":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-35155":"os.calculateRayFromCamera","os.calculateScreenCoordinatesFromViewportCoordinates":"actions/os/portals","id-35165":"os.calculateScreenCoordinatesFromViewportCoordinates","os.calculateViewportCoordinatesFromPosition":"actions/os/portals","id-35160":"os.calculateViewportCoordinatesFromPosition","os.calculateViewportCoordinatesFromScreenCoordinates":"actions/os/portals","id-35170":"os.calculateViewportCoordinatesFromScreenCoordinates","os.cancelSound":"actions/os/audio","id-1721":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-1598":"os.capturePhoto","os.capturePortalScreenshot":"actions/os/portals","id-1605":"os.capturePortalScreenshot","os.classifyImages":"actions/os/image-classification","id-1590":"os.classifyImages","os.closeBarcodeScanner":"actions/os/barcodes","id-1572":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1733":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-1587":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-1602":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-1558":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1868":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-35140":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-35127":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-35221":"os.createInitializationUpdate","os.device":"actions/os/system","id-1470":"os.device","os.disableAR":"actions/os/xr","id-1489":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-1514":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-1496":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-1520":"os.disableWakeLock","os.download":"actions/os/files","id-1526":"os.download","os.downloadBots":"actions/os/files","id-1532":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-1537":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-1545":"os.downloadInst","os.enableAR":"actions/os/xr","id-1485":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-1476":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1759":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-1505":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-1492":"os.enableVR","os.eraseData":"actions/os/records","id-34963":"os.eraseData","os.eraseFile-result":"actions/os/records","id-35111":"os.eraseFile-result","os.eraseFile-url":"actions/os/records","id-35115":"os.eraseFile-url","os.eraseManualApprovalData":"actions/os/records","id-34969":"os.eraseManualApprovalData","os.eraseNotification":"actions/os/records","id-35025":"os.eraseNotification","os.eraseWebhook":"actions/os/records","id-34994":"os.eraseWebhook","os.exitFullscreenMode":"actions/os/portals","id-1396":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1816":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1772":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1776":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-1652":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-1658":"os.getCurrentInst","os.getCurrentInstRecord":"actions/os/portals","id-1661":"os.getCurrentInstRecord","os.getCurrentInstUpdate":"actions/os/spaces","id-35229":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-34938":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-1674":"os.getDimensionalDepth","os.getFile-result":"actions/os/records","id-35089":"os.getFile-result","os.getFile-url":"actions/os/records","id-35092":"os.getFile-url","os.getFocusPoint":"actions/os/portals","id-1784":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1766":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1809":"os.getInputList","os.getInputState":"actions/os/portals","id-1804":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-35217":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-34944":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1812":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-1664":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-1667":"os.getMiniPortalDimension","os.getWebhook":"actions/os/records","id-35019":"os.getWebhook","os.getPointerDirection":"actions/os/portals","id-1800":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1788":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1792":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-1670":"os.getPortalDimension","os.getPrivateFile-result":"actions/os/records","id-35103":"os.getPrivateFile-result","os.getPrivateFile-url":"actions/os/records","id-35106":"os.getPrivateFile-url","os.getPublicFile-result":"actions/os/records","id-35097":"os.getPublicFile-result","os.getPublicFile-url":"actions/os/records","id-35099":"os.getPublicFile-url","os.getPublicRecordKey":"actions/os/records","id-34865":"os.getPublicRecordKey","os.getRecordsEndpoint":"actions/os/records","id-35137":"os.getRecordsEndpoint","os.getRoomOptions":"actions/os/rooms","id-1834":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1849":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1838":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-34869":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-1523":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-1698":"os.goToDimension","os.goToURL":"actions/os/portals","id-1702":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-34885":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-34905":"os.grantInstRole","os.grantPermission":"actions/os/records","id-34873":"os.grantPermission","os.grantUserRole":"actions/os/records","id-34890":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1725":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-1580":"os.hideBarcode","os.hideChat":"actions/os/input","id-1460":"os.hideChat","os.hideHtml":"actions/os/portals","id-1403":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-1565":"os.hideQRCode","os.hideTips":"actions/os/portals","id-1384":"os.hideTips","os.importAUX":"actions/os/files","id-1636":"os.importAUX","os.inSheet":"actions/os/portals","id-1769":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-1473":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-1648":"os.isInDimension","os.isRecordKey":"actions/os/records","id-34920":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1819":"os.joinRoom","os.ldrawCountTextBuildSteps":"actions/os/ldraw","id-35194":"os.ldrawCountTextBuildSteps","os.leaveRoom":"actions/os/rooms","id-1824":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-34853":"os.listBuiltinTags","os.listData":"actions/os/records","id-34950":"os.listData","os.listDataByMarker":"actions/os/records","id-34956":"os.listDataByMarker","os.listFormAnimations":"actions/os/animations","id-35190":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-35214":"os.listInstUpdates","os.listNotificationSubscriptions":"actions/os/records","id-35072":"os.listNotificationSubscriptions","os.listNotifications":"actions/os/records","id-35031":"os.listNotifications","os.listNotificationsByMarker":"actions/os/records","id-35037":"os.listNotificationsByMarker","os.listUserNotificationSubscriptions":"actions/os/records","id-35078":"os.listUserNotificationSubscriptions","os.listUserStudios":"actions/os/records","id-35133":"os.listUserStudios","os.listWebhooks":"actions/os/records","id-35000":"os.listWebhooks","os.listWebhooksByMarker":"actions/os/records","id-35006":"os.listWebhooksByMarker","os.loadInst":"actions/os/spaces","id-1628":"os.loadInst","os.log":"actions/os/system","id-1762":"os.log","os.meetCommand":"actions/os/meets","id-35265":"os.meetCommand","os.meetFunction":"actions/os/meets","id-35270":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-35232":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-1568":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1737":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1710":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-1583":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-1594":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-1554":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1706":"os.openURL","os.parseBotsFromData":"actions/os/files","id-1640":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1713":"os.playSound","os.raycast":"actions/os/portals","id-35149":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-35144":"os.raycastFromCamera","os.recordData":"actions/os/records","id-34924":"os.recordData","os.recordEvent":"actions/os/records","id-35121":"os.recordEvent","os.recordFile":"actions/os/records","id-35082":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-34931":"os.recordManualApprovalData","os.recordNotification":"actions/os/records","id-35013":"os.recordNotification","os.recordWebhook":"actions/os/records","id-34975":"os.recordWebhook","os.registerApp":"actions/os/app","id-1859":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1854":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-35236":"os.remoteCount","os.remotes":"actions/os/remotes","id-35211":"os.remotes","os.replaceDragBot":"actions/os/portals","id-1644":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-34856":"os.reportInst","os.requestAuthBot":"actions/os/records","id-34859":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-34862":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-1393":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-1517":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-34913":"os.revokeInstRole","os.revokePermission":"actions/os/records","id-34879":"os.revokePermission","os.revokeUserRole":"actions/os/records","id-34898":"os.revokeUserRole","os.run":"actions/os/system","id-1463":"os.run","os.runWebhook":"actions/os/records","id-34981":"os.runWebhook","os.sendNotification":"actions/os/records","id-35055":"os.sendNotification","os.setClipboard":"actions/os/clipboard","id-1406":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1829":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1843":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1729":"os.share","os.showAccountInfo":"actions/os/system","id-1479":"os.showAccountInfo","os.showBarcode":"actions/os/barcodes","id-1575":"os.showBarcode","os.showConfirm":"actions/os/portals","id-1694":"os.showConfirm","os.showHtml":"actions/os/portals","id-1399":"os.showHtml","os.showInputForTag":"actions/os/portals","id-1678":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-1388":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-1561":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-1548":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-1551":"os.showUploadFiles","os.sleep":"actions/os/system","id-1363":"os.sleep","os.startFormAnimation":"actions/os/animations","id-35179":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-35185":"os.stopFormAnimation","os.subscribeToNotification":"actions/os/records","id-35044":"os.subscribeToNotification","os.tip":"actions/os/portals","id-1377":"os.tip","os.toast":"actions/os/portals","id-1367":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-35240":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-1632":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1864":"os.unregisterApp","os.unsubscribeFromNotification":"actions/os/records","id-35050":"os.unsubscribeFromNotification","os.version":"actions/os/system","id-1467":"os.version","os.vrSupported":"actions/os/xr","id-1502":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-1609":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-1617":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-1611":"os.instLatency","os.instTimeOffset":"actions/os/time","id-1613":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-1615":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-1607":"os.localTime","remote":"actions/os/event","id-1216":"remote","sendRemoteData":"actions/os/event","id-1228":"sendRemoteData","removeTags":"actions/data","id-1021":"removeTags","renameTag":"actions/data","id-1026":"renameTag","setTag":"actions/data","id-973":"setTag","setTagMask":"actions/data","id-979":"setTagMask","subtractMods":"actions/mods","id-1037":"subtractMods","superShout":"actions/os/event","id-1102":"superShout","uuid":"actions/data","id-1239":"uuid","web.get":"actions/web","id-35719":"web.get","web.hook":"actions/web","id-35730":"web.hook","web.post":"actions/web","id-35724":"web.post","configBot":"actions/os/system","id-1302":"configBot"}}');var i=o(1601);o(9683),o(1161);const r={id:"math",title:"Math Actions",sidebar_label:"Math",description:"Math actions are useful for performing math operations on bots and numbers."},c=void 0,d={id:"actions/math",title:"Math Actions",description:"Math actions are useful for performing math operations on bots and numbers.",source:"@site/docs/actions/math.mdx",sourceDirName:"actions",slug:"/actions/math",permalink:"/actions/math",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/math.mdx",tags:[],version:"current",frontMatter:{id:"math",title:"Math Actions",sidebar_label:"Math",description:"Math actions are useful for performing math operations on bots and numbers."},sidebar:"docs",previous:{title:"Loom",permalink:"/actions/loom"},next:{title:"Mods",permalink:"/actions/mods"}},l={},m=[...(0,i.KO)(n)];function u(e){return(0,s.jsx)(i.hl,{doc:n})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u()}},1601:(e,t,o)=>{o.d(t,{hl:()=>w,KO:()=>D});var s=o(79),a=o(9683),n=o(6356),i=o(5819),r=o(1888),c=o(5250);class d extends s.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const o="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw o;console.error(o)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var l=o(8526),m=o(1161),u=o(7544),p=o(3324),h=o(5834),g=o(1623);function y(e){void 0===e&&(e={});const t=e.references;return e=>{(0,h.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,l.ZP)("tags/listen")+x(t.slice(1)):e.url=(0,l.ZP)(g.L0[t])+x(t)}else if(e.url.startsWith("ref:")){const o=e.url.slice(4),s=t[o];e.url=(0,l.ZP)(s)+"#"+o}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,l.ZP)("glossary")+"#"+f(t)}else if(e.url.startsWith("page:")){const[t,o]=e.url.slice(5).split("#");e.url=(0,l.ZP)(t)+"#"+o}}))}}function x(e){return"#"+f(e)}function f(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function b(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const k={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",k);const v=new Map([[k.Property,["type"]],["reflection",["declaration"]],[k.TypeLiteral,["children","signatures"]],[k.CallSignature,["parameters","comment","type"]]]);function A(e,t,o){void 0===o&&(o=null),function(e,t,o){var s;void 0===o&&(o=null);let a=v.get(null!=(s=e.kind)?s:e.type)||[];for(let n of a){let s=e[n];if(Array.isArray(s))for(let e of s)e&&t(e,o,n);else s&&t(s,o,n)}}(e,((e,o,s)=>{t(e,o,s),A(e,t,e)}))}function R(e,t){let o=[];return t(e)&&o.push(e),A(e,((e,s,a)=>{t(e,s,a)&&o.push(e)})),o}const S=["first","second","third","fourth","fifth"];function T(e,t){return e.name+"-"+t.name}function P(e,t){const o=T(e,t);let s;var a;return s=t.kind===k.Constructor?$(t.signatures[0],be(t)):t.kind===k.Method?$(t.signatures[0]):t.kind===k.Accessor?(a=t).name+": "+de(a.getSignature.type):ae(t),s="<span>"+s+"</span>",{value:s,id:o,level:3}}function C(e){let t=[],{properties:o,constructors:s,methods:a}=function(e){let t=[],o=[],s=[];if(!e)return{properties:t,constructors:o,methods:s};for(let a of e)a.flags.isPrivate||(a.kind===k.Property||a.kind===k.Accessor?t.push(a):a.kind===k.Constructor?o.push(a):a.kind===k.Method&&s.push(a));return{properties:t,constructors:o,methods:s}}(e.children);return o.length>0&&t.push(...o.map((t=>P(e,t)))),s.length>0&&t.push(...s.map((t=>P(e,t)))),a.length>0&&t.push(...a.map((t=>P(e,t)))),t}function D(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let o of e.contents)if(o.reflection.kind===k.Interface||o.reflection.kind===k.Class){const e=be(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2}),o.reflection.kind===k.Class&&t.push(...C(o.reflection))}else if(o.reflection.kind===k.CallSignature){const e=be(o.reflection),s=ke(o.reflection);t.push({value:"<span>"+$(o.reflection,e)+"</span>",id:s,level:2})}else if(o.reflection.kind===k.TypeAlias){const e=be(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}else if(o.reflection.kind===k.GetSignature||o.reflection.kind===k.SetSignature){const e=be(o.reflection),s=ke(o.reflection);t.push({value:"<code>"+$(o.reflection,e)+"</code>",id:s,level:2})}else{const e=be(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}return t}function w(e){let{doc:t}=e;const o=t.contents,s=t.references;return(0,c.jsx)("ul",{className:"api api-list",children:o.map((e=>(0,c.jsx)("li",{className:"api-member-item",children:(0,c.jsx)(F,{reflection:e.reflection,references:s})},e.id)))})}function F(e){let{reflection:t,references:o}=e;return t.kind===k.Interface||t.kind===k.Class?(0,c.jsx)(I,{reflection:t,references:o}):t.kind===k.CallSignature||t.kind===k.GetSignature||t.kind===k.SetSignature?(0,c.jsx)(M,{reflection:t,references:o}):t.kind===k.TypeAlias?(0,c.jsx)(L,{reflection:t,references:o}):(0,c.jsx)(G,{reflection:t,references:o})}function L(e){let{reflection:t,references:o}=e;const s=be(t),n=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:n,children:s}),(0,c.jsx)(U,{reflection:t,references:o}),(0,c.jsx)(N,{reflection:t,name:s,references:o}),(0,c.jsx)(te,{member:t})]})}function N(e){let{reflection:t,name:o,references:s}=e,a="";return"union"===t.type.type&&(a=(0,c.jsx)(j,{type:t.type,name:o,references:s})),a}function j(e){let{type:t,name:o,references:s}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",o," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(O,{type:e,references:s},t)))})]})}function O(e){let{type:t,references:o}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:o})})})}function I(e){let{reflection:t,references:o}=e;const s=be(t),n=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:n,children:s}),(0,c.jsx)(B,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function G(e){let{reflection:t,references:o}=e;const s=be(t),n=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:n,children:s}),(0,c.jsx)(q,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function M(e){let{reflection:t,references:o}=e;const s=be(t),a=ke(t);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:t,sig:t,name:s,link:a,references:o})})}function B(e){var t;const o=e.reflection;if(!o)throw new Error("Unable to find "+e.name+"!");const s=function(e){return(0,r.sortBy)(e,(e=>e.kind===k.Property||e.kind===k.Accessor?0:e.kind===k.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=o.children)?t:[]);return(0,c.jsx)(d,{reflection:o,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(U,{reflection:o,references:e.references}),(0,c.jsx)(a.Z,{as:"h3",id:o.name+"-properties",children:"Members"}),(0,c.jsx)("div",{children:(0,c.jsxs)("ul",{className:"class-members-list",children:[o.indexSignature?(0,c.jsx)(V,{reflection:o,index:o.indexSignature,references:e.references}):"",o.references?(0,c.jsx)(z,{prop:o,references:e.references}):"",s.map((t=>(0,c.jsx)(E,{member:t,link:T(o,t),references:e.references},t.name)))]})})]})})}function V(e){let{reflection:t,index:o,references:s}=e;const n=o.parameters[0];return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(U,{reflection:o,references:s}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",n.name,": ",(0,c.jsx)(ce,{type:n.type,references:s}),"]: ",(0,c.jsx)(ce,{type:o.type,references:s})]})}),(0,c.jsx)(te,{member:o})]})}function U(e){let{reflection:t,references:o}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(Z,{comment:t.comment,references:o})})}function E(e){let t;return t=e.member.kind===k.Property?function(e){let t,o=e.member,s="";o.references?(s=(0,c.jsx)(_,{prop:o,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:o.typeReference})):"reflection"===o.type.type&&o.typeText&&o.typeReference?(t=(0,c.jsx)(c.Fragment,{children:o.typeReference}),s=(0,c.jsx)(n.Z,{language:"typescript",children:o.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!s&&o.typeText&&o.typeReference&&(s=(0,c.jsx)(n.Z,{language:"typescript",children:o.typeText}));const i=be(o);ke(o);return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsxs)("span",{className:"class-member-name",children:[i,e.member.flags.isOptional?(0,c.jsx)("span",{className:"class-member-optional",children:"?"}):""]})," ",(0,c.jsx)("span",{className:"class-member-type",children:t})]}),(0,c.jsx)(U,{reflection:e.member,references:e.references}),s]})}(e):e.member.kind===k.Constructor?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Method?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Accessor?function(e){var t;return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsx)("span",{className:"class-member-name",children:e.member.name})," ",(0,c.jsx)("span",{className:"class-member-type",children:(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})})]}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsxs)(d,{reflection:e.member,children:[(0,c.jsx)("span",{role:"separator",className:"class-member-separator"}),(0,c.jsx)("li",{className:"class-member-item",children:t})]})}function z(e){let{prop:t,references:o}=e;const s=ke(t);return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:s+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(i.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})]})}function _(e){let{prop:t,references:o}=e;return(0,c.jsxs)(i.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})}function q(e){const t=e.reflection,o=(t.type.declaration,Ce(t));return(0,c.jsx)(d,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(U,{reflection:t,references:e.references}),o.map((t=>(0,c.jsx)(W,{group:t,references:e.references},t.group)))]})})}function W(e){let{group:t,references:o}=e;const s=t.children,n=Te(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:t.group,children:n}),s.map((e=>(0,c.jsx)(K,{namespace:e.namespace,name:e.name,property:e.child,link:T(e.reflection,e.child),references:o},e.child.id)))]})}function K(e){let t;if(me(e.property)){var o;const s=e.namespace?e.namespace+"."+e.name:e.name,a=e.property.type.declaration;t=J({name:s,func:e.property,sig:null!=(o=Ae(a.signatures))?o:a.signatures[0],link:e.link,references:e.references})}else if(pe(e.property)){const o=e.namespace?e.namespace+"."+e.name:e.name,s=Re(e.property);t=J({name:o,func:e.property,sig:s,link:e.link,references:e.references})}else t=ge(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===k.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(U,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(d,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function J(e){let{func:t,sig:o,link:s,name:n,references:i}=e;const r=o.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h4",id:s,children:(0,c.jsx)(Y,{func:t,sig:o,name:n,references:i})}),(0,c.jsx)(H,{sig:o,references:i}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(ee,{param:e,index:t,references:i},e.name)))}):"",(0,c.jsx)(te,{member:o})]})}function H(e){let{sig:t,references:o}=e;return(0,c.jsx)(Z,{comment:t.comment,references:o})}function Z(e){let{comment:t,references:o}=e;return(0,c.jsx)(Q,{references:o,children:X(t)})}function Q(e){let{children:t,remarkPlugins:o,rehypePlugins:s,references:a}=e;return(0,c.jsx)(u.U,{remarkPlugins:[[y,{references:a}],...o||[]],rehypePlugins:[p.Z,...s||[]],children:t})}function X(e){let t="";if(e&&e.summary)for(let o of e.summary)t+=o.text;return t}function Y(e){let{func:t,sig:o,name:s,references:a}=e;const n=o.parameters||[];let i="";return t.kind!==k.GetSignature&&(i=(0,c.jsxs)(c.Fragment,{children:["(",n.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:a})]},e.name))),")"]})),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("span",{className:"function-member-name",children:[(t.flags.isStatic?"static ":"")+(s||o.name),i]}),": ",(0,c.jsx)("span",{className:"function-member-type",children:(0,c.jsx)(ce,{type:o.type,references:a})})]})}function $(e,t){void 0===t&&(t=e.name);const o=e.parameters||[];let s="";return e.kind!==k.GetSignature&&(s="("+o.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+s+": "+de(e.type)}function ee(e){let t,{param:o,index:s,references:a}=e;return t=o.flags.isRest&&o.type.elementType?0===s?(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:a})," and are ",(0,c.jsx)(ne,{param:o,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:a})," and are ",(0,c.jsx)(ne,{param:o,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("em",{children:[se(s)," parameter"]})," is",o.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:o.type,references:a})," and ",(0,c.jsx)(ne,{param:o,references:a})]}),t}function te(e){var t;let{member:o}=e;if(null==(t=o.comment)||!t.blockTags)return"";const s=o.comment.blockTags.filter((e=>"@example"===e.tag));return s.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h5",{className:"examples-heading",children:"Examples"}),s.map(((e,t)=>(0,c.jsx)(oe,{example:e},t)))]}):""}function oe(e){let{example:t}=e;const o=t.content.map((e=>e.text)).join(""),s=o.indexOf("\n"),a=o.indexOf("\n",s+1);let i="typescript";s>3&&(i=o.substring(3,s).trim());const r=o.lastIndexOf("```"),d=o.substring(s,a),l=o.substring(a,r);return(0,c.jsx)(n.Z,{language:i,title:d.trim(),children:l.trim()})}function se(e){return S[e]}function ae(e,t){let o;return void 0===t&&(t=e.name),o=e.typeReference?e.typeReference:de(e.type),t+(e.flags.isOptional?"?":"")+": "+o}function ne(e){let{param:t,isRest:o,references:s}=e;return(0,c.jsx)(Q,{remarkPlugins:[b],references:s,children:ie(t,o)})}function ie(e,t){let o=X(e.comment);return o?(o=o.slice(0,1).toLowerCase()+o.slice(1),o.startsWith("the")&&!t&&(o="is "+o),o):""}const re=new Map([["ArrayBuffer","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer"],["Blob","https://developer.mozilla.org/en-US/docs/Web/API/Blob"],["Uint8Array","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"],["RegExp","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"],["Function","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"],["Error","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"]]);function ce(e){let{type:t,references:o,isInUnionOrArray:a}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var n,i,r,d,u,p;if(t.name===(null==(n=t.target)?void 0:n.qualifiedName)&&re.has(t.name)){const e=re.get(t.name);return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)("a",{className:"type-link",href:e,children:t.name})})}if("Promise"===t.name&&"Promise"===(null==(i=t.target)?void 0:i.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Partial"===t.name&&"Partial"===(null==(r=t.target)?void 0:r.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Omit"===t.name&&"Omit"===(null==(d=t.target)?void 0:d.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys",children:"Omit"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Map"===t.name&&"Map"===(null==(u=t.target)?void 0:u.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"Map"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Set"===t.name&&"Set"===(null==(p=t.target)?void 0:p.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",children:"Set"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});let e="#"+t.name;const s=t.id?null==o?void 0:o["id-"+t.id]:null;if(s){const t=null==o?void 0:o[s];t&&(e=(0,l.ZP)(t)+"#"+s)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry. ");return(0,c.jsx)(m.Z,{className:"type-link",href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(s.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:o,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===k.TypeLiteral&&e.signatures&&!e.children){var h;const t=null!=(h=Ae(e.signatures))?h:e.signatures[0],s=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[a?"(":"","(",s.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:o})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:o}),a?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})))}if("tuple"===t.type){const e=t.elements.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?", ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})));return(0,c.jsxs)("span",{children:["[",e,"]"]})}return"typeOperator"===t.type?(0,c.jsxs)("span",{children:[t.operator," ",(0,c.jsx)(ce,{type:t.target,references:o,isInUnionOrArray:!0})]}):""+JSON.stringify(t)}function de(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+de(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>de(e))).join(" | ")+")":"array"===e.type?de(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function le(e){return me(e)||pe(e)}function me(e){return e&&ue(e.type)}function ue(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===k.CallSignature))}function pe(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>ue(e)))}function he(e){return e&&e.kind===k.CallSignature}function ge(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===k.TypeLiteral&&e.type.declaration.children}function ye(e,t){var o;const s=null==(o=e.comment)||null==(o=o.blockTags)?void 0:o.find((e=>e.tag===t));return s?s.content.map((e=>e.text)).join(""):null}function xe(e){if(e)for(let t of e){const e=ye(t,"@docname");if(e)return e.trim()}return null}function fe(e){if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=ve(null==o?void 0:o.signatures);if(s)return s}else if(pe(e)){const t=e.type.types;for(let e of t)if(ue(e)){let t=ve(e.declaration.signatures);if(t)return t}}else if(he(e)){let t=ve([e]);if(t)return t}return"99-default"}function be(e){if(e.kind===k.Method){let t=xe(e.signatures);if(t)return t}else if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=xe(null==o?void 0:o.signatures);if(s)return s}else if(pe(e)){const t=e.type.types;for(let e of t)if(ue(e)){let t=xe(e.declaration.signatures);if(t)return t}}else if(he(e)){let t=xe([e]);if(t)return t}return ye(o=e,"@docname")||o.name;var o}function ke(e){const t=ye(e,"@docid");if(t)return t;const o=function(e,t){let o=[];return A(e,((e,s,a)=>{"comment"===a&&(console.log(e),o.push(...e.blockTags.filter((e=>e.tag===t))))})),o}(e,"@docid");return o.length>0?o[0].text.trim():be(e)}function ve(e){if(e)for(let t of e){const e=ye(t,"@docgroup");if(e)return e.trim()}return null}function Ae(e){for(let t of e){if(ye(t,"@docgroup"))return t}return null}function Re(e){const t=e.type.types;let o=null;for(let s of t)if(ue(s)){const e=s.declaration.signatures;o||(o=e[0]);let t=Ae(e);if(t)return t}return o}function Se(e){const t=(o=e,s=k.CallSignature,R(o,(e=>e.kind===s)));var o,s;for(let a of t){const e=ye(a,"@docgrouptitle");if(e)return e.trim()}return null}function Te(e){for(let t of e.children){let e=Se(t.child);if(e)return e}return e.group}function Pe(e){if(e.kind===k.CallSignature)return he(e)||le(e)||ge(e)?[{group:fe(e),name:be(e),reflection:e,child:e}]:[];if(e.kind===k.TypeAlias||e.kind===k.GetSignature||e.kind===k.SetSignature)return[];const t=e.type.declaration.children.filter((e=>he(e)||le(e)||ge(e))),o=null!==ye(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>le(t)?{group:fe(t),name:be(t),namespace:o,reflection:e,child:t}:Pe(t)))}function Ce(e){const t=Pe(e),o=(0,r.groupBy)(t,(e=>e.group));let s=[];for(let a in o)s.push({group:a,children:o[a]});return s=(0,r.sortBy)(s,(e=>e.group)),s}}}]);