"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[1033],{1704:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var o=n(5250),a=n(5545);const i=JSON.parse('{"hash":"actions/os/portals","pageTitle":"Portal Actions","pageDescription":"Actions for working with portals.","pageSidebarLabel":"Portals","contents":[{"id":1497,"order":9999,"name":"os.closeCircleWipe","reflection":{"id":1497,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Causes a circular wipe animation to close around the screen.\\nThis can be used to cover the grid portal while transitioning between scenes.\\nReturns a promise that resolves when the animation has finished running.\\nThe promise will throw an exception if "},{"kind":"text","text":"[`os.openCircleWipe(options)`](ref:os.openCircleWipe)"},{"kind":"text","text":" is called while the animation is running."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nHide the grid portal with a circular wipe animation.\\nawait os.closeCircleWipe();\\nos.toast(\\"Hidden!\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nHide the grid portal and show it after an additional second.\\nawait os.closeCircleWipe();\\nawait os.sleep(1000);\\nawait os.openCircleWipe();\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nUse a custom color for the circle wipe.\\nawait os.closeCircleWipe({\\n    color: \'#63f1aa\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nMake the circle wipe take 5 seconds to complete.\\nawait os.closeCircleWipe({\\n    duration: 5\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.closeCircleWipe"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-circle-wipe"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7374,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7374"}],"parameters":[{"id":1498,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the options that should be used for the effect."}],"blockTags":[]},"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":37136,"name":"OpenCircleWipeOptions","package":"@casual-simulation/aux-common","id":37136,"qualifiedName":"OpenCircleWipeOptions"}],"name":"Partial","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Causes a circular wipe animation to close around the screen.\\nThis can be used to cover the grid portal while transitioning between scenes.\\nReturns a promise that resolves when the animation has finished running.\\nThe promise will throw an exception if os.openCircleWipe is called while the animation is running.","tags":[{"tagName":"example","text":"```ts\\nHide the grid portal with a circular wipe animation.\\nawait os.closeCircleWipe();\\nos.toast(\\"Hidden!\\");\\n```"},{"tagName":"example","text":"```ts\\nHide the grid portal and show it after an additional second.\\nawait os.closeCircleWipe();\\nawait os.sleep(1000);\\nawait os.openCircleWipe();\\n```"},{"tagName":"example","text":"```ts\\nUse a custom color for the circle wipe.\\nawait os.closeCircleWipe({\\n    color: \'#63f1aa\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nMake the circle wipe take 5 seconds to complete.\\nawait os.closeCircleWipe({\\n    duration: 5\\n});\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.closeCircleWipe"},{"tagName":"docgroup","text":"10-circle-wipe"}]},"group":"10-circle-wipe"},{"id":1501,"order":9999,"name":"os.openCircleWipe","reflection":{"id":1501,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Causes the circular wipe animation to open around the screen.\\nThis can be used to reveal the grid portal after transitioning between screens.\\nReturns a promise that resolves when the animation has finished running.\\nThe promise will throw an exception if "},{"kind":"text","text":"[`os.closeCircleWipe(options)`](ref:os.closeCircleWipe)"},{"kind":"text","text":" is called while the animation is running."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nReveal the grid portal with a circular wipe animation.\\nawait os.openCircleWipe();\\nos.toast(\\"Revealed!\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nHide the grid portal and show it after an additional second.\\nawait os.closeCircleWipe();\\nawait os.sleep(1000);\\nawait os.openCircleWipe();\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nUse a custom color for the circle wipe.\\nawait os.openCircleWipe({\\n    color: \'#63f1aa\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nMake the circle wipe take 5 seconds to complete.\\nawait os.openCircleWipe({\\n    duration: 5\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.openCircleWipe"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-circle-wipe"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7420,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7420"}],"parameters":[{"id":1502,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the options that should be used for the effect."}],"blockTags":[]},"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":37136,"name":"OpenCircleWipeOptions","package":"@casual-simulation/aux-common","id":37136,"qualifiedName":"OpenCircleWipeOptions"}],"name":"Partial","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Causes the circular wipe animation to open around the screen.\\nThis can be used to reveal the grid portal after transitioning between screens.\\nReturns a promise that resolves when the animation has finished running.\\nThe promise will throw an exception if os.closeCircleWipe is called while the animation is running.","tags":[{"tagName":"example","text":"```ts\\nReveal the grid portal with a circular wipe animation.\\nawait os.openCircleWipe();\\nos.toast(\\"Revealed!\\");\\n```"},{"tagName":"example","text":"```ts\\nHide the grid portal and show it after an additional second.\\nawait os.closeCircleWipe();\\nawait os.sleep(1000);\\nawait os.openCircleWipe();\\n```"},{"tagName":"example","text":"```ts\\nUse a custom color for the circle wipe.\\nawait os.openCircleWipe({\\n    color: \'#63f1aa\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nMake the circle wipe take 5 seconds to complete.\\nawait os.openCircleWipe({\\n    duration: 5\\n});\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.openCircleWipe"},{"tagName":"docgroup","text":"10-circle-wipe"}]},"group":"10-circle-wipe"},{"id":1419,"order":9999,"name":"os.getCurrentDimension","reflection":{"id":1419,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the dimension that is loaded into the "},{"kind":"text","text":"[`#gridPortal`](tags:gridPortal)"},{"kind":"text","text":" portal.\\n\\n> This function behaves exactly like "},{"kind":"text","text":"[`os.getPortalDimension(portal)`](ref:os.getPortalDimension)"},{"kind":"text","text":" when given \\"gridPortal\\"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a message of the dimension that is currently in the #gridPortal portal.\\nconst dimension = os.getCurrentDimension();\\nos.toast(dimension);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Portal Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Portals"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Actions for working with portals."}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getCurrentDimension"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6750,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6750"}],"type":{"type":"intrinsic","name":"string"}},"comment":{"text":"Gets the dimension that is loaded into the gridPortal portal.\\n\\n> This function behaves exactly like os.getPortalDimension when given \\"gridPortal\\".","tags":[{"tagName":"example","text":"```ts\\nShow a message of the dimension that is currently in the #gridPortal portal.\\nconst dimension = os.getCurrentDimension();\\nos.toast(dimension);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"doctitle","text":"Portal Actions"},{"tagName":"docsidebar","text":"Portals"},{"tagName":"docdescription","text":"Actions for working with portals."},{"tagName":"docname","text":"os.getCurrentDimension"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1425,"order":9999,"name":"os.getCurrentInst","reflection":{"id":1425,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the inst that is loaded."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a message of the current inst.\\nconst inst = os.getCurrentInst();\\nos.toast(inst);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getCurrentInst"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6773,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6773"}],"type":{"type":"intrinsic","name":"string"}},"comment":{"text":"Gets the inst that is loaded.","tags":[{"tagName":"example","text":"```ts\\nShow a message of the current inst.\\nconst inst = os.getCurrentInst();\\nos.toast(inst);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getCurrentInst"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1438,"order":9999,"name":"os.getDimensionalDepth","reflection":{"id":1438,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the distance that the player bot is from the given dimension.\\n\\nReturns "},{"kind":"code","text":"`0`"},{"kind":"text","text":" if the player bot is in the dimension, "},{"kind":"code","text":"`1`"},{"kind":"text","text":" if the dimension is in a portal, and "},{"kind":"code","text":"`-1`"},{"kind":"text","text":" if neither are true."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the distance to the \\"fun\\" dimension.\\nconst distance = os.getDimensionalDepth(\\"fun\\");\\nif (distance === 0) {\\n    os.toast(\\"Player is in the fun dimension\\");\\n} else if(distance === 1) {\\n    os.toast(\\"Player is viewing the fun dimension\\");\\n} else {\\n    os.toast(\\"Player cannot access the fun dimension\\");\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getDimensionalDepth"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6893,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6893"}],"parameters":[{"id":1439,"name":"dimension","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The dimension to check for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"number"}},"comment":{"text":"Gets the distance that the player bot is from the given dimension.\\n\\nReturns `0` if the player bot is in the dimension, `1` if the dimension is in a portal, and `-1` if neither are true.","tags":[{"tagName":"example","text":"```ts\\nGet the distance to the \\"fun\\" dimension.\\nconst distance = os.getDimensionalDepth(\\"fun\\");\\nif (distance === 0) {\\n    os.toast(\\"Player is in the fun dimension\\");\\n} else if(distance === 1) {\\n    os.toast(\\"Player is viewing the fun dimension\\");\\n} else {\\n    os.toast(\\"Player cannot access the fun dimension\\");\\n}\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getDimensionalDepth"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1428,"order":9999,"name":"os.getMenuDimension","reflection":{"id":1428,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the dimension that is loaded into the "},{"kind":"text","text":"[`#menuPortal`](tags:menuPortal)"},{"kind":"text","text":" portal.\\n\\n> This function behaves exactly like "},{"kind":"text","text":"[`os.getPortalDimension(portal)`](ref:os.getPortalDimension)"},{"kind":"text","text":" when given \\"menuPortal\\"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a message of the dimension that is currently in the #menuPortal portal.\\nconst dimension = os.getMenuDimension();\\nos.toast(dimension);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getMenuDimension"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6827,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6827"}],"type":{"type":"intrinsic","name":"string"}},"comment":{"text":"Gets the dimension that is loaded into the menuPortal portal.\\n\\n> This function behaves exactly like os.getPortalDimension when given \\"menuPortal\\".","tags":[{"tagName":"example","text":"```ts\\nShow a message of the dimension that is currently in the #menuPortal portal.\\nconst dimension = os.getMenuDimension();\\nos.toast(dimension);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getMenuDimension"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1431,"order":9999,"name":"os.getMiniPortalDimension","reflection":{"id":1431,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the dimension that is loaded into the #miniGridPortal portal.\\n\\n> This function behaves exactly like "},{"kind":"text","text":"[`os.getPortalDimension(portal)`](ref:os.getPortalDimension)"},{"kind":"text","text":" when given \\"miniGridPortal\\"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a message of the dimension that is currently in the #miniGridPortal portal.\\nconst dimension = os.getMiniPortalDimension();\\nos.toast(dimension);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getMiniPortalDimension"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6801,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6801"}],"type":{"type":"intrinsic","name":"string"}},"comment":{"text":"Gets the dimension that is loaded into the #miniGridPortal portal.\\n\\n> This function behaves exactly like os.getPortalDimension when given \\"miniGridPortal\\".","tags":[{"tagName":"example","text":"```ts\\nShow a message of the dimension that is currently in the #miniGridPortal portal.\\nconst dimension = os.getMiniPortalDimension();\\nos.toast(dimension);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getMiniPortalDimension"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1434,"order":9999,"name":"os.getPortalDimension","reflection":{"id":1434,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the dimension that is loaded into the given portal.\\nIf no dimension is loaded, then "},{"kind":"code","text":"`null`"},{"kind":"text","text":" is returned."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the dimension that is currently showing in the #gridPortal.\\nconst dimension = os.getPortalDimension(\'grid\');\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the dimension that is currently showing in the #miniGridPortal.\\nconst dimension = os.getPortalDimension(\'miniGrid\');\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getPortalDimension"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6856,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6856"}],"parameters":[{"id":1435,"name":"portal","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the portal that the dimension should be retrieved for"}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}},"comment":{"text":"Gets the dimension that is loaded into the given portal.\\nIf no dimension is loaded, then `null` is returned.","tags":[{"tagName":"example","text":"```ts\\nGet the dimension that is currently showing in the #gridPortal.\\nconst dimension = os.getPortalDimension(\'grid\');\\n```"},{"tagName":"example","text":"```ts\\nGet the dimension that is currently showing in the #miniGridPortal.\\nconst dimension = os.getPortalDimension(\'miniGrid\');\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getPortalDimension"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1489,"order":9999,"name":"os.hasBotInMiniPortal","reflection":{"id":1489,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines if the given bot is in the dimension that is currently loaded into the "},{"kind":"text","text":"[`#miniGridPortal`](tags:miniGridPortal)"},{"kind":"text","text":" portal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a message if a bot named \\"bob\\" is in the miniGridPortal.\\nconst bob = getBot(\\"#name\\", \\"bob\\");\\nif (os.hasBotInMiniPortal(bob)) {\\n    os.toast(\\"bob is in the miniGridPortal!\\");\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.hasBotInMiniPortal"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7308,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7308"}],"parameters":[{"id":1490,"name":"bots","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot or bots that should be checked."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"reference","target":38150,"name":"Bot","package":"@casual-simulation/aux-common","id":38150,"qualifiedName":"Bot"},{"type":"array","elementType":{"type":"reference","target":38150,"name":"Bot","package":"@casual-simulation/aux-common","id":38150,"qualifiedName":"Bot"}}]}}],"type":{"type":"intrinsic","name":"boolean"}},"comment":{"text":"Determines if the given bot is in the dimension that is currently loaded into the miniGridPortal portal.","tags":[{"tagName":"example","text":"```ts\\nShow a message if a bot named \\"bob\\" is in the miniGridPortal.\\nconst bob = getBot(\\"#name\\", \\"bob\\");\\nif (os.hasBotInMiniPortal(bob)) {\\n    os.toast(\\"bob is in the miniGridPortal!\\");\\n}\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.hasBotInMiniPortal"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1533,"order":9999,"name":"os.inSheet","reflection":{"id":1533,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets whether the player is viewing the sheetPortal"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a toast if the player is viewing the sheet.\\nif (os.inSheet()) {\\n    os.toast(\\"You are in the sheet!\\");\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.inSheet"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14375,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14375"}],"type":{"type":"intrinsic","name":"boolean"}},"comment":{"text":"Gets whether the player is viewing the sheetPortal","tags":[{"tagName":"example","text":"```ts\\nShow a toast if the player is viewing the sheet.\\nif (os.inSheet()) {\\n    os.toast(\\"You are in the sheet!\\");\\n}\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.inSheet"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1415,"order":9999,"name":"os.isInDimension","reflection":{"id":1415,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets whether the given dimension is loaded into the "},{"kind":"text","text":"[`#gridPortal`](tags:gridPortal)"},{"kind":"text","text":" portal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a toast if the player is viewing the abc dimension.\\nif (os.isInDimension(\\"abc\\")) {\\n    os.toast(\\"In the dimension!\\");\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.isInDimension"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-config-values"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6727,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6727"}],"parameters":[{"id":1416,"name":"dimension","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the dimension to check for."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}},"comment":{"text":"Gets whether the given dimension is loaded into the gridPortal portal.","tags":[{"tagName":"example","text":"```ts\\nShow a toast if the player is viewing the abc dimension.\\nif (os.isInDimension(\\"abc\\")) {\\n    os.toast(\\"In the dimension!\\");\\n}\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.isInDimension"},{"tagName":"docgroup","text":"10-config-values"}]},"group":"10-config-values"},{"id":1170,"order":9999,"name":"os.exitFullscreenMode","reflection":{"id":1170,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Exits fullscreen mode."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nExit fullscreen mode.\\nos.exitFullscreenMode();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.exitFullscreenMode"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-fullscreen"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5255,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5255"}],"type":{"type":"reference","target":37035,"name":"ExitFullscreenAction","package":"@casual-simulation/aux-common","id":37035,"qualifiedName":"ExitFullscreenAction"}},"comment":{"text":"Exits fullscreen mode.","tags":[{"tagName":"example","text":"```ts\\nExit fullscreen mode.\\nos.exitFullscreenMode();\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.exitFullscreenMode"},{"tagName":"docgroup","text":"10-fullscreen"}]},"group":"10-fullscreen"},{"id":1167,"order":9999,"name":"os.requestFullscreenMode","reflection":{"id":1167,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Attempts to enter fullscreen mode. Depending on which web browser the player is using, this might ask for permission to go fullscreen.\\n\\nNote that iPhones currently don\'t support fullscreen mode."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nEnter fullscreen mode.\\nos.requestFullscreenMode();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.requestFullscreenMode"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-fullscreen"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5241,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5241"}],"type":{"type":"reference","target":37033,"name":"RequestFullscreenAction","package":"@casual-simulation/aux-common","id":37033,"qualifiedName":"RequestFullscreenAction"}},"comment":{"text":"Attempts to enter fullscreen mode. Depending on which web browser the player is using, this might ask for permission to go fullscreen.\\n\\nNote that iPhones currently don\'t support fullscreen mode.","tags":[{"tagName":"example","text":"```ts\\nEnter fullscreen mode.\\nos.requestFullscreenMode();\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.requestFullscreenMode"},{"tagName":"docgroup","text":"10-fullscreen"}]},"group":"10-fullscreen"},{"id":1462,"order":9999,"name":"os.goToDimension","reflection":{"id":1462,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Loads the given dimension into the "},{"kind":"text","text":"[`#gridPortal`](tags:gridPortal)"},{"kind":"text","text":" portal. Triggers the "},{"kind":"text","text":"[`@onPortalChanged`](tags:@onPortalChanged)"},{"kind":"text","text":" shout for the gridPortal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nLoad the abc dimension.\\nos.goToDimension(\\"abc\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.goToDimension"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-go-to"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7172,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7172"}],"parameters":[{"id":1463,"name":"dimension","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the dimension that should be loaded."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":36807,"name":"GoToDimensionAction","package":"@casual-simulation/aux-common","id":36807,"qualifiedName":"GoToDimensionAction"}},"comment":{"text":"Loads the given dimension into the gridPortal portal. Triggers the @onPortalChanged shout for the gridPortal.","tags":[{"tagName":"example","text":"```ts\\nLoad the abc dimension.\\nos.goToDimension(\\"abc\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.goToDimension"},{"tagName":"docgroup","text":"10-go-to"}]},"group":"10-go-to"},{"id":1466,"order":9999,"name":"os.goToURL","reflection":{"id":1466,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Redirects the current tab to the given URL. Useful for sending the player to another webpage or ambient experience."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend the player to https://example.com.\\nos.goToURL(\\"https://example.com\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.goToURL"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-go-to"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7189,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7189"}],"parameters":[{"id":1467,"name":"url","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the [URL](https://en.wikipedia.org/wiki/URL) that the player should be sent to. Usually this is a website like "},{"kind":"code","text":"`https://example.com`"},{"kind":"text","text":"."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":36839,"name":"GoToURLAction","package":"@casual-simulation/aux-common","id":36839,"qualifiedName":"GoToURLAction"}},"comment":{"text":"Redirects the current tab to the given URL. Useful for sending the player to another webpage or ambient experience.","tags":[{"tagName":"example","text":"```ts\\nSend the player to https://example.com.\\nos.goToURL(\\"https://example.com\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.goToURL"},{"tagName":"docgroup","text":"10-go-to"}]},"group":"10-go-to"},{"id":1470,"order":9999,"name":"os.openURL","reflection":{"id":1470,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Opens a new tab with the given URL. Useful for opening another webpage without redirecting the current tab."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nOpen https://example.com in a new tab.\\nos.openURL(\\"https://example.com\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.openURL"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-go-to"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7206,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7206"}],"parameters":[{"id":1471,"name":"url","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the [URL](https://en.wikipedia.org/wiki/URL) that the player should be sent to. Usually this is a website like "},{"kind":"code","text":"`https://example.com`"},{"kind":"text","text":"."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":36843,"name":"OpenURLAction","package":"@casual-simulation/aux-common","id":36843,"qualifiedName":"OpenURLAction"}},"comment":{"text":"Opens a new tab with the given URL. Useful for opening another webpage without redirecting the current tab.","tags":[{"tagName":"example","text":"```ts\\nOpen https://example.com in a new tab.\\nos.openURL(\\"https://example.com\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.openURL"},{"tagName":"docgroup","text":"10-go-to"}]},"group":"10-go-to"},{"id":1177,"order":9999,"name":"os.hideHtml","reflection":{"id":1177,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Closes the HTML popup modal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nHide the HTML popup.\\nos.hideHtml();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.hideHtml"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-html"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5299,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5299"}],"type":{"type":"reference","target":36601,"name":"HideHtmlAction","package":"@casual-simulation/aux-common","id":36601,"qualifiedName":"HideHtmlAction"}},"comment":{"text":"Closes the HTML popup modal.","tags":[{"tagName":"example","text":"```ts\\nHide the HTML popup.\\nos.hideHtml();\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.hideHtml"},{"tagName":"docgroup","text":"10-html"}]},"group":"10-html"},{"id":1173,"order":9999,"name":"os.showHtml","reflection":{"id":1173,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows some HTML to the player in a popup modal. This can be useful for loading a separate webpage or providing some formatted text."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a header with some text.\\nos.showHtml(`\\n  <h1>This is some text!</h1>\\n`);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a YouTube video.\\nos.showHtml(`\\n  <iframe\\n      width=\\"560\\"\\n      height=\\"315\\"\\n      src=\\"https://www.youtube.com/embed/BHACKCNDMW8\\"\\n      frameborder=\\"0\\"\\n      allow=\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\"\\n      allowfullscreen>\\n  </iframe>\\n`);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.showHtml"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-html"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5285,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5285"}],"parameters":[{"id":1174,"name":"html","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the HTML that should be shown to the user."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":36596,"name":"ShowHtmlAction","package":"@casual-simulation/aux-common","id":36596,"qualifiedName":"ShowHtmlAction"}},"comment":{"text":"Shows some HTML to the player in a popup modal. This can be useful for loading a separate webpage or providing some formatted text.","tags":[{"tagName":"example","text":"```ts\\nShow a header with some text.\\nos.showHtml(`\\n  <h1>This is some text!</h1>\\n`);\\n```"},{"tagName":"example","text":"```ts\\nShow a YouTube video.\\nos.showHtml(`\\n  <iframe\\n      width=\\"560\\"\\n      height=\\"315\\"\\n      src=\\"https://www.youtube.com/embed/BHACKCNDMW8\\"\\n      frameborder=\\"0\\"\\n      allow=\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\"\\n      allowfullscreen>\\n  </iframe>\\n`);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.showHtml"},{"tagName":"docgroup","text":"10-html"}]},"group":"10-html"},{"id":1573,"order":9999,"name":"os.getInputList","reflection":{"id":1573,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the list of supported inputs. The returned strings can be used for the controller property in "},{"kind":"text","text":"[`os.getInputState(controller, button)`](ref:os.getInputState)"},{"kind":"text","text":" calls."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a list of inputs and toast them.\\nconst state = os.getInputList();\\nos.toast(state);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getInputList"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-input"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14633,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14633"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"comment":{"text":"Gets the list of supported inputs. The returned strings can be used for the controller property in os.getInputState calls.","tags":[{"tagName":"example","text":"```ts\\nGet a list of inputs and toast them.\\nconst state = os.getInputList();\\nos.toast(state);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getInputList"},{"tagName":"docgroup","text":"10-input"}]},"group":"10-input"},{"id":1568,"order":9999,"name":"os.getInputState","reflection":{"id":1568,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the state of the given button on the given controller."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a toast if the left mouse button is clicked.\\nconst state = os.getInputState(\\"mousePointer\\", \\"left\\");\\nif (state) {\\n    os.toast(\\"Left mouse button is down!\\");\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a toast if the shift key is down.\\nconst state = os.getInputState(\\"keyboard\\", \\"Shift\\");\\nif (state) {\\n    os.toast(\\"Shift is down!\\");\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getInputState"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-input"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14610,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14610"}],"parameters":[{"id":1569,"name":"controller","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the controller that should be checked.\\nPossible values are:\\n\\n-    "},{"kind":"code","text":"`mousePointer`"},{"kind":"text","text":" - The mouse.\\n-    "},{"kind":"code","text":"`leftPointer`"},{"kind":"text","text":" - The left controller.\\n-    "},{"kind":"code","text":"`rightPointer`"},{"kind":"text","text":" - The right controller.\\n-    "},{"kind":"code","text":"`keyboard`"},{"kind":"text","text":" - The keyboard.\\n-    "},{"kind":"code","text":"`touch`"},{"kind":"text","text":" - The touchscreen."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1570,"name":"button","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the button that you want to get the state of.\\nPossible values are:\\n\\n-    "},{"kind":"code","text":"`left`"},{"kind":"text","text":" - The left mouse button. Only available on the mouse pointer. On mobile devices this will also be the state of the first touch.\\n-    "},{"kind":"code","text":"`right`"},{"kind":"text","text":" - The right mouse button. Only available on the mouse pointer.\\n-    "},{"kind":"code","text":"`middle`"},{"kind":"text","text":" - The middle mouse button. Only available on the mouse pointer.\\n-    "},{"kind":"code","text":"`primary`"},{"kind":"text","text":" - The primary controller button. Only available on the left and right pointers.\\n-    "},{"kind":"code","text":"`squeeze`"},{"kind":"text","text":" - The squeeze controller button. Only available on the left and right pointers.\\n-    "},{"kind":"code","text":"`Any`"},{"kind":"text","text":" Key - The button for the given key. Only available on the keyboard.\\n-    "},{"kind":"code","text":"`0`"},{"kind":"text","text":" - The first touch. Only available on the touchscreen.\\n-    "},{"kind":"code","text":"`1`"},{"kind":"text","text":" - The second touch. Only available on the touchscreen.\\n-    "},{"kind":"code","text":"`2`"},{"kind":"text","text":" - The third touch. Only available on the touchscreen.\\n-    "},{"kind":"code","text":"`3`"},{"kind":"text","text":" - The fourth touch. Only available on the touchscreen.\\n-    "},{"kind":"code","text":"`5`"},{"kind":"text","text":" - The fifth touch. Only available on the touchscreen."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"literal","value":"down"},{"type":"literal","value":"held"}]}},"comment":{"text":"Gets the state of the given button on the given controller.","tags":[{"tagName":"example","text":"```ts\\nSend a toast if the left mouse button is clicked.\\nconst state = os.getInputState(\\"mousePointer\\", \\"left\\");\\nif (state) {\\n    os.toast(\\"Left mouse button is down!\\");\\n}\\n```"},{"tagName":"example","text":"```ts\\nSend a toast if the shift key is down.\\nconst state = os.getInputState(\\"keyboard\\", \\"Shift\\");\\nif (state) {\\n    os.toast(\\"Shift is down!\\");\\n}\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getInputState"},{"tagName":"docgroup","text":"10-input"}]},"group":"10-input"},{"id":1536,"order":9999,"name":"os.getCameraPosition","reflection":{"id":1536,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the 3D position that the player\'s camera is at in the given portal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the position of the camera in the grid portal.\\nconst position = os.getCameraPosition(\'grid\');\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the position of the camera in the miniGridPortal.\\nconst position = os.getCameraPosition(\\"mini\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getCameraPosition"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-positions"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14394,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14394"}],"parameters":[{"id":1537,"name":"portal","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the portal that the camera position should be retrieved for."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"}]},"defaultValue":"\'grid\'"}],"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},"comment":{"text":"Gets the 3D position that the player\'s camera is at in the given portal.","tags":[{"tagName":"example","text":"```ts\\nGet the position of the camera in the grid portal.\\nconst position = os.getCameraPosition(\'grid\');\\n```"},{"tagName":"example","text":"```ts\\nGet the position of the camera in the miniGridPortal.\\nconst position = os.getCameraPosition(\\"mini\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getCameraPosition"},{"tagName":"docgroup","text":"10-positions"}]},"group":"10-positions"},{"id":1540,"order":9999,"name":"os.getCameraRotation","reflection":{"id":1540,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the 3D rotation that the player\'s camera is at in the given portal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the rotation of the player in the grid portal.\\nconst rotation = os.getCameraRotation(\'grid\');\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the rotation of the player in the miniGridPortal.\\nconst rotation = os.getCameraRotation(\\"mini\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getCameraRotation"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-positions"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14422,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14422"}],"parameters":[{"id":1541,"name":"portal","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the portal that the camera rotation should be retrieved for."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"}]},"defaultValue":"\'grid\'"}],"type":{"type":"reflection","declaration":{"id":1542,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1543,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14423,"character":8,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14423"}],"type":{"type":"intrinsic","name":"number"}},{"id":1544,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14424,"character":8,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14424"}],"type":{"type":"intrinsic","name":"number"}},{"id":1545,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14425,"character":8,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14425"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1543,1544,1545]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14422,"character":70,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14422"}]}}},"comment":{"text":"Gets the 3D rotation that the player\'s camera is at in the given portal.","tags":[{"tagName":"example","text":"```ts\\nGet the rotation of the player in the grid portal.\\nconst rotation = os.getCameraRotation(\'grid\');\\n```"},{"tagName":"example","text":"```ts\\nGet the rotation of the player in the miniGridPortal.\\nconst rotation = os.getCameraRotation(\\"mini\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getCameraRotation"},{"tagName":"docgroup","text":"10-positions"}]},"group":"10-positions"},{"id":1548,"order":9999,"name":"os.getFocusPoint","reflection":{"id":1548,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the 3D position that the player\'s camera is focusing on in the given portal.\\n\\nThis is the same point that is highlighted when "},{"kind":"text","text":"[`#portalShowFocusPoint`](tags:portalShowFocusPoint)"},{"kind":"text","text":" is enabled for a portal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the focus point of the player in the grid portal.\\nconst focusPoint = os.getFocusPoint(\'grid\');\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the focus point of the player in the miniGridPortal.\\nconst focusPoint = os.getFocusPoint(\\"mini\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getFocusPoint"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-positions"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14460,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14460"}],"parameters":[{"id":1549,"name":"portal","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the portal that the camera focus point should be retrieved for."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"}]},"defaultValue":"\'grid\'"}],"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},"comment":{"text":"Gets the 3D position that the player\'s camera is focusing on in the given portal.\\n\\nThis is the same point that is highlighted when portalShowFocusPoint is enabled for a portal.","tags":[{"tagName":"example","text":"```ts\\nGet the focus point of the player in the grid portal.\\nconst focusPoint = os.getFocusPoint(\'grid\');\\n```"},{"tagName":"example","text":"```ts\\nGet the focus point of the player in the miniGridPortal.\\nconst focusPoint = os.getFocusPoint(\\"mini\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getFocusPoint"},{"tagName":"docgroup","text":"10-positions"}]},"group":"10-positions"},{"id":1564,"order":9999,"name":"os.getPointerDirection","reflection":{"id":1564,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the direction that the given pointer is pointed in.\\n\\nCan be combined with "},{"kind":"text","text":"[`math.intersectPlane(origin, direction, planeNormal, planeOrigin)`](ref:math.intersectPlane)"},{"kind":"text","text":" to find where on the ground the pointer is pointing."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the direction of the mouse pointer.\\nconst direction = os.getPointerDirection(\\"mouse\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the direction of the left pointer.\\nconst direction = os.getPointerDirection(\\"left\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind where the mouse is pointing on the ground.\\nconst position = os.getPointerPosition();\\nconst direction = os.getPointerDirection();\\nconst groundPosition = math.intersectPlane(position, direction);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getPointerDirection"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-positions"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14557,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14557"}],"parameters":[{"id":1565,"name":"pointer","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the pointer that the direction should be retrieved for."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"left"},{"type":"literal","value":"right"},{"type":"literal","value":"mouse"}]},"defaultValue":"\'mouse\'"}],"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},"comment":{"text":"Gets the direction that the given pointer is pointed in.\\n\\nCan be combined with math.intersectPlane to find where on the ground the pointer is pointing.","tags":[{"tagName":"example","text":"```ts\\nGet the direction of the mouse pointer.\\nconst direction = os.getPointerDirection(\\"mouse\\");\\n```"},{"tagName":"example","text":"```ts\\nGet the direction of the left pointer.\\nconst direction = os.getPointerDirection(\\"left\\");\\n```"},{"tagName":"example","text":"```ts\\nFind where the mouse is pointing on the ground.\\nconst position = os.getPointerPosition();\\nconst direction = os.getPointerDirection();\\nconst groundPosition = math.intersectPlane(position, direction);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getPointerDirection"},{"tagName":"docgroup","text":"10-positions"}]},"group":"10-positions"},{"id":1552,"order":9999,"name":"os.getPointerPosition","reflection":{"id":1552,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the position that the given pointer is at."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the position of the mouse pointer.\\nconst position = os.getPointerPosition(\\"mouse\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the position of the left pointer.\\nconst position = os.getPointerPosition(\\"left\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getPointerPosition"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-positions"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14487,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14487"}],"parameters":[{"id":1553,"name":"pointer","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the pointer that the position should be retrieved for."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"left"},{"type":"literal","value":"right"},{"type":"literal","value":"mouse"}]},"defaultValue":"\'mouse\'"}],"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},"comment":{"text":"Gets the position that the given pointer is at.","tags":[{"tagName":"example","text":"```ts\\nGet the position of the mouse pointer.\\nconst position = os.getPointerPosition(\\"mouse\\");\\n```"},{"tagName":"example","text":"```ts\\nGet the position of the left pointer.\\nconst position = os.getPointerPosition(\\"left\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getPointerPosition"},{"tagName":"docgroup","text":"10-positions"}]},"group":"10-positions"},{"id":1556,"order":9999,"name":"os.getPointerRotation","reflection":{"id":1556,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the rotation (in euler angles) that the given pointer is at."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the rotation of the mouse pointer.\\nconst rotation = os.getPointerRotation(\\"mouse\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the rotation of the left pointer.\\nconst rotation = os.getPointerRotation(\\"left\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getPointerRotation"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-positions"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14516,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14516"}],"parameters":[{"id":1557,"name":"pointer","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the pointer that the rotation should be retrieved for."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"left"},{"type":"literal","value":"right"},{"type":"literal","value":"mouse"}]},"defaultValue":"\'mouse\'"}],"type":{"type":"reflection","declaration":{"id":1558,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1559,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14518,"character":9,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14518"}],"type":{"type":"intrinsic","name":"number"}},{"id":1560,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14518,"character":20,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14518"}],"type":{"type":"intrinsic","name":"number"}},{"id":1561,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14518,"character":31,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14518"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1559,1560,1561]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14518,"character":7,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14518"}]}}},"comment":{"text":"Gets the rotation (in euler angles) that the given pointer is at.","tags":[{"tagName":"example","text":"```ts\\nGet the rotation of the mouse pointer.\\nconst rotation = os.getPointerRotation(\\"mouse\\");\\n```"},{"tagName":"example","text":"```ts\\nGet the rotation of the left pointer.\\nconst rotation = os.getPointerRotation(\\"left\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getPointerRotation"},{"tagName":"docgroup","text":"10-positions"}]},"group":"10-positions"},{"id":1288,"order":9999,"name":"os.disablePointOfView","reflection":{"id":1288,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Disables Point-of-View mode on the device. This will return the camera to its original position, set the camera type back to what it was before, and change the camera controls to the defaults."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nDisable POV mode.\\nos.disablePointOfView();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.disablePointOfView"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-pov"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5930,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5930"}],"type":{"type":"reference","target":37020,"name":"EnablePOVAction","package":"@casual-simulation/aux-common","id":37020,"qualifiedName":"EnablePOVAction"}},"comment":{"text":"Disables Point-of-View mode on the device. This will return the camera to its original position, set the camera type back to what it was before, and change the camera controls to the defaults.","tags":[{"tagName":"example","text":"```ts\\nDisable POV mode.\\nos.disablePointOfView();\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.disablePointOfView"},{"tagName":"docgroup","text":"10-pov"}]},"group":"10-pov"},{"id":1279,"order":9999,"name":"os.enablePointOfView","reflection":{"id":1279,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Enables Point-of-View mode on the device.\\nUseful for getting a \\"ground level\\" view in the grid portal.\\nThis will move the camera to the given position, set the camera type to "},{"kind":"code","text":"`perspective`"},{"kind":"text","text":", and change the camera controls so that dragging the screen causes the camera to look around.\\n\\nIt is not possible to manually move the camera in this mode, however it is still possible to use "},{"kind":"text","text":"[`os.focusOn(bot, options)`](ref:os.focusOn-bot)"},{"kind":"text","text":" to move the camera."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nEnable POV mode.\\nos.enablePointOfView();\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nEnable POV mode at `(5, 0, 3)`.\\nos.enablePointOfView({\\n    x: 5,\\n    y: 0,\\n    z: 3\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nEnable POV mode with the IMU.\\nos.enablePointOfView(undefined, true);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.enablePointOfView"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-pov"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5913,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5913"}],"parameters":[{"id":1280,"name":"center","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the position that the camera should be placed at. If not specified, then the camera will be placed at "},{"kind":"code","text":"`(0, 0, 0)`"},{"kind":"text","text":"."}],"blockTags":[]},"type":{"type":"reflection","declaration":{"id":1281,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1282,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5914,"character":18,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5914"}],"type":{"type":"intrinsic","name":"number"}},{"id":1283,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5914,"character":29,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5914"}],"type":{"type":"intrinsic","name":"number"}},{"id":1284,"name":"z","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5914,"character":40,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5914"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1282,1283,1284]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5914,"character":16,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5914"}]}},"defaultValue":"..."},{"id":1285,"name":"imu","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"whether the imuPortal should be used to control the camera rotation while in Point-of-View mode."}],"blockTags":[]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":37020,"name":"EnablePOVAction","package":"@casual-simulation/aux-common","id":37020,"qualifiedName":"EnablePOVAction"}},"comment":{"text":"Enables Point-of-View mode on the device.\\nUseful for getting a \\"ground level\\" view in the grid portal.\\nThis will move the camera to the given position, set the camera type to `perspective`, and change the camera controls so that dragging the screen causes the camera to look around.\\n\\nIt is not possible to manually move the camera in this mode, however it is still possible to use os.focusOn-bot to move the camera.","tags":[{"tagName":"example","text":"```ts\\nEnable POV mode.\\nos.enablePointOfView();\\n```"},{"tagName":"example","text":"```ts\\nEnable POV mode at `(5, 0, 3)`.\\nos.enablePointOfView({\\n    x: 5,\\n    y: 0,\\n    z: 3\\n});\\n```"},{"tagName":"example","text":"```ts\\nEnable POV mode with the IMU.\\nos.enablePointOfView(undefined, true);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.enablePointOfView"},{"tagName":"docgroup","text":"10-pov"}]},"group":"10-pov"},{"id":34812,"order":9999,"name":"os.calculateRayFromCamera","reflection":{"id":34812,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calculates the ray that starts at the given portal camera and travels along the path emanating from the given viewport position.\\nReturns a promise that resolves with information about the calculated ray."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind the ray that passes through the center of the screen\\nconst ray = await os.calculateRayFromCamera(\\"grid\\", new Vector2(0, 0));\\nos.toast(\'Calculated ray: \' + ray);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind the ray that passes through the left-center edge of the screen\\nconst ray = await os.raycastFromCamera(\\"grid\\", new Vector2(-1, 0));\\nos.toast(\'Calculated ray: \' + ray);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.calculateRayFromCamera"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-raycast"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9567,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L9567"}],"parameters":[{"id":34813,"name":"portal","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the portal that should be tested."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"map"},{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"},{"type":"literal","value":"miniMap"}]}},{"id":34814,"name":"viewportCoordinates","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the 2D viewport position that the ray should start at.\\nViewport positions locate a specific point on the image that the camera produces.\\n"},{"kind":"code","text":"`(X: 0, Y: 0)`"},{"kind":"text","text":" represents the center of the camera while "},{"kind":"code","text":"`(X: -1, Y: -1)`"},{"kind":"text","text":" represents the lower left corner and "},{"kind":"code","text":"`(X: 1, Y: 1)`"},{"kind":"text","text":" represents the upper right corner."}],"blockTags":[]},"type":{"type":"reference","target":1,"name":"Vector2","package":"@casual-simulation/aux-common","id":1,"qualifiedName":"Vector2"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":36006,"name":"RaycastRay","package":"@casual-simulation/aux-runtime","id":36006,"qualifiedName":"RaycastRay"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Calculates the ray that starts at the given portal camera and travels along the path emanating from the given viewport position.\\nReturns a promise that resolves with information about the calculated ray.","tags":[{"tagName":"example","text":"```ts\\nFind the ray that passes through the center of the screen\\nconst ray = await os.calculateRayFromCamera(\\"grid\\", new Vector2(0, 0));\\nos.toast(\'Calculated ray: \' + ray);\\n```"},{"tagName":"example","text":"```ts\\nFind the ray that passes through the left-center edge of the screen\\nconst ray = await os.raycastFromCamera(\\"grid\\", new Vector2(-1, 0));\\nos.toast(\'Calculated ray: \' + ray);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.calculateRayFromCamera"},{"tagName":"docgroup","text":"10-raycast"}]},"group":"10-raycast"},{"id":34806,"order":9999,"name":"os.raycast","reflection":{"id":34806,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Finds the list of bots that are in the given portal and are intersected by a ray starting at the given origin position and traveling in the given direction.\\nReturns a promise that resolves with information about the intersected bots."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind the bots that are directly to the right of `(0,0,0)` in the grid portal\\nconst result = await os.raycast(\\"grid\\", new Vector3(0, 0, 0), new Vector3(1, 0, 0));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind the bots that the mouse pointer is pointing at in the grid portal\\nconst result = await os.raycast(\\"grid\\", os.getPointerPosition(\\"mouse\\"), os.getPointerDirection(\\"mouse\\"));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.raycast"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-raycast"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9522,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L9522"}],"parameters":[{"id":34807,"name":"portal","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the portal that should be tested."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"map"},{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"},{"type":"literal","value":"miniMap"}]}},{"id":34808,"name":"origin","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the 3D position that the ray should start at."}],"blockTags":[]},"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}},{"id":34809,"name":"direction","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the 3D direction that the ray should travel along."}],"blockTags":[]},"type":{"type":"reference","target":58,"name":"Vector3","package":"@casual-simulation/aux-common","id":58,"qualifiedName":"Vector3"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":35994,"name":"RaycastResult","package":"@casual-simulation/aux-runtime","id":35994,"qualifiedName":"RaycastResult"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Finds the list of bots that are in the given portal and are intersected by a ray starting at the given origin position and traveling in the given direction.\\nReturns a promise that resolves with information about the intersected bots.","tags":[{"tagName":"example","text":"```ts\\nFind the bots that are directly to the right of `(0,0,0)` in the grid portal\\nconst result = await os.raycast(\\"grid\\", new Vector3(0, 0, 0), new Vector3(1, 0, 0));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"},{"tagName":"example","text":"```ts\\nFind the bots that the mouse pointer is pointing at in the grid portal\\nconst result = await os.raycast(\\"grid\\", os.getPointerPosition(\\"mouse\\"), os.getPointerDirection(\\"mouse\\"));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.raycast"},{"tagName":"docgroup","text":"10-raycast"}]},"group":"10-raycast"},{"id":34801,"order":9999,"name":"os.raycastFromCamera","reflection":{"id":34801,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Finds the list of bots that are in the given portal and are intersected by a ray starting at the portal camera and traveling along a path emanating from the given viewport position.\\nReturns a promise that resolves with information about the intersected bots."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind the bots that are in the center of the screen\\nconst result = await os.raycastFromCamera(\\"grid\\", new Vector2(0, 0));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFind the bots that are on the left-center edge of the screen\\nconst result = await os.raycastFromCamera(\\"grid\\", new Vector2(-1, 0));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.raycastFromCamera"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-raycast"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":9489,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L9489"}],"parameters":[{"id":34802,"name":"portal","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the portal that should be tested."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"literal","value":"map"},{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"},{"type":"literal","value":"miniMap"}]}},{"id":34803,"name":"viewportCoordinates","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the 2D viewport position that the ray should start at.\\nViewport positions locate a specific point on the image that the camera produces.\\n"},{"kind":"code","text":"`(X: 0, Y: 0)`"},{"kind":"text","text":" represents the center of the camera while "},{"kind":"code","text":"`(X: -1, Y: -1)`"},{"kind":"text","text":" represents the lower left corner and "},{"kind":"code","text":"`(X: 1, Y: 1)`"},{"kind":"text","text":" represents the upper right corner."}],"blockTags":[]},"type":{"type":"reference","target":1,"name":"Vector2","package":"@casual-simulation/aux-common","id":1,"qualifiedName":"Vector2"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":35994,"name":"RaycastResult","package":"@casual-simulation/aux-runtime","id":35994,"qualifiedName":"RaycastResult"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Finds the list of bots that are in the given portal and are intersected by a ray starting at the portal camera and traveling along a path emanating from the given viewport position.\\nReturns a promise that resolves with information about the intersected bots.","tags":[{"tagName":"example","text":"```ts\\nFind the bots that are in the center of the screen\\nconst result = await os.raycastFromCamera(\\"grid\\", new Vector2(0, 0));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"},{"tagName":"example","text":"```ts\\nFind the bots that are on the left-center edge of the screen\\nconst result = await os.raycastFromCamera(\\"grid\\", new Vector2(-1, 0));\\nos.toast(\'Found Bots: \' + result.botIntersections.map(b => b.id).join(\', \'));\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.raycastFromCamera"},{"tagName":"docgroup","text":"10-raycast"}]},"group":"10-raycast"},{"id":1458,"order":9999,"name":"os.showConfirm","reflection":{"id":1458,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows a confirmation dialog using the given options. Confirmation dialogs are useful for giving users the ability to quickly confirm or cancel an action.\\n\\nReturns a promise that resolves with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the user clicked the \\"Confirm\\" button and "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if they closed the dialog or clicked the \\"Cancel\\" button."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a confirmation dialog\\nlet confirmed = await os.showConfirm({\\n    title: \'Confirm\',\\n    content: \'Please confirm the action.\'\\n});\\n\\nos.toast(\'Confirmed: \' + (confirmed ? \'Yes\' : \'No\'));\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a confirmation dialog with custom button text\\nlet confirmed = await os.showConfirm({\\n    title: \'Confirm\',\\n    content: \'Are you sure?\',\\n    confirmText: \'Yes\',\\n    cancelText: \'No\'\\n});\\n\\nos.toast(\'Confirmed: \' + (confirmed ? \'Yes\' : \'No\'));\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.showConfirm"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-showInput"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7150,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7150"}],"parameters":[{"id":1459,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the options that should be used for the confirmation dialog."}],"blockTags":[]},"type":{"type":"reference","target":36830,"name":"ShowConfirmOptions","package":"@casual-simulation/aux-common","id":36830,"qualifiedName":"ShowConfirmOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Shows a confirmation dialog using the given options. Confirmation dialogs are useful for giving users the ability to quickly confirm or cancel an action.\\n\\nReturns a promise that resolves with `true` if the user clicked the \\"Confirm\\" button and `false` if they closed the dialog or clicked the \\"Cancel\\" button.","tags":[{"tagName":"example","text":"```ts\\nShow a confirmation dialog\\nlet confirmed = await os.showConfirm({\\n    title: \'Confirm\',\\n    content: \'Please confirm the action.\'\\n});\\n\\nos.toast(\'Confirmed: \' + (confirmed ? \'Yes\' : \'No\'));\\n```"},{"tagName":"example","text":"```ts\\nShow a confirmation dialog with custom button text\\nlet confirmed = await os.showConfirm({\\n    title: \'Confirm\',\\n    content: \'Are you sure?\',\\n    confirmText: \'Yes\',\\n    cancelText: \'No\'\\n});\\n\\nos.toast(\'Confirmed: \' + (confirmed ? \'Yes\' : \'No\'));\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.showConfirm"},{"tagName":"docgroup","text":"10-showInput"}]},"group":"10-showInput"},{"id":1448,"order":9999,"name":"os.showInput","reflection":{"id":1448,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows an input modal with the given value and options. When shown, the player will be able to change the value.\\n\\nReturns a Promise that resolves with the final value when the user is finished editing.\\nThis function is similar to "},{"kind":"text","text":"[`os.showInputForTag(bot, tag, options)`](ref:os.showInputForTag)"},{"kind":"text","text":" except it doesn\'t require a bot and a tag."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a basic text input modal and displays a toast message with the input value.\\nconst value = await os.showInput();\\nos.toast(value);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a text input modal with a placeholder.\\nconst name = await os.showInput(null, {\\n    placeholder: \'Enter a name\'\\n});\\nos.toast(name);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a input modal with a custom title.\\nconst name = await os.showInput(\'My Name\', {\\n    title: \'Edit name\'\\n});\\nos.toast(name);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a color input modal with a custom title.\\nconst color = await os.showInput(\'green\', {\\n    type: \'color\',\\n    title: \'Enter a custom color\'\\n});\\nos.toast(color);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow an input for entering secrets (like passwords).\\nconst secret = await os.showInput(\'\', {\\n    type: \'secret\',\\n    title: \'Enter a secret key\'\\n});\\nos.toast(secret);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow an input for entering dates.\\nconst date = await os.showInput(\'\', {\\n    type: \'date\',\\n    title: \'Enter a date\'\\n});\\nos.toast(date);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow an input with a list of options.\\n// Null means nothing is selected\\n// To pre-select an item, pass in the index of the item you want selected.\\nconst selectedItem = await os.showInput(null, {\\n    title: \'Select your favorite superhero\',\\n    type: \'list\',\\n    placeholder: \'Superhero\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItem);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow an input with a list of checkboxes.\\n// Empty array means nothing is selected.\\n// To pre-select items, pass in an array with the indexes of the items you want selected.\\nconst selectedItems = await os.showInput([], {\\n    title: \'Check your favorite superheroes\',\\n    type: \'list\',\\n    subtype: \'checkbox\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItems);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow an input with a dropdown of checkboxes.\\n// Empty array means nothing is selected.\\n// To pre-select items, pass in an array with the indexes of the items you want selected.\\nconst selectedItems = await os.showInput([], {\\n    title: \'Select your favorite superheroes\',\\n    type: \'list\',\\n    subtype: \'multiSelect\',\\n    placeholder: \'Superhero\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItems);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow an input with a list of radio buttons.\\n// Null means nothing is selected.\\n// To pre-select an item, pass in the index of the item you want selected.\\nconst selectedItem = await os.showInput(null, {\\n    title: \'Check your favorite superheroe\',\\n    type: \'list\',\\n    subtype: \'radio\',\\n    placeholder: \'Superhero\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItem);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.showInput"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-showInput"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7112,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7112"}],"parameters":[{"id":1449,"name":"currentValue","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the value that should be shown in the input modal."}],"blockTags":[]},"type":{"type":"intrinsic","name":"any"}},{"id":1450,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the options that indicate how the input box should be customized."}],"blockTags":[]},"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":36872,"name":"ShowInputOptions","package":"@casual-simulation/aux-common","id":36872,"qualifiedName":"ShowInputOptions"}],"name":"Partial","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Shows an input modal with the given value and options. When shown, the player will be able to change the value.\\n\\nReturns a Promise that resolves with the final value when the user is finished editing.\\nThis function is similar to os.showInputForTag except it doesn\'t require a bot and a tag.","tags":[{"tagName":"example","text":"```ts\\nShow a basic text input modal and displays a toast message with the input value.\\nconst value = await os.showInput();\\nos.toast(value);\\n```"},{"tagName":"example","text":"```ts\\nShow a text input modal with a placeholder.\\nconst name = await os.showInput(null, {\\n    placeholder: \'Enter a name\'\\n});\\nos.toast(name);\\n```"},{"tagName":"example","text":"```ts\\nShow a input modal with a custom title.\\nconst name = await os.showInput(\'My Name\', {\\n    title: \'Edit name\'\\n});\\nos.toast(name);\\n```"},{"tagName":"example","text":"```ts\\nShow a color input modal with a custom title.\\nconst color = await os.showInput(\'green\', {\\n    type: \'color\',\\n    title: \'Enter a custom color\'\\n});\\nos.toast(color);\\n```"},{"tagName":"example","text":"```ts\\nShow an input for entering secrets (like passwords).\\nconst secret = await os.showInput(\'\', {\\n    type: \'secret\',\\n    title: \'Enter a secret key\'\\n});\\nos.toast(secret);\\n```"},{"tagName":"example","text":"```ts\\nShow an input for entering dates.\\nconst date = await os.showInput(\'\', {\\n    type: \'date\',\\n    title: \'Enter a date\'\\n});\\nos.toast(date);\\n```"},{"tagName":"example","text":"```ts\\nShow an input with a list of options.\\n// Null means nothing is selected\\n// To pre-select an item, pass in the index of the item you want selected.\\nconst selectedItem = await os.showInput(null, {\\n    title: \'Select your favorite superhero\',\\n    type: \'list\',\\n    placeholder: \'Superhero\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItem);\\n```"},{"tagName":"example","text":"```ts\\nShow an input with a list of checkboxes.\\n// Empty array means nothing is selected.\\n// To pre-select items, pass in an array with the indexes of the items you want selected.\\nconst selectedItems = await os.showInput([], {\\n    title: \'Check your favorite superheroes\',\\n    type: \'list\',\\n    subtype: \'checkbox\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItems);\\n```"},{"tagName":"example","text":"```ts\\nShow an input with a dropdown of checkboxes.\\n// Empty array means nothing is selected.\\n// To pre-select items, pass in an array with the indexes of the items you want selected.\\nconst selectedItems = await os.showInput([], {\\n    title: \'Select your favorite superheroes\',\\n    type: \'list\',\\n    subtype: \'multiSelect\',\\n    placeholder: \'Superhero\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItems);\\n```"},{"tagName":"example","text":"```ts\\nShow an input with a list of radio buttons.\\n// Null means nothing is selected.\\n// To pre-select an item, pass in the index of the item you want selected.\\nconst selectedItem = await os.showInput(null, {\\n    title: \'Check your favorite superheroe\',\\n    type: \'list\',\\n    subtype: \'radio\',\\n    placeholder: \'Superhero\',\\n    items: [\\n        {\\n            label: \'Superman\',\\n            value: 1\\n        },\\n        {\\n            label: \'Iron Man\',\\n            value: 2\\n        },\\n        {\\n            label: \'Batman\',\\n            value: 3\\n        },\\n        {\\n            label: \'Wonder Woman\',\\n            value: 4\\n        }\\n    ]\\n});\\nos.toast(selectedItem);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.showInput"},{"tagName":"docgroup","text":"10-showInput"}]},"group":"10-showInput"},{"id":1442,"order":9999,"name":"os.showInputForTag","reflection":{"id":1442,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows an input modal for the given bot and tag with the given options.\\nWhen shown, the player will be able to change the value stored in the given tag.\\nTriggers the "},{"kind":"text","text":"[`@onSaveInput`](tags:@onSaveInput)"},{"kind":"text","text":" whisper when the modal is closed with saving and the "},{"kind":"text","text":"[`@onCloseInput`](tags:@onCloseInput)"},{"kind":"text","text":" whisper when the modal is closed without saving."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a basic text input modal for the #name tag on this bot.\\nos.showInputForTag(this, \\"name\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a text input modal with a placeholder for the #name tag.\\nos.showInputForTag(this, \\"name\\", {\\n    placeholder: \'Enter a name\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a input modal with a custom title.\\nos.showInputForTag(this, \\"name\\", {\\n    title: \'Edit name\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a color input modal with a custom title.\\nos.showInputForTag(this, \\"color\\", {\\n    type: \'color\',\\n    title: \'Enter a custom color\'\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.showInputForTag"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-showInput"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6938,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6938"}],"parameters":[{"id":1443,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot or bot ID that the input should be shown for."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":38150,"name":"Bot","package":"@casual-simulation/aux-common","id":38150,"qualifiedName":"Bot"}]}},{"id":1444,"name":"tag","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the tag that should be edited on the bot."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1445,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the possible cusomization options for the input modal."}],"blockTags":[]},"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":36872,"name":"ShowInputOptions","package":"@casual-simulation/aux-common","id":36872,"qualifiedName":"ShowInputOptions"}],"name":"Partial","package":"typescript"}}],"type":{"type":"reference","target":36811,"name":"ShowInputForTagAction","package":"@casual-simulation/aux-common","id":36811,"qualifiedName":"ShowInputForTagAction"}},"comment":{"text":"Shows an input modal for the given bot and tag with the given options.\\nWhen shown, the player will be able to change the value stored in the given tag.\\nTriggers the @onSaveInput whisper when the modal is closed with saving and the @onCloseInput whisper when the modal is closed without saving.","tags":[{"tagName":"example","text":"```ts\\nShow a basic text input modal for the #name tag on this bot.\\nos.showInputForTag(this, \\"name\\");\\n```"},{"tagName":"example","text":"```ts\\nShow a text input modal with a placeholder for the #name tag.\\nos.showInputForTag(this, \\"name\\", {\\n    placeholder: \'Enter a name\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nShow a input modal with a custom title.\\nos.showInputForTag(this, \\"name\\", {\\n    title: \'Edit name\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nShow a color input modal with a custom title.\\nos.showInputForTag(this, \\"color\\", {\\n    type: \'color\',\\n    title: \'Enter a custom color\'\\n});\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.showInputForTag"},{"tagName":"docgroup","text":"10-showInput"}]},"group":"10-showInput"},{"id":1158,"order":9999,"name":"os.hideTips","reflection":{"id":1158,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hides the tooltips that have the specified IDs. If no arguments are specified, then all tooltips will be hidden.\\nReturns a promise that resolves when the tooltips have been hidden."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow and hide a tooltip message.\\nconst id = await os.tip(\\"Hello!\\");\\nawait os.sleep(1000);\\nawait os.hideTips(id);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.hideTips"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-tip"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5193,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5193"}],"parameters":[{"id":1159,"name":"tipIds","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the tooltip ID or array of tooltip IDs that should be hidden."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Hides the tooltips that have the specified IDs. If no arguments are specified, then all tooltips will be hidden.\\nReturns a promise that resolves when the tooltips have been hidden.","tags":[{"tagName":"example","text":"```ts\\nShow and hide a tooltip message.\\nconst id = await os.tip(\\"Hello!\\");\\nawait os.sleep(1000);\\nawait os.hideTips(id);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.hideTips"},{"tagName":"docgroup","text":"10-tip"}]},"group":"10-tip"},{"id":1151,"order":9999,"name":"os.tip","reflection":{"id":1151,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows a temporary \\"tooltip\\" message on the screen. Optionally placed at the specified position and shown for the given duration.\\nReturns a promise that resolves with the ID of the new tooltip.\\n\\nIf a position is not specified, then a position just below the current mouse position will be used.\\nIf on mobile, then the last touch position will be used or the center of the screen if the user has not touched the screen.\\nAdditionally, if a position is not specified then the tooltip will be automatically hidden if the user moves the mouse significantly away from the position that the mouse was at when the tooltip was shown."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a \\"Hello!\\" tip message.\\nos.tip(\\"Hello!\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a tip at the center of the screen.\\nos.tip(\\"This is in the center of the screen.\\", gridPortalBot.tags.pixelWidth / 2, gridPortalBot.tags.pixelHeight / 2);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a tip near the mouse cursor for 5 seconds.\\nos.tip(\\"5 second tip.\\", null, null, 5);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a tip and record its ID in a tag mask.\\nmasks.tipID = await os.tip(\\"Hello!\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.tip"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-tip"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5161,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5161"}],"parameters":[{"id":1152,"name":"message","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the text that the tooltip message should show."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"object"},{"type":"array","elementType":{"type":"intrinsic","name":"any"}}]}},{"id":1153,"name":"pixelX","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the horizontal pixel position that the tooltip should be shown at on the screen. If not specified then the current mouse position will be used."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":1154,"name":"pixelY","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the vertical position that the tooltip should be shown at on the screen. If not specified then a position just below the current mouse position will be used."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":1155,"name":"duration","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the number of seconds that the toast should be shown for before automatically being hidden. (Default is 2)"}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Shows a temporary \\"tooltip\\" message on the screen. Optionally placed at the specified position and shown for the given duration.\\nReturns a promise that resolves with the ID of the new tooltip.\\n\\nIf a position is not specified, then a position just below the current mouse position will be used.\\nIf on mobile, then the last touch position will be used or the center of the screen if the user has not touched the screen.\\nAdditionally, if a position is not specified then the tooltip will be automatically hidden if the user moves the mouse significantly away from the position that the mouse was at when the tooltip was shown.","tags":[{"tagName":"example","text":"```ts\\nShow a \\"Hello!\\" tip message.\\nos.tip(\\"Hello!\\");\\n```"},{"tagName":"example","text":"```ts\\nShow a tip at the center of the screen.\\nos.tip(\\"This is in the center of the screen.\\", gridPortalBot.tags.pixelWidth / 2, gridPortalBot.tags.pixelHeight / 2);\\n```"},{"tagName":"example","text":"```ts\\nShow a tip near the mouse cursor for 5 seconds.\\nos.tip(\\"5 second tip.\\", null, null, 5);\\n```"},{"tagName":"example","text":"```ts\\nShow a tip and record its ID in a tag mask.\\nmasks.tipID = await os.tip(\\"Hello!\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.tip"},{"tagName":"docgroup","text":"10-tip"}]},"group":"10-tip"},{"id":1294,"order":9999,"name":"os.disableWakeLock","reflection":{"id":1294,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Disables the wake lock that was previously enabled. Returns a promise that resolves once the wake lock has been disabled."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nDisable the wake lock\\nawait os.disableWakeLock();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.disableWakeLock"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-wake-lock"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5964,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5964"}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Disables the wake lock that was previously enabled. Returns a promise that resolves once the wake lock has been disabled.","tags":[{"tagName":"example","text":"```ts\\nDisable the wake lock\\nawait os.disableWakeLock();\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.disableWakeLock"},{"tagName":"docgroup","text":"10-wake-lock"}]},"group":"10-wake-lock"},{"id":1297,"order":9999,"name":"os.getWakeLockConfiguration","reflection":{"id":1297,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the current wake lock state. Returns a promise that resolves with an object that contains information about the current wake lock state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the current wake lock state\\nconst configuration = await os.getWakeLockConfiguration();\\n\\nif (configuration.enabled) {\\n    os.toast(\'Wake lock is enabled!\');\\n} else {\\n    os.toast(\'Wake lock is disabled.\');\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getWakeLockConfiguration"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-wake-lock"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5986,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5986"}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":37470,"name":"WakeLockConfiguration","package":"@casual-simulation/aux-common","id":37470,"qualifiedName":"WakeLockConfiguration"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Retrieves the current wake lock state. Returns a promise that resolves with an object that contains information about the current wake lock state.","tags":[{"tagName":"example","text":"```ts\\nGet the current wake lock state\\nconst configuration = await os.getWakeLockConfiguration();\\n\\nif (configuration.enabled) {\\n    os.toast(\'Wake lock is enabled!\');\\n} else {\\n    os.toast(\'Wake lock is disabled.\');\\n}\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getWakeLockConfiguration"},{"tagName":"docgroup","text":"10-wake-lock"}]},"group":"10-wake-lock"},{"id":1291,"order":9999,"name":"os.requestWakeLock","reflection":{"id":1291,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Requests a wake lock that will keep the device screen awake.\\nThis will ask the user for permission to keep the screen awake.\\nReturns a promise that resolves once the wake lock has been granted. If the wake lock is denied, then an error will be thrown.\\n\\nUseful for a kiosk mode where the screen is always supposed to be on."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nRequest a wake lock from the user.\\nawait os.requestWakeLock();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.requestWakeLock"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"10-wake-lock"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5948,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5948"}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Requests a wake lock that will keep the device screen awake.\\nThis will ask the user for permission to keep the screen awake.\\nReturns a promise that resolves once the wake lock has been granted. If the wake lock is denied, then an error will be thrown.\\n\\nUseful for a kiosk mode where the screen is always supposed to be on.","tags":[{"tagName":"example","text":"```ts\\nRequest a wake lock from the user.\\nawait os.requestWakeLock();\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.requestWakeLock"},{"tagName":"docgroup","text":"10-wake-lock"}]},"group":"10-wake-lock"},{"id":1518,"order":9999,"name":"os.addBotDropGrid","reflection":{"id":1518,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Specifies a list of grids that can be used to position the currently dragged bot when it is being dropped on the given bot.\\n\\nIf called when the user is not dragging anything, then this function does nothing."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid for the portal that the bot currently exists in when it is being dropped on this bot.\\nos.addDropGrid(thisBot, {});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid with a 60 degree X rotation when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 0 },\\n    rotation: { x: 60 * (Math.PI / 180), y: 0, z: 0 },\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid for a specific portal bot when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    portalBot: getBot(byTag(\'form\', \'portal\'), byTag(\'formAddress\', \'myDimension\')),\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid with a custom size when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 20, y: 10 }\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid that the user can see when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd multiple grids with custom priorities when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 10, y: 10 },\\n    showGrid: true,\\n    priority: 10\\n}, {\\n    position: { x: 0, y: 0, z: 0 },\\n    bounds: { x: 20, y: 20 },\\n    showGrid: true,\\n    priority: 20\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a spherical grid that the user can see.\\nos.addBotDropGrid(thisBot, {\\n    type: \\"sphere\\",\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.addBotDropGrid"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7653,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7653"}],"parameters":[{"id":1519,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot which, when the dragged bot is being dropped onto it (as indicated by "},{"kind":"text","text":"[`@onDropEnter`](tags:@onDropEnter)"},{"kind":"text","text":"/"},{"kind":"text","text":"[`@onDropExit`](tags:@onDropExit)"},{"kind":"text","text":"), the specified snap targets will take effect."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":38150,"name":"Bot","package":"@casual-simulation/aux-common","id":38150,"qualifiedName":"Bot"}]}},{"id":1520,"name":"targets","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the list of grids to add."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":35896,"name":"SnapGridTarget","package":"@casual-simulation/aux-runtime","id":35896,"qualifiedName":"SnapGridTarget"}}}],"type":{"type":"reference","target":37168,"name":"AddDropGridTargetsAction","package":"@casual-simulation/aux-common","id":37168,"qualifiedName":"AddDropGridTargetsAction"}},"comment":{"text":"Specifies a list of grids that can be used to position the currently dragged bot when it is being dropped on the given bot.\\n\\nIf called when the user is not dragging anything, then this function does nothing.","tags":[{"tagName":"example","text":"```ts\\nAdd a grid for the portal that the bot currently exists in when it is being dropped on this bot.\\nos.addDropGrid(thisBot, {});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid with a 60 degree X rotation when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 0 },\\n    rotation: { x: 60 * (Math.PI / 180), y: 0, z: 0 },\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid for a specific portal bot when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    portalBot: getBot(byTag(\'form\', \'portal\'), byTag(\'formAddress\', \'myDimension\')),\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid with a custom size when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 20, y: 10 }\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid that the user can see when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd multiple grids with custom priorities when it is being dropped on this bot.\\nos.addBotDropGrid(thisBot, {\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 10, y: 10 },\\n    showGrid: true,\\n    priority: 10\\n}, {\\n    position: { x: 0, y: 0, z: 0 },\\n    bounds: { x: 20, y: 20 },\\n    showGrid: true,\\n    priority: 20\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a spherical grid that the user can see.\\nos.addBotDropGrid(thisBot, {\\n    type: \\"sphere\\",\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.addBotDropGrid"}]},"group":null},{"id":1509,"order":9999,"name":"os.addBotDropSnap","reflection":{"id":1509,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Specifies a list of snap targets that can be used to position the currently dragged bot when it is being dropped on the given bot. This function is useful for making some bots act like a \\"selector\\" or mask for drop areas.\\n\\nIf called when the user is not dragging anything, then this function does nothing."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to the grid when it is being dropped on this bot.\\nos.addBotDropSnap(thisBot, \\"grid\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to this bot\'s faces.\\nos.addBotDropSnap(thisBot, \\"face\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to a point when it is being dropped on this bot.\\nos.addBotDropSnap(thisBot, {\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 3,\\n    },\\n    distance: 1\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to the center or bot faces when it is being dropped on this bot.\\nos.addBotDropSnap(thisBot, {\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 0,\\n    },\\n    distance: 1\\n}, \\"face\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.addBotDropSnap"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7527,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7527"}],"parameters":[{"id":1510,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot which, when the dragged bot is being dropped onto it (as indicated by "},{"kind":"text","text":"[`@onDropEnter`](tags:@onDropEnter)"},{"kind":"text","text":"/"},{"kind":"text","text":"[`@onDropExit`](tags:@onDropExit)"},{"kind":"text","text":"), the specified snap targets will take effect."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":38150,"name":"Bot","package":"@casual-simulation/aux-common","id":38150,"qualifiedName":"RuntimeBot"}]}},{"id":1511,"name":"targets","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the snap targets that should be enabled when the bot is being dropped on."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":37167,"name":"SnapTarget","package":"@casual-simulation/aux-common","id":37167,"qualifiedName":"SnapTarget"}}}],"type":{"type":"reference","target":37143,"name":"AddDropSnapPointsAction","package":"@casual-simulation/aux-common","id":37143,"qualifiedName":"AddDropSnapTargetsAction"}},"comment":{"text":"Specifies a list of snap targets that can be used to position the currently dragged bot when it is being dropped on the given bot. This function is useful for making some bots act like a \\"selector\\" or mask for drop areas.\\n\\nIf called when the user is not dragging anything, then this function does nothing.","tags":[{"tagName":"example","text":"```ts\\nSnap the dragged bot to the grid when it is being dropped on this bot.\\nos.addBotDropSnap(thisBot, \\"grid\\");\\n```"},{"tagName":"example","text":"```ts\\nSnap the dragged bot to this bot\'s faces.\\nos.addBotDropSnap(thisBot, \\"face\\");\\n```"},{"tagName":"example","text":"```ts\\nSnap the dragged bot to a point when it is being dropped on this bot.\\nos.addBotDropSnap(thisBot, {\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 3,\\n    },\\n    distance: 1\\n});\\n```"},{"tagName":"example","text":"```ts\\nSnap the dragged bot to the center or bot faces when it is being dropped on this bot.\\nos.addBotDropSnap(thisBot, {\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 0,\\n    },\\n    distance: 1\\n}, \\"face\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.addBotDropSnap"}]},"group":null},{"id":1514,"order":9999,"name":"os.addDropGrid","reflection":{"id":1514,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Specifies a list of grids that can be used to position the currently dragged bot.\\n\\nIf called when the user is not dragging anything, then this function does nothing."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid for the portal that the bot currently exists in.\\nos.addDropGrid({});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid with a 60 degree X rotation.\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 0 },\\n    rotation: { x: 60 * (Math.PI / 180), y: 0, z: 0 },\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid for a specific portal bot.\\nos.addDropGrid({\\n    portalBot: getBot(byTag(\'form\', \'portal\'), byTag(\'formAddress\', \'myDimension\')),\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid with a custom size.\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 20, y: 10 }\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a grid that the user can see.\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd multiple grids with custom priorities\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 10, y: 10 },\\n    showGrid: true,\\n    priority: 10\\n}, {\\n    position: { x: 0, y: 0, z: 0 },\\n    bounds: { x: 20, y: 20 },\\n    showGrid: true,\\n    priority: 20\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAdd a spherical grid that the user can see.\\nos.addDropGrid({\\n    type: \\"sphere\\",\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.addDropGrid"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7590,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7590"}],"parameters":[{"id":1515,"name":"targets","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"the list of grids to add."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":35896,"name":"SnapGridTarget","package":"@casual-simulation/aux-runtime","id":35896,"qualifiedName":"SnapGridTarget"}}}],"type":{"type":"reference","target":37168,"name":"AddDropGridTargetsAction","package":"@casual-simulation/aux-common","id":37168,"qualifiedName":"AddDropGridTargetsAction"}},"comment":{"text":"Specifies a list of grids that can be used to position the currently dragged bot.\\n\\nIf called when the user is not dragging anything, then this function does nothing.","tags":[{"tagName":"example","text":"```ts\\nAdd a grid for the portal that the bot currently exists in.\\nos.addDropGrid({});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid with a 60 degree X rotation.\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 0 },\\n    rotation: { x: 60 * (Math.PI / 180), y: 0, z: 0 },\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid for a specific portal bot.\\nos.addDropGrid({\\n    portalBot: getBot(byTag(\'form\', \'portal\'), byTag(\'formAddress\', \'myDimension\')),\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid with a custom size.\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 20, y: 10 }\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a grid that the user can see.\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd multiple grids with custom priorities\\nos.addDropGrid({\\n    position: { x: 0, y: 0, z: 3 },\\n    bounds: { x: 10, y: 10 },\\n    showGrid: true,\\n    priority: 10\\n}, {\\n    position: { x: 0, y: 0, z: 0 },\\n    bounds: { x: 20, y: 20 },\\n    showGrid: true,\\n    priority: 20\\n});\\n```"},{"tagName":"example","text":"```ts\\nAdd a spherical grid that the user can see.\\nos.addDropGrid({\\n    type: \\"sphere\\",\\n    position: { x: 0, y: 0, z: 3 },\\n    showGrid: true\\n});\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.addDropGrid"}]},"group":null},{"id":1505,"order":9999,"name":"os.addDropSnap","reflection":{"id":1505,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Specifies a list of snap targets that can be used to position the currently dragged bot.\\n\\nIf called when the user is not dragging anything, then this function does nothing."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to the grid.\\nos.addDropSnap(\\"grid\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to other bot faces.\\nos.addDropSnap(\\"face\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to a point.\\nos.addDropSnap({\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 3,\\n    },\\n    distance: 1\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to the global X axis.\\nos.addDropSnap({\\n    direction: {\\n        x: 1,\\n        y: 0,\\n        z: 0,\\n    },\\n    origin: {\\n        x: 0,\\n        y: 0,\\n        z: 0\\n    },\\n    distance: 2\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSnap the dragged bot to the center or bot faces.\\nos.addDropSnap({\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 0,\\n    },\\n    distance: 1\\n}, \\"face\\");\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.addDropSnap"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7486,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7486"}],"parameters":[{"id":1506,"name":"targets","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The list of snap targets to add."}],"blockTags":[]},"type":{"type":"array","elementType":{"type":"reference","target":37167,"name":"SnapTarget","package":"@casual-simulation/aux-common","id":37167,"qualifiedName":"SnapTarget"}}}],"type":{"type":"reference","target":37143,"name":"AddDropSnapPointsAction","package":"@casual-simulation/aux-common","id":37143,"qualifiedName":"AddDropSnapTargetsAction"}},"comment":{"text":"Specifies a list of snap targets that can be used to position the currently dragged bot.\\n\\nIf called when the user is not dragging anything, then this function does nothing.","tags":[{"tagName":"example","text":"```ts\\nSnap the dragged bot to the grid.\\nos.addDropSnap(\\"grid\\");\\n```"},{"tagName":"example","text":"```ts\\nSnap the dragged bot to other bot faces.\\nos.addDropSnap(\\"face\\");\\n```"},{"tagName":"example","text":"```ts\\nSnap the dragged bot to a point.\\nos.addDropSnap({\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 3,\\n    },\\n    distance: 1\\n});\\n```"},{"tagName":"example","text":"```ts\\nSnap the dragged bot to the global X axis.\\nos.addDropSnap({\\n    direction: {\\n        x: 1,\\n        y: 0,\\n        z: 0,\\n    },\\n    origin: {\\n        x: 0,\\n        y: 0,\\n        z: 0\\n    },\\n    distance: 2\\n});\\n```"},{"tagName":"example","text":"```ts\\nSnap the dragged bot to the center or bot faces.\\nos.addDropSnap({\\n    position: {\\n        x: 0,\\n        y: 0,\\n        z: 0,\\n    },\\n    distance: 1\\n}, \\"face\\");\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.addDropSnap"}]},"group":null},{"id":1523,"order":9999,"name":"os.enableCustomDragging","reflection":{"id":1523,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Enables \\"custom dragging\\" for the current bot drag operation.\\n\\nCustom dragging tells CasualOS to not move the bot to the dragged position. Instead, it will calculate where the bot would be dragged and send that information in the "},{"kind":"text","text":"[`@onDragging`](tags:@onDragging)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onAnyBotDragging`](tags:@onAnyBotDragging)"},{"kind":"text","text":" listeners.\\n\\nThis is useful for custom bot dragging behavior like choosing to scale or rotate a bot instead of moving it."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nEnable custom dragging for the current drag operation\\nos.enableCustomDragging();\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.enableCustomDragging"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":7691,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L7691"}],"type":{"type":"reference","target":37194,"name":"EnableCustomDraggingAction","package":"@casual-simulation/aux-common","id":37194,"qualifiedName":"EnableCustomDraggingAction"}},"comment":{"text":"Enables \\"custom dragging\\" for the current bot drag operation.\\n\\nCustom dragging tells CasualOS to not move the bot to the dragged position. Instead, it will calculate where the bot would be dragged and send that information in the @onDragging and @onAnyBotDragging listeners.\\n\\nThis is useful for custom bot dragging behavior like choosing to scale or rotate a bot instead of moving it.","tags":[{"tagName":"example","text":"```ts\\nEnable custom dragging for the current drag operation\\nos.enableCustomDragging();\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.enableCustomDragging"}]},"group":null},{"id":1199,"order":9999,"name":"os.focusOn-bot","reflection":{"id":1199,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Focuses on the given bot. For bots in the bot or miniGridPortals, this animates the camera such that the portal focus point is placed on the given bot or position.\\nFor input bots in menu portal, this gives keyboard focus to them.\\n\\nReturns a promise which resolves when the bot has been focused.\\nFor the bot and miniGridPortals this is when the animation finishes and rejects if the user takes control of the camera during the animation. For menu bots this is when the input field is focused and rejects if the bot is not a input bot."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nMove the player\'s view to show a bot named bob.\\nawait os.focusOn(getBot(\\"#name\\", \\"bob\\"));\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nMove the player\'s view to show this bot from the top.\\nawait os.focusOn(thisBot, {\\n    rotation: {\\n        x: 0,\\n        y: 0\\n    }\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nMove the player\'s view to show this bot with a particular zoom value.\\nawait os.focusOn(thisBot, {\\n    zoom: 15\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFocus on this bot in the menu portal\\nawait os.focusOn(thisBot, {\\n    portal: \'menu\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nRotate the camera around the focus point 3 times.\\nawait os.focusOn(thisBot, {\\n    rotation: {\\n        y: (Math.PI * 2) * 3,\\n        normalize: false\\n    }\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFocus the onClick tag in the systemPortal\\nawait os.focusOn(thisBot, {\\n    tag: \'onClick\',\\n    portal: \'system\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFocus line 2 in the onClick tag in the sheetPortal\\nawait os.focusOn(thisBot, {\\n    tag: \'onClick\',\\n    lineNumber: 2,\\n    portal: \'sheet\'\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFocus index 9 through 15 in the onClick tag in the tagPortal\\nawait os.focusOn(thisBot, {\\n    tag: \'onClick\',\\n    startIndex: 9,\\n    endIndex: 15,\\n    portal: \'tag\'\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.focusOn"}]},{"tag":"@docid","content":[{"kind":"text","text":"os.focusOn-bot"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5432,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5432"}],"parameters":[{"id":1200,"name":"bot","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":38150,"name":"Bot","package":"@casual-simulation/aux-common","id":38150,"qualifiedName":"Bot"}]}},{"id":1201,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the additional options to use for the focus operation. This can be used to change how the camera moves or to specify which portal the bot should be focused in."}],"blockTags":[]},"type":{"type":"reference","target":36605,"name":"FocusOnOptions","package":"@casual-simulation/aux-common","id":36605,"qualifiedName":"FocusOnOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Focuses on the given bot. For bots in the bot or miniGridPortals, this animates the camera such that the portal focus point is placed on the given bot or position.\\nFor input bots in menu portal, this gives keyboard focus to them.\\n\\nReturns a promise which resolves when the bot has been focused.\\nFor the bot and miniGridPortals this is when the animation finishes and rejects if the user takes control of the camera during the animation. For menu bots this is when the input field is focused and rejects if the bot is not a input bot.","tags":[{"tagName":"example","text":"```ts\\nMove the player\'s view to show a bot named bob.\\nawait os.focusOn(getBot(\\"#name\\", \\"bob\\"));\\n```"},{"tagName":"example","text":"```ts\\nMove the player\'s view to show this bot from the top.\\nawait os.focusOn(thisBot, {\\n    rotation: {\\n        x: 0,\\n        y: 0\\n    }\\n});\\n```"},{"tagName":"example","text":"```ts\\nMove the player\'s view to show this bot with a particular zoom value.\\nawait os.focusOn(thisBot, {\\n    zoom: 15\\n});\\n```"},{"tagName":"example","text":"```ts\\nFocus on this bot in the menu portal\\nawait os.focusOn(thisBot, {\\n    portal: \'menu\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nRotate the camera around the focus point 3 times.\\nawait os.focusOn(thisBot, {\\n    rotation: {\\n        y: (Math.PI * 2) * 3,\\n        normalize: false\\n    }\\n});\\n```"},{"tagName":"example","text":"```ts\\nFocus the onClick tag in the systemPortal\\nawait os.focusOn(thisBot, {\\n    tag: \'onClick\',\\n    portal: \'system\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nFocus line 2 in the onClick tag in the sheetPortal\\nawait os.focusOn(thisBot, {\\n    tag: \'onClick\',\\n    lineNumber: 2,\\n    portal: \'sheet\'\\n});\\n```"},{"tagName":"example","text":"```ts\\nFocus index 9 through 15 in the onClick tag in the tagPortal\\nawait os.focusOn(thisBot, {\\n    tag: \'onClick\',\\n    startIndex: 9,\\n    endIndex: 15,\\n    portal: \'tag\'\\n});\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.focusOn"},{"tagName":"docid","text":"os.focusOn-bot"}]},"group":null},{"id":1204,"order":9999,"name":"os.focusOn-position","reflection":{"id":1204,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Focuses on the given position.\\n\\nReturns a promise which resolves when the position has been focused."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nMove the player\'s view to a specific position.\\nawait os.focusOn({\\n    x: 15,\\n    y: 9.5\\n});\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nFocus on Buckingham Palace in the map portal\\nawait os.focusOn({\\n    x: -0.141329,\\n    y: 51.501541\\n}, {\\n    portal: \'map\',\\n    zoom: 10000\\n});\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.focusOn"}]},{"tag":"@docid","content":[{"kind":"text","text":"os.focusOn-position"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5466,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5466"}],"parameters":[{"id":1205,"name":"position","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1206,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1207,"name":"x","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5467,"character":20,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5467"}],"type":{"type":"intrinsic","name":"number"}},{"id":1208,"name":"y","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5467,"character":31,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5467"}],"type":{"type":"intrinsic","name":"number"}},{"id":1209,"name":"z","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5467,"character":42,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5467"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1207,1208,1209]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5467,"character":18,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5467"}]}}},{"id":1210,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the additional options to use for the focus operation. This can be used to change how the camera moves or to specify which portal the bot should be focused in."}],"blockTags":[]},"type":{"type":"reference","target":36605,"name":"FocusOnOptions","package":"@casual-simulation/aux-common","id":36605,"qualifiedName":"FocusOnOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Focuses on the given position.\\n\\nReturns a promise which resolves when the position has been focused.","tags":[{"tagName":"example","text":"```ts\\nMove the player\'s view to a specific position.\\nawait os.focusOn({\\n    x: 15,\\n    y: 9.5\\n});\\n```"},{"tagName":"example","text":"```ts\\nFocus on Buckingham Palace in the map portal\\nawait os.focusOn({\\n    x: -0.141329,\\n    y: 51.501541\\n}, {\\n    portal: \'map\',\\n    zoom: 10000\\n});\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.focusOn"},{"tagName":"docid","text":"os.focusOn-position"}]},"group":null},{"id":1580,"order":9999,"name":"os.getAverageFrameRate","reflection":{"id":1580,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the number of frames that have occurred over the last second.\\nReturns a promise that resolves with the number of frames that have ocurred in the last second."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the current frames per second.\\nlet fps = await os.getAverageFrameRate();\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate a basic FPS counter.\\nsetInterval(async () => {\\n    masks.label = await os.getAverageFrameRate();\\n}, 1000);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.getAverageFrameRate"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":14691,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L14691"}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Gets the number of frames that have occurred over the last second.\\nReturns a promise that resolves with the number of frames that have ocurred in the last second.","tags":[{"tagName":"example","text":"```ts\\nGet the current frames per second.\\nlet fps = await os.getAverageFrameRate();\\n```"},{"tagName":"example","text":"```ts\\nCreate a basic FPS counter.\\nsetInterval(async () => {\\n    masks.label = await os.getAverageFrameRate();\\n}, 1000);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.getAverageFrameRate"}]},"group":null},{"id":1411,"order":9999,"name":"os.replaceDragBot","reflection":{"id":1411,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Replaces the bot that the user is dragging with the given bot.\\n\\nIf called when the user is not dragging anything, then the given bot or mod will be dragged using the current input method. When in VR, the current input method is the most recently used VR controller. Otherwise it is the mouse/touchscreen."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nDrag a clone of this bot.\\nlet clone = create(thisBot);\\nos.replaceDragBot(clone);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@docname","content":[{"kind":"text","text":"os.replaceDragBot"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":6708,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L6708"}],"parameters":[{"id":1412,"name":"bot","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bot that should be dragged. If given a bot while dragging, then that bot\'s "},{"kind":"text","text":"[`@onDrag`](tags:@onDrag)"},{"kind":"text","text":" will be skippped but "},{"kind":"text","text":"[`@onDrop`](tags:@onDrop)"},{"kind":"text","text":" will be called. If given a bot when not dragging, then that bot\'s "},{"kind":"text","text":"[`@onDrag`](tags:@onDrag)"},{"kind":"text","text":" and "},{"kind":"text","text":"[`@onDrop`](tags:@onDrop)"},{"kind":"text","text":" will be called."}],"blockTags":[]},"type":{"type":"reference","target":38150,"name":"Bot","package":"@casual-simulation/aux-common","id":38150,"qualifiedName":"RuntimeBot"}}],"type":{"type":"reference","target":36568,"name":"ReplaceDragBotAction","package":"@casual-simulation/aux-common","id":36568,"qualifiedName":"ReplaceDragBotAction"}},"comment":{"text":"Replaces the bot that the user is dragging with the given bot.\\n\\nIf called when the user is not dragging anything, then the given bot or mod will be dragged using the current input method. When in VR, the current input method is the most recently used VR controller. Otherwise it is the mouse/touchscreen.","tags":[{"tagName":"example","text":"```ts\\nDrag a clone of this bot.\\nlet clone = create(thisBot);\\nos.replaceDragBot(clone);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"docname","text":"os.replaceDragBot"}]},"group":null},{"id":1146,"order":9999,"name":"os.toast","reflection":{"id":1146,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shows a temporary \\"toast\\" notification to the player at the bottom of the screen with the given message.\\nOptionally accepts a duration parameter which is the number of seconds that the message should be on the screen."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow a \\"Hello!\\" toast message.\\nos.toast(\\"Hello!\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nShow the player a code for 5 seconds.\\nos.toast(\\"this is the code\\", 5);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/os/portals"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Portal Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Portals"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Portal actions are functions that make it easier to work with the player\'s portals."}]},{"tag":"@docname","content":[{"kind":"text","text":"os.toast"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5123,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/94f55ae0e/src/aux-runtime/runtime/AuxLibrary.ts#L5123"}],"parameters":[{"id":1147,"name":"message","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the text that the toast message should show."}],"blockTags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"object"},{"type":"array","elementType":{"type":"intrinsic","name":"any"}}]}},{"id":1148,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number of seconds that the message should be on the screen. (Default is 2)"}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"2"}],"type":{"type":"reference","target":36576,"name":"ShowToastAction","package":"@casual-simulation/aux-common","id":36576,"qualifiedName":"ShowToastAction"}},"comment":{"text":"Shows a temporary \\"toast\\" notification to the player at the bottom of the screen with the given message.\\nOptionally accepts a duration parameter which is the number of seconds that the message should be on the screen.","tags":[{"tagName":"example","text":"```ts\\nShow a \\"Hello!\\" toast message.\\nos.toast(\\"Hello!\\");\\n```"},{"tagName":"example","text":"```ts\\nShow the player a code for 5 seconds.\\nos.toast(\\"this is the code\\", 5);\\n```"},{"tagName":"dochash","text":"actions/os/portals"},{"tagName":"doctitle","text":"Portal Actions"},{"tagName":"docsidebar","text":"Portals"},{"tagName":"docdescription","text":"Portal actions are functions that make it easier to work with the player\'s portals."},{"tagName":"docname","text":"os.toast"}]},"group":null}],"references":{"CasualOSError":"types/error","id-38671":"CasualOSError","Quaternion":"types/math/rotations","id-135":"Quaternion","Rotation":"types/math/rotations","id-167":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-38708":"AIChatMessage","AIChatOptions":"types/ai","id-37669":"AIChatOptions","AIDataContent":"types/ai","id-38717":"AIDataContent","AIGenerateImageSuccess":"types/ai","id-35487":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-37709":"AIGenerateImageOptions","AIGenerateSkyboxAction":"types/ai","id-37676":"AIGenerateSkyboxAction","AIGenerateSkyboxBlockadeLabsOptions":"types/ai","id-37687":"AIGenerateSkyboxBlockadeLabsOptions","AIGenerateSkyboxOptions":"types/ai","id-37684":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-35480":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-35484":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-35490":"AIGeneratedImage","AITextContent":"types/ai","id-38715":"AITextContent","AIUrlContent":"types/ai","id-38720":"AIUrlContent","ARSupportedAction":"types/os/xr","id-37006":"ARSupportedAction","AddCountFailure":"types/records/events","id-40702":"AddCountFailure","AddCountSuccess":"types/records/events","id-40697":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-37139":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-37143":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-37472":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-35495":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-35788":"AttachDebuggerOptions","AuthData":"types/os/records","id-37314":"AuthData","DebuggerOptions":"types/debuggers/common","id-35804":"DebuggerOptions","CasualOSDevice":"types/os/system","id-38639":"CasualOSDevice","CasualOSVersion":"types/os/system","id-38631":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-213":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-37218":"BeginRecordingAction","BotIntersection":"types/os/portals","id-35997":"BotIntersection","BotTagMasks":"types/core","id-38255":"BotTagMasks","BotTags":"types/core","id-38258":"BotTags","BotState":"types/core","id-38333":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-37385":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-36854":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-37378":"CalculateRayFromCameraAction","CancelSoundAction":"types/os/audio","id-36860":"CancelSoundAction","CompiledBotListeners":"types/core","id-38208":"CompiledBotListeners","CompiledBotModules":"types/core","id-38214":"CompiledBotModules","ConfigureWakeLockAction":"types/os/portals","id-37459":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-37340":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-37336":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-39684":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-39680":"CreatePublicRecordKeySuccess","DataPermission":"types/permissions","id-305":"DataPermission","DebuggerCallFrame":"types/debuggers/common","id-35828":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-35836":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-35822":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-35782":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-35777":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-35842":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-37328":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-36866":"DownloadAction","Easing":"types/animation","id-36956":"Easing","EnableARAction":"types/os/xr","id-37002":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-36933":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-37194":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-37020":"EnablePOVAction","EnableVRAction":"types/os/xr","id-37016":"EnableVRAction","EnableXROptions":"types/os/xr","id-37000":"EnableXROptions","EndRecordingAction":"types/os/audio","id-37230":"EndRecordingAction","EraseDataFailure":"types/records/data","id-40208":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-40204":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-40389":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-40385":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-216":"EulerAnglesRotation","EventPermission":"types/permissions","id-405":"EventPermission","ExitFullscreenAction":"types/os/portals","id-37035":"ExitFullscreenAction","FilePermission":"types/permissions","id-353":"FilePermission","FilePermissionOptions":"types/permissions","id-340":"FilePermissionOptions","FocusOnOptions":"types/os/camera","id-36605":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-36617":"FocusOnRotation","FormAnimationData":"types/os/animations","id-37440":"FormAnimationData","FromToRotation":"types/math/rotations","id-210":"FromToRotation","GenericError":"types/error","id-38668":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-37358":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-40713":"GetCountFailure","GetCountSuccess":"types/records/events","id-40707":"GetCountSuccess","GetDataFailure":"types/records/data","id-40199":"GetDataFailure","GetDataSuccess":"types/records/data","id-40190":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-37271":"GetGeolocationAction","GetRoomOptionsFailure":"types/os/portals","id-35949":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-35945":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-35983":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-35978":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-35959":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-35954":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-37262":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-37465":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-37298":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-43643":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-43641":"GrantMarkerPermissionSuccess","GrantResourcePermissionFailure":"types/records/policies","id-43666":"GrantResourcePermissionFailure","GrantResourcePermissionSuccess":"types/records/policies","id-43664":"GrantResourcePermissionSuccess","GrantRoleFailure":"types/records/roles","id-43725":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-43723":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-36601":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-36590":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-37091":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-37096":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os/image-classification","id-36727":"ImageClassifierOptions","InstPermission":"types/permissions","id-531":"InstPermission","InstUpdate":"types/os/spaces","id-38664":"InstUpdate","JoinRoomFailure":"types/os/portals","id-35921":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-35918":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-35930":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-35927":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-40230":"ListDataFailure","ListDataSuccess":"types/records/data","id-40220":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-37434":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-39727":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-39724":"ListStudiosSuccess","ListedData":"types/records/data","id-40226":"ListedData","MarkerPermission":"types/permissions","id-43855":"MarkerPermission","ResourcePermission":"types/permissions","id-43844":"ResourcePermission","ListedStudio":"types/records/studios","id-39731":"ListedStudio","LoadInstAction":"types/os/spaces","id-36732":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-36926":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-36949":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-36970":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-36985":"LocalTweenAction","LookRotation":"types/math/rotations","id-233":"LookRotation","MediaPermissionAction":"types/os/media","id-37351":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-37348":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-37235":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-37242":"MeetFunctionAction","NodeReference":"types/os/portals","id-37117":"NodeReference","Debugger":"types/debuggers/debugger","id-35602":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-35794":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os/portals","id-37129":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-37136":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-36701":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-36689":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-36843":"OpenURLAction","ParsedBotLink":"types/core","id-38199":"ParsedBotLink","PartialBotState":"types/core","id-38336":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-35658":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-35799":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-35814":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-35809":"PauseTriggerOptions","Photo":"types/camera","id-36685":"Photo","PlaySoundAction":"types/os/audio","id-36847":"PlaySoundAction","Point2D":"types/os/portals","id-37452":"Point2D","Point3D":"types/os/portals","id-37455":"Point3D","PossiblePauseTriggerLocation":"types/debuggers/common","id-35772":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-35848":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-226":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-37363":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-37370":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-36006":"RaycastRay","RaycastResult":"types/os/portals","id-35994":"RaycastResult","RecordActionOptions":"types/records/extra","id-37722":"RecordActionOptions","RecordDataFailure":"types/records/data","id-40182":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-40178":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-35891":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-35887":"RecordFileSuccess","RecordFileRequest":"types/records/files","id-40357":"RecordFileRequest","RecordedFile":"types/experimental","id-37293":"RecordedFile","Recording":"types/experimental","id-37291":"Recording","RecordingOptions":"types/experimental","id-37210":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-37049":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-37055":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-37068":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-37126":"RegisterPrefixOptions","RejectAction":"types/os/event","id-36893":"RejectAction","RemoteAction":"types/os/event","id-48044":"RemoteAction","ReportInstAction":"types/os/moderation","id-37303":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-37308":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-37033":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-43654":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-43652":"RevokeMarkerPermissionSuccess","RevokePermissionFailure":"types/records/policies","id-43688":"RevokePermissionFailure","RevokePermissionSuccess":"types/records/policies","id-43686":"RevokePermissionSuccess","RevokeResourcePermissionFailure":"types/records/policies","id-43677":"RevokeResourcePermissionFailure","RevokeResourcePermissionSuccess":"types/records/policies","id-43675":"RevokeResourcePermissionSuccess","RevokeRoleFailure":"types/records/roles","id-43736":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-43734":"RevokeRoleSuccess","RolePermission":"types/permissions","id-484":"RolePermission","RolePermissionOptions":"types/permissions","id-475":"RolePermissionOptions","RoomJoinOptions":"types/os/portals","id-37938":"RoomJoinOptions","RoomOptions":"types/os/portals","id-37934":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-37993":"RoomRemoteOptions","RoomTrackOptions":"types/os/rooms","id-37971":"RoomTrackOptions","RunScriptAction":"types/os/system","id-36913":"RunScriptAction","RuntimeBot":"types/core","id-38150":"RuntimeBot","RuntimeBotLinks":"types/core","id-38202":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-38205":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-224":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-37105":"SerializableMutationRecord","SessionSelector":"types/os/event","id-35463":"SessionSelector","SetAppOutputAction":"types/os/portals","id-37080":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-36896":"SetClipboardAction","SetRoomOptionsFailure":"types/os/portals","id-35939":"SetRoomOptionsFailure","SetRoomOptionsSuccess":"types/os/portals","id-35936":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-37968":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-35971":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-35966":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-37041":"ShareAction","ShareOptions":"types/os/input","id-37037":"ShareOptions","ShowChatBarAction":"types/os/input","id-36899":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-36907":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-36824":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-36830":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-36596":"ShowHtmlAction","ShowInputItem":"types/os/input","id-36881":"ShowInputItem","ShowInputOptions":"types/os/input","id-36872":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-37029":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-36576":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-36581":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-36919":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-36921":"ShowUploadFilesAction","SnapAxis":"types/os/portals","id-37155":"SnapAxis","SnapGrid":"types/os/portals","id-37173":"SnapGrid","SnapGridTarget":"types/os/portals","id-35896":"SnapGridTarget","SnapPoint":"types/os/portals","id-37148":"SnapPoint","SpeakTextAction":"types/os/audio","id-37253":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-35517":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-37404":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-37391":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-37426":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-37423":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-37277":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-37267":"SyntheticVoice","TweenOptions":"types/experimental","id-35521":"TweenOptions","UnloadInstAction":"types/os/spaces","id-36736":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-37062":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-37075":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-37287":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-40727":"UpdateEventRecordFailure","UpdateEventRecordRequest":"types/records/events","id-40717":"UpdateEventRecordRequest","UpdateEventRecordSuccess":"types/records/events","id-40725":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-37085":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-36009":"UploadedFile","VRSupportedAction":"types/os/xr","id-37011":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-37470":"WakeLockConfiguration","WebhookOptions":"types/web","id-35468":"WebhookOptions","WebhookResult":"types/web","id-35879":"WebhookResult","AIChatContent":"types/ai","id-38714":"AIChatContent","ActionKinds":"types/permissions","id-261":"ActionKinds","AddCountResult":"types/records/events","id-40696":"AddCountResult","AvailablePermissions":"types/permissions","id-268":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-36710":"BarcodeFormat","BotAction":"types/os/event","id-36513":"BotAction","BotAnchorPoint":"types/core","id-38362":"BotAnchorPoint","BotFilter":"types/core","id-35505":"BotFilter","BotSpace":"types/core","id-38245":"BotSpace","CameraPortal":"types/os/portals","id-37451":"CameraPortal","CameraType":"types/os/camera","id-36664":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-39679":"CreatePublicRecordKeyResult","DataActionKinds":"types/permissions","id-262":"DataActionKinds","EaseMode":"types/animation","id-36955":"EaseMode","EaseType":"types/animation","id-36954":"EaseType","EraseDataResult":"types/records/data","id-40203":"EraseDataResult","EraseFileResult":"types/records/files","id-40384":"EraseFileResult","EventActionKinds":"types/permissions","id-264":"EventActionKinds","FileActionKinds":"types/permissions","id-263":"FileActionKinds","Geolocation":"types/os/geolocation","id-37276":"Geolocation","GetCountResult":"types/records/events","id-40706":"GetCountResult","GetDataResult":"types/records/data","id-40189":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-35944":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-35977":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-35953":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-43640":"GrantMarkerPermissionResult","GrantResourcePermissionResult":"types/records/policies","id-43663":"GrantResourcePermissionResult","GrantRoleResult":"types/records/roles","id-43722":"GrantRoleResult","InstActionKinds":"types/permissions","id-267":"InstActionKinds","JoinRoomResult":"types/os/portals","id-35917":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-35926":"LeaveRoomResult","ListDataResult":"types/records/data","id-40219":"ListDataResult","ListStudiosResult":"types/records/studios","id-39723":"ListStudiosResult","MarkerActionKinds":"types/permissions","id-265":"MarkerActionKinds","Mod":"types/core","id-35462":"Mod","PortalType":"types/core","id-38248":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-35776":"PossiblePauseTriggerStates","PublicRecordKeyPolicy":"types/records/key","id-40024":"PublicRecordKeyPolicy","RecordDataResult":"types/records/data","id-40177":"RecordDataResult","RecordFileResult":"types/records/files","id-35886":"RecordFileResult","RecordUserPolicyType":"types/records/extra","id-37730":"RecordUserPolicyType","ResourceKinds":"types/permissions","id-245":"ResourceKinds","RevokeMarkerPermissionResult":"types/records/policies","id-43651":"RevokeMarkerPermissionResult","RevokeResourcePermissionResult":"types/records/policies","id-43674":"RevokeResourcePermissionResult","RevokeRoleResult":"types/records/roles","id-43733":"RevokeRoleResult","RoleActionKinds":"types/permissions","id-266":"RoleActionKinds","SetRoomOptionsResult":"types/os/portals","id-35935":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-35965":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-36885":"ShowInputSuptype","ShowInputType":"types/os/input","id-36884":"ShowInputType","SnapTarget":"types/os/portals","id-37167":"SnapTarget","StudioAssignmentRole":"types/records/studios","id-39987":"StudioAssignmentRole","SubjectType":"types/permissions","id-238":"SubjectType","TagFilter":"types/core","id-35458":"TagFilter","TrackKind":"types/records/rooms","id-37983":"TrackKind","TrackSource":"types/records/rooms","id-37984":"TrackSource","TrackVideoQuality":"types/os/rooms","id-37985":"TrackVideoQuality","UpdateEventRecordResult":"types/records/events","id-40724":"UpdateEventRecordResult","UserPolicy":"types/records/data","id-40304":"UserPolicy","animateTag-byOptions":"actions/os/animations","id-1053":"animateTag-byOptions","getbot-tag":"actions/data","id-718":"getbot-tag","getbots-tag":"actions/data","id-702":"getbots-tag","animateTag-byTag":"actions/os/animations","id-1047":"animateTag-byTag","changeState":"actions/data","id-863":"changeState","create":"actions/data","id-847":"create","destroy":"actions/data","id-851":"destroy","getbot-filters":"actions/data","id-711":"getbot-filters","getbots-filters":"actions/data","id-695":"getbots-filters","priorityShout":"actions/os/event","id-912":"priorityShout","shout":"actions/os/event","id-925":"shout","updateBotLinks":"actions/data","id-885":"updateBotLinks","whisper":"actions/os/event","id-951":"whisper","action.perform":"actions/os/event","id-34959":"action.perform","action.reject":"actions/os/event","id-34963":"action.reject","ai.chat-string":"actions/ai","id-1112":"ai.chat-string","ai.chat-message":"actions/ai","id-1115":"ai.chat-message","ai.chat-messages":"actions/ai","id-1118":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-1131":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-1135":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-1123":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-1127":"ai.generateSkybox-request","applyDiffToSnapshot":"actions/data","id-768":"applyDiffToSnapshot","applyMod":"actions/mods","id-837":"applyMod","assert":"actions/debuggers","id-1096":"assert","assertEqual":"actions/debuggers","id-1101":"assertEqual","atPosition":"actions/bot-filters","id-982":"atPosition","byCreator":"actions/bot-filters","id-1003":"byCreator","byID":"actions/bot-filters","id-970":"byID","byMod":"actions/bot-filters","id-974":"byMod","bySpace":"actions/bot-filters","id-999":"bySpace","byTag":"actions/bot-filters","id-965":"byTag","bytes.fromBase64String":"actions/bytes","id-35172":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-35189":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-35180":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-35168":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-35184":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-35176":"bytes.toHexString","clearAnimations":"actions/os/animations","id-1067":"clearAnimations","clearTagMasks":"actions/data","id-791":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-35195":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-35201":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-35232":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-35225":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-35290":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-35285":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-35296":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-35281":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-35277":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-35261":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-35251":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-35256":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-35271":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-35300":"crypto.keypair","crypto.sha256":"actions/crypto","id-35217":"crypto.sha256","crypto.sha512":"actions/crypto","id-35221":"crypto.sha512","crypto.sign":"actions/crypto","id-35304":"crypto.sign","deleteTagMaskText":"actions/data","id-818":"deleteTagMaskText","deleteTagText":"actions/data","id-811":"deleteTagText","diffSnapshots":"actions/data","id-763":"diffSnapshots","either":"actions/bot-filters","id-1007":"either","os.beginAudioRecording":"actions/os/audio","id-35006":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-35013":"experiment.beginRecording","os.endAudioRecording":"actions/os/audio","id-35010":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-35017":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-34996":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-35025":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-34969":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-34974":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-34985":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-35020":"experiment.speakText","getBotLinks":"actions/data","id-881":"getBotLinks","getBotPosition":"actions/data","id-737":"getBotPosition","getBotRotation":"actions/data","id-742":"getBotRotation","getBotTagValues":"actions/data","id-727":"getBotTagValues","getFormattedJSON":"actions/data","id-755":"getFormattedJSON","getID":"actions/data","id-747":"getID","getJSON":"actions/data","id-751":"getJSON","getLink":"actions/data","id-877":"getLink","getMod":"actions/mods","id-732":"getMod","getSnapshot":"actions/data","id-759":"getSnapshot","getTag":"actions/data","id-773":"getTag","inDimension":"actions/bot-filters","id-978":"inDimension","inStack":"actions/bot-filters","id-988":"inStack","insertTagMaskText":"actions/data","id-803":"insertTagMaskText","insertTagText":"actions/data","id-796":"insertTagText","math.abs":"actions/math","id-35042":"math.abs","math.addVectors":"actions/math","id-35112":"math.addVectors","math.areClose":"actions/math","id-35143":"math.areClose","math.avg":"actions/math","id-35034":"math.avg","math.degreesToRadians":"actions/math","id-35068":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-35108":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-35076":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-35050":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-35085":"math.intersectPlane","math.negateVector":"actions/math","id-35122":"math.negateVector","math.normalizeVector":"actions/math","id-35127":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-35072":"math.radiansToDegrees","math.random":"actions/math","id-35063":"math.random","math.randomInt":"actions/math","id-35058":"math.randomInt","math.scaleVector":"actions/math","id-35137":"math.scaleVector","math.setRandomSeed":"actions/math","id-35054":"math.setRandomSeed","math.sqrt":"actions/math","id-35038":"math.sqrt","math.stdDev":"actions/math","id-35046":"math.stdDev","math.subtractVectors":"actions/math","id-35117":"math.subtractVectors","math.sum":"actions/math","id-35030":"math.sum","math.vectorLength":"actions/math","id-35132":"math.vectorLength","neighboring":"actions/bot-filters","id-993":"neighboring","not":"actions/bot-filters","id-1014":"not","os.attachDebugger":"actions/debuggers","id-34915":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-34904":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-34908":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-1199":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-1204":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-34912":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-1226":"showChat-options","showChat-placeholder":"actions/os/input","id-1222":"showChat-placeholder","os.showInput":"actions/os/portals","id-1448":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1518":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1509":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1514":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1505":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-34867":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-1273":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-34817":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1481":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-34812":"os.calculateRayFromCamera","os.cancelSound":"actions/os/audio","id-1485":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-1368":"os.capturePhoto","os.closeBarcodeScanner":"actions/os/barcodes","id-1346":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1497":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-1361":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-1372":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-1332":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1632":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-34797":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-34784":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-34863":"os.createInitializationUpdate","os.device":"actions/os/system","id-1244":"os.device","os.disableAR":"actions/os/xr","id-1263":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-1288":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-1270":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-1294":"os.disableWakeLock","os.download":"actions/os/files","id-1300":"os.download","os.downloadBots":"actions/os/files","id-1306":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-1311":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-1319":"os.downloadInst","os.enableAR":"actions/os/xr","id-1259":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-1250":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1523":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-1279":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-1266":"os.enableVR","os.eraseData":"actions/os/records","id-34727":"os.eraseData","os.eraseManualApprovalData":"actions/os/records","id-34733":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/os/portals","id-1170":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1580":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1536":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1540":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-1419":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-1425":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os/spaces","id-34871":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-34702":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-1438":"os.getDimensionalDepth","os.getFocusPoint":"actions/os/portals","id-1548":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1530":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1573":"os.getInputList","os.getInputState":"actions/os/portals","id-1568":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-34859":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-34708":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1576":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-1428":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-1431":"os.getMiniPortalDimension","os.getPointerDirection":"actions/os/portals","id-1564":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1552":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1556":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-1434":"os.getPortalDimension","os.getPublicRecordKey":"actions/os/records","id-34629":"os.getPublicRecordKey","os.getRecordsEndpoint":"actions/os/records","id-34794":"os.getRecordsEndpoint","os.getRoomOptions":"actions/os/rooms","id-1598":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1613":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1602":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-34633":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-1297":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-1462":"os.goToDimension","os.goToURL":"actions/os/portals","id-1466":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-34649":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-34669":"os.grantInstRole","os.grantPermission":"actions/os/records","id-34637":"os.grantPermission","os.grantUserRole":"actions/os/records","id-34654":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1489":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-1354":"os.hideBarcode","os.hideChat":"actions/os/input","id-1234":"os.hideChat","os.hideHtml":"actions/os/portals","id-1177":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-1339":"os.hideQRCode","os.hideTips":"actions/os/portals","id-1158":"os.hideTips","os.importAUX":"actions/os/files","id-1403":"os.importAUX","os.inSheet":"actions/os/portals","id-1533":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-1247":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-1415":"os.isInDimension","os.isRecordKey":"actions/os/records","id-34684":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1583":"os.joinRoom","os.ldrawCountTextBuildSteps":"actions/os/ldraw","id-34836":"os.ldrawCountTextBuildSteps","os.leaveRoom":"actions/os/rooms","id-1588":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-34617":"os.listBuiltinTags","os.listData":"actions/os/records","id-34714":"os.listData","os.listDataByMarker":"actions/os/records","id-34720":"os.listDataByMarker","os.listFormAnimations":"actions/os/animations","id-34832":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-34856":"os.listInstUpdates","os.listUserStudios":"actions/os/records","id-34790":"os.listUserStudios","os.loadInst":"actions/os/spaces","id-1395":"os.loadInst","os.log":"actions/os/system","id-1526":"os.log","os.meetCommand":"actions/os/meets","id-34892":"os.meetCommand","os.meetFunction":"actions/os/meets","id-34897":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-34874":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-1342":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1501":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1474":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-1357":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-1364":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-1328":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1470":"os.openURL","os.parseBotsFromData":"actions/os/files","id-1407":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1477":"os.playSound","os.raycast":"actions/os/portals","id-34806":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-34801":"os.raycastFromCamera","os.recordData":"actions/os/records","id-34688":"os.recordData","os.recordEvent":"actions/os/records","id-34778":"os.recordEvent","os.recordFile":"actions/os/records","id-34739":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-34695":"os.recordManualApprovalData","os.registerApp":"actions/os/app","id-1623":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1618":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-34878":"os.remoteCount","os.remotes":"actions/os/remotes","id-34853":"os.remotes","os.replaceDragBot":"actions/os/portals","id-1411":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-34620":"os.reportInst","os.requestAuthBot":"actions/os/records","id-34623":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-34626":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-1167":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-1291":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-34677":"os.revokeInstRole","os.revokePermission":"actions/os/records","id-34643":"os.revokePermission","os.revokeUserRole":"actions/os/records","id-34662":"os.revokeUserRole","os.run":"actions/os/system","id-1237":"os.run","os.setClipboard":"actions/os/clipboard","id-1180":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1593":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1607":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1493":"os.share","os.showAccountInfo":"actions/os/system","id-1253":"os.showAccountInfo","os.showBarcode":"actions/os/barcodes","id-1349":"os.showBarcode","os.showConfirm":"actions/os/portals","id-1458":"os.showConfirm","os.showHtml":"actions/os/portals","id-1173":"os.showHtml","os.showInputForTag":"actions/os/portals","id-1442":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-1162":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-1335":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-1322":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-1325":"os.showUploadFiles","os.sleep":"actions/os/system","id-1142":"os.sleep","os.startFormAnimation":"actions/os/animations","id-34821":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-34827":"os.stopFormAnimation","os.tip":"actions/os/portals","id-1151":"os.tip","os.toast":"actions/os/portals","id-1146":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-34882":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-1399":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1628":"os.unregisterApp","os.version":"actions/os/system","id-1241":"os.version","os.vrSupported":"actions/os/xr","id-1276":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-1376":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-1384":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-1378":"os.instLatency","os.instTimeOffset":"actions/os/time","id-1380":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-1382":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-1374":"os.localTime","remote":"actions/os/event","id-1021":"remote","sendRemoteData":"actions/os/event","id-1033":"sendRemoteData","removeTags":"actions/data","id-826":"removeTags","renameTag":"actions/data","id-831":"renameTag","setTag":"actions/data","id-778":"setTag","setTagMask":"actions/data","id-784":"setTagMask","subtractMods":"actions/mods","id-842":"subtractMods","superShout":"actions/os/event","id-907":"superShout","uuid":"actions/data","id-1044":"uuid","web.get":"actions/web","id-35323":"web.get","web.hook":"actions/web","id-35334":"web.hook","web.post":"actions/web","id-35328":"web.post","configBot":"actions/os/system","id-1107":"configBot"}}');var s=n(1601);n(5058),n(6967);const r={id:"portals",title:"Portal Actions",sidebar_label:"Portals",description:"Actions for working with portals."},c=void 0,l={id:"actions/os/portals",title:"Portal Actions",description:"Actions for working with portals.",source:"@site/docs/actions/os/portals.mdx",sourceDirName:"actions/os",slug:"/actions/os/portals",permalink:"/actions/os/portals",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/os/portals.mdx",tags:[],version:"current",frontMatter:{id:"portals",title:"Portal Actions",sidebar_label:"Portals",description:"Actions for working with portals."},sidebar:"docs",previous:{title:"Moderation",permalink:"/actions/os/moderation"},next:{title:"System",permalink:"/actions/os/system"}},d={},m=[...(0,s.KO)(i)];function p(e){return(0,o.jsx)(s.hl,{doc:i})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p()}},1601:(e,t,n)=>{n.d(t,{hl:()=>D,KO:()=>T});var o=n(79),a=n(5058),i=n(6144),s=n(8405),r=n(1888),c=n(5250);class l extends o.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const n="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw n;console.error(n)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var d=n(1537),m=n(6967),p=n(7544),u=n(3324),h=n(5834),g=n(1623);function x(e){void 0===e&&(e={});const t=e.references;return e=>{(0,h.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,d.Z)("tags/listen")+y(t.slice(1)):e.url=(0,d.Z)(g.L0[t])+y(t)}else if(e.url.startsWith("ref:")){const n=e.url.slice(4),o=t[n];e.url=(0,d.Z)(o)+"#"+n}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,d.Z)("glossary")+"#"+f(t)}else if(e.url.startsWith("page:")){const[t,n]=e.url.slice(5).split("#");e.url=(0,d.Z)(t)+"#"+n}}))}}function y(e){return"#"+f(e)}function f(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function b(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const k={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",k);const w=new Map([[k.Property,["type"]],["reflection",["declaration"]],[k.TypeLiteral,["children","signatures"]],[k.CallSignature,["parameters","comment","type"]]]);function v(e,t,n){void 0===n&&(n=null),function(e,t,n){var o;void 0===n&&(n=null);let a=w.get(null!=(o=e.kind)?o:e.type)||[];for(let i of a){let o=e[i];if(Array.isArray(o))for(let e of o)e&&t(e,n,i);else o&&t(o,n,i)}}(e,((e,n,o)=>{t(e,n,o),v(e,t,e)}))}function A(e,t){let n=[];return t(e)&&n.push(e),v(e,((e,o,a)=>{t(e,o,a)&&n.push(e)})),n}const S=["first","second","third","fourth","fifth"];function R(e,t){return e.name+"-"+t.name}function P(e,t){const n=R(e,t);let o;var a;return o=t.kind===k.Constructor?$(t.signatures[0],be(t)):t.kind===k.Method?$(t.signatures[0]):t.kind===k.Accessor?(a=t).name+": "+le(a.getSignature.type):ae(t),o="<span>"+o+"</span>",{value:o,id:n,level:3}}function N(e){let t=[],{properties:n,constructors:o,methods:a}=function(e){let t=[],n=[],o=[];if(!e)return{properties:t,constructors:n,methods:o};for(let a of e)a.flags.isPrivate||(a.kind===k.Property||a.kind===k.Accessor?t.push(a):a.kind===k.Constructor?n.push(a):a.kind===k.Method&&o.push(a));return{properties:t,constructors:n,methods:o}}(e.children);return n.length>0&&t.push(...n.map((t=>P(e,t)))),o.length>0&&t.push(...o.map((t=>P(e,t)))),a.length>0&&t.push(...a.map((t=>P(e,t)))),t}function T(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let n of e.contents)if(n.reflection.kind===k.Interface||n.reflection.kind===k.Class){const e=be(n.reflection),o=ke(n.reflection);t.push({value:e,id:o,level:2}),n.reflection.kind===k.Class&&t.push(...N(n.reflection))}else if(n.reflection.kind===k.CallSignature){const e=be(n.reflection),o=ke(n.reflection);t.push({value:"<span>"+$(n.reflection,e)+"</span>",id:o,level:2})}else if(n.reflection.kind===k.TypeAlias){const e=be(n.reflection),o=ke(n.reflection);t.push({value:e,id:o,level:2})}else if(n.reflection.kind===k.GetSignature||n.reflection.kind===k.SetSignature){const e=be(n.reflection),o=ke(n.reflection);t.push({value:"<code>"+$(n.reflection,e)+"</code>",id:o,level:2})}else{const e=be(n.reflection),o=ke(n.reflection);t.push({value:e,id:o,level:2})}return t}function D(e){let{doc:t}=e;const n=t.contents,o=t.references;return(0,c.jsx)("ul",{className:"api api-list",children:n.map((e=>(0,c.jsx)("li",{className:"api-member-item",children:(0,c.jsx)(C,{reflection:e.reflection,references:o})},e.id)))})}function C(e){let{reflection:t,references:n}=e;return t.kind===k.Interface||t.kind===k.Class?(0,c.jsx)(G,{reflection:t,references:n}):t.kind===k.CallSignature||t.kind===k.GetSignature||t.kind===k.SetSignature?(0,c.jsx)(j,{reflection:t,references:n}):t.kind===k.TypeAlias?(0,c.jsx)(L,{reflection:t,references:n}):(0,c.jsx)(B,{reflection:t,references:n})}function L(e){let{reflection:t,references:n}=e;const o=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:i,children:o}),(0,c.jsx)(E,{reflection:t,references:n}),(0,c.jsx)(F,{reflection:t,name:o,references:n}),(0,c.jsx)(te,{member:t})]})}function F(e){let{reflection:t,name:n,references:o}=e,a="";return"union"===t.type.type&&(a=(0,c.jsx)(I,{type:t.type,name:n,references:o})),a}function I(e){let{type:t,name:n,references:o}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",n," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(O,{type:e,references:o},t)))})]})}function O(e){let{type:t,references:n}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:n})})})}function G(e){let{reflection:t,references:n}=e;const o=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:i,children:o}),(0,c.jsx)(M,{reflection:t,references:n}),(0,c.jsx)(te,{member:t})]})}function B(e){let{reflection:t,references:n}=e;const o=be(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:i,children:o}),(0,c.jsx)(V,{reflection:t,references:n}),(0,c.jsx)(te,{member:t})]})}function j(e){let{reflection:t,references:n}=e;const o=be(t),a=ke(t);return(0,c.jsx)("div",{children:(0,c.jsx)(K,{func:t,sig:t,name:o,link:a,references:n})})}function M(e){var t;const n=e.reflection;if(!n)throw new Error("Unable to find "+e.name+"!");const o=function(e){return(0,r.sortBy)(e,(e=>e.kind===k.Property||e.kind===k.Accessor?0:e.kind===k.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=n.children)?t:[]);return(0,c.jsx)(l,{reflection:n,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:n,references:e.references}),(0,c.jsx)(a.Z,{as:"h3",id:n.name+"-properties",children:"Members"}),(0,c.jsx)("div",{children:(0,c.jsxs)("ul",{className:"class-members-list",children:[n.indexSignature?(0,c.jsx)(_,{reflection:n,index:n.indexSignature,references:e.references}):"",n.references?(0,c.jsx)(U,{prop:n,references:e.references}):"",o.map((t=>(0,c.jsx)(W,{member:t,link:R(n,t),references:e.references},t.name)))]})})]})})}function _(e){let{reflection:t,index:n,references:o}=e;const i=n.parameters[0];return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(E,{reflection:n,references:o}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",i.name,": ",(0,c.jsx)(ce,{type:i.type,references:o}),"]: ",(0,c.jsx)(ce,{type:n.type,references:o})]})}),(0,c.jsx)(te,{member:n})]})}function E(e){let{reflection:t,references:n}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(Z,{comment:t.comment,references:n})})}function W(e){let t;return t=e.member.kind===k.Property?function(e){let t,n=e.member,o="";n.references?(o=(0,c.jsx)(q,{prop:n,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:n.typeReference})):"reflection"===n.type.type&&n.typeText&&n.typeReference?(t=(0,c.jsx)(c.Fragment,{children:n.typeReference}),o=(0,c.jsx)(i.Z,{language:"typescript",children:n.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!o&&n.typeText&&n.typeReference&&(o=(0,c.jsx)(i.Z,{language:"typescript",children:n.typeText}));const s=be(n);ke(n);return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsxs)("span",{className:"class-member-name",children:[s,e.member.flags.isOptional?(0,c.jsx)("span",{className:"class-member-optional",children:"?"}):""]})," ",(0,c.jsx)("span",{className:"class-member-type",children:t})]}),(0,c.jsx)(E,{reflection:e.member,references:e.references}),o]})}(e):e.member.kind===k.Constructor?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(K,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Method?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(K,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Accessor?function(e){var t;return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsx)("span",{className:"class-member-name",children:e.member.name})," ",(0,c.jsx)("span",{className:"class-member-type",children:(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})})]}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsxs)(l,{reflection:e.member,children:[(0,c.jsx)("span",{role:"separator",className:"class-member-separator"}),(0,c.jsx)("li",{className:"class-member-item",children:t})]})}function U(e){let{prop:t,references:n}=e;const o=ke(t);return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:o+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(s.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(X,{children:t.references,references:n})]})]})}function q(e){let{prop:t,references:n}=e;return(0,c.jsxs)(s.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(X,{children:t.references,references:n})]})}function V(e){const t=e.reflection,n=(t.type.declaration,Ne(t));return(0,c.jsx)(l,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:t,references:e.references}),n.map((t=>(0,c.jsx)(z,{group:t,references:e.references},t.group)))]})})}function z(e){let{group:t,references:n}=e;const o=t.children,i=Re(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:t.group,children:i}),o.map((e=>(0,c.jsx)(H,{namespace:e.namespace,name:e.name,property:e.child,link:R(e.reflection,e.child),references:n},e.child.id)))]})}function H(e){let t;if(me(e.property)){var n;const o=e.namespace?e.namespace+"."+e.name:e.name,a=e.property.type.declaration;t=K({name:o,func:e.property,sig:null!=(n=ve(a.signatures))?n:a.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){const n=e.namespace?e.namespace+"."+e.name:e.name,o=Ae(e.property);t=K({name:n,func:e.property,sig:o,link:e.link,references:e.references})}else t=ge(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===k.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(E,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(l,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function K(e){let{func:t,sig:n,link:o,name:i,references:s}=e;const r=n.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h4",id:o,children:(0,c.jsx)(Q,{func:t,sig:n,name:i,references:s})}),(0,c.jsx)(J,{sig:n,references:s}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(ee,{param:e,index:t,references:s},e.name)))}):"",(0,c.jsx)(te,{member:n})]})}function J(e){let{sig:t,references:n}=e;return(0,c.jsx)(Z,{comment:t.comment,references:n})}function Z(e){let{comment:t,references:n}=e;return(0,c.jsx)(X,{references:n,children:Y(t)})}function X(e){let{children:t,remarkPlugins:n,rehypePlugins:o,references:a}=e;return(0,c.jsx)(p.U,{remarkPlugins:[[x,{references:a}],...n||[]],rehypePlugins:[u.Z,...o||[]],children:t})}function Y(e){let t="";if(e&&e.summary)for(let n of e.summary)t+=n.text;return t}function Q(e){let{func:t,sig:n,name:o,references:a}=e;const i=n.parameters||[];let s="";return t.kind!==k.GetSignature&&(s=(0,c.jsxs)(c.Fragment,{children:["(",i.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:a})]},e.name))),")"]})),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("span",{className:"function-member-name",children:[(t.flags.isStatic?"static ":"")+(o||n.name),s]}),": ",(0,c.jsx)("span",{className:"function-member-type",children:(0,c.jsx)(ce,{type:n.type,references:a})})]})}function $(e,t){void 0===t&&(t=e.name);const n=e.parameters||[];let o="";return e.kind!==k.GetSignature&&(o="("+n.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+o+": "+le(e.type)}function ee(e){let t,{param:n,index:o,references:a}=e;return t=n.flags.isRest&&n.type.elementType?0===o?(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:n.type.elementType,references:a})," and are ",(0,c.jsx)(ie,{param:n,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:n.type.elementType,references:a})," and are ",(0,c.jsx)(ie,{param:n,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("em",{children:[oe(o)," parameter"]})," is",n.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:n.type,references:a})," and ",(0,c.jsx)(ie,{param:n,references:a})]}),t}function te(e){var t;let{member:n}=e;if(null==(t=n.comment)||!t.blockTags)return"";const o=n.comment.blockTags.filter((e=>"@example"===e.tag));return o.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h5",{className:"examples-heading",children:"Examples"}),o.map(((e,t)=>(0,c.jsx)(ne,{example:e},t)))]}):""}function ne(e){let{example:t}=e;const n=t.content.map((e=>e.text)).join(""),o=n.indexOf("\n"),a=n.indexOf("\n",o+1);let s="typescript";o>3&&(s=n.substring(3,o).trim());const r=n.lastIndexOf("```"),l=n.substring(o,a),d=n.substring(a,r);return(0,c.jsx)(i.Z,{language:s,title:l.trim(),children:d.trim()})}function oe(e){return S[e]}function ae(e,t){let n;return void 0===t&&(t=e.name),n=e.typeReference?e.typeReference:le(e.type),t+(e.flags.isOptional?"?":"")+": "+n}function ie(e){let{param:t,isRest:n,references:o}=e;return(0,c.jsx)(X,{remarkPlugins:[b],references:o,children:se(t,n)})}function se(e,t){let n=Y(e.comment);return n?(n=n.slice(0,1).toLowerCase()+n.slice(1),n.startsWith("the")&&!t&&(n="is "+n),n):""}const re=new Map([["ArrayBuffer","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer"],["Blob","https://developer.mozilla.org/en-US/docs/Web/API/Blob"],["Uint8Array","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"],["RegExp","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"],["Function","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"],["Error","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"]]);function ce(e){let{type:t,references:n,isInUnionOrArray:a}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var i,s,r,l,p,u;if(t.name===(null==(i=t.target)?void 0:i.qualifiedName)&&re.has(t.name)){const e=re.get(t.name);return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)("a",{className:"type-link",href:e,children:t.name})})}if("Promise"===t.name&&"Promise"===(null==(s=t.target)?void 0:s.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:n}),">"]});if("Partial"===t.name&&"Partial"===(null==(r=t.target)?void 0:r.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:n}),">"]});if("Omit"===t.name&&"Omit"===(null==(l=t.target)?void 0:l.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys",children:"Omit"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:n}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:n}),">"]});if("Map"===t.name&&"Map"===(null==(p=t.target)?void 0:p.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"Map"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:n}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:n}),">"]});if("Set"===t.name&&"Set"===(null==(u=t.target)?void 0:u.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",children:"Set"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:n}),">"]});let e="#"+t.name;const o=t.id?null==n?void 0:n["id-"+t.id]:null;if(o){const t=null==n?void 0:n[o];t&&(e=(0,d.Z)(t)+"#"+o)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry. ");return(0,c.jsx)(m.Z,{className:"type-link",href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(o.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:n,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:n,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===k.TypeLiteral&&e.signatures&&!e.children){var h;const t=null!=(h=ve(e.signatures))?h:e.signatures[0],o=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[a?"(":"","(",o.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:n})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:n}),a?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:n,isInUnionOrArray:!0})]})))}if("tuple"===t.type){const e=t.elements.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?", ":"",(0,c.jsx)(ce,{type:e,references:n,isInUnionOrArray:!0})]})));return(0,c.jsxs)("span",{children:["[",e,"]"]})}return"typeOperator"===t.type?(0,c.jsxs)("span",{children:[t.operator," ",(0,c.jsx)(ce,{type:t.target,references:n,isInUnionOrArray:!0})]}):""+JSON.stringify(t)}function le(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+le(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>le(e))).join(" | ")+")":"array"===e.type?le(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function de(e){return me(e)||ue(e)}function me(e){return e&&pe(e.type)}function pe(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===k.CallSignature))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>pe(e)))}function he(e){return e&&e.kind===k.CallSignature}function ge(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===k.TypeLiteral&&e.type.declaration.children}function xe(e,t){var n;const o=null==(n=e.comment)||null==(n=n.blockTags)?void 0:n.find((e=>e.tag===t));return o?o.content.map((e=>e.text)).join(""):null}function ye(e){if(e)for(let t of e){const e=xe(t,"@docname");if(e)return e.trim()}return null}function fe(e){if(me(e)){var t;const n=null==e||null==(t=e.type)?void 0:t.declaration;let o=we(null==n?void 0:n.signatures);if(o)return o}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=we(e.declaration.signatures);if(t)return t}}else if(he(e)){let t=we([e]);if(t)return t}return"99-default"}function be(e){if(e.kind===k.Method){let t=ye(e.signatures);if(t)return t}else if(me(e)){var t;const n=null==e||null==(t=e.type)?void 0:t.declaration;let o=ye(null==n?void 0:n.signatures);if(o)return o}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=ye(e.declaration.signatures);if(t)return t}}else if(he(e)){let t=ye([e]);if(t)return t}return xe(n=e,"@docname")||n.name;var n}function ke(e){const t=xe(e,"@docid");if(t)return t;const n=function(e,t){let n=[];return v(e,((e,o,a)=>{"comment"===a&&(console.log(e),n.push(...e.blockTags.filter((e=>e.tag===t))))})),n}(e,"@docid");return n.length>0?n[0].text.trim():be(e)}function we(e){if(e)for(let t of e){const e=xe(t,"@docgroup");if(e)return e.trim()}return null}function ve(e){for(let t of e){if(xe(t,"@docgroup"))return t}return null}function Ae(e){const t=e.type.types;let n=null;for(let o of t)if(pe(o)){const e=o.declaration.signatures;n||(n=e[0]);let t=ve(e);if(t)return t}return n}function Se(e){const t=(n=e,o=k.CallSignature,A(n,(e=>e.kind===o)));var n,o;for(let a of t){const e=xe(a,"@docgrouptitle");if(e)return e.trim()}return null}function Re(e){for(let t of e.children){let e=Se(t.child);if(e)return e}return e.group}function Pe(e){if(e.kind===k.CallSignature)return he(e)||de(e)||ge(e)?[{group:fe(e),name:be(e),reflection:e,child:e}]:[];if(e.kind===k.TypeAlias||e.kind===k.GetSignature||e.kind===k.SetSignature)return[];const t=e.type.declaration.children.filter((e=>he(e)||de(e)||ge(e))),n=null!==xe(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>de(t)?{group:fe(t),name:be(t),namespace:n,reflection:e,child:t}:Pe(t)))}function Ne(e){const t=Pe(e),n=(0,r.groupBy)(t,(e=>e.group));let o=[];for(let a in n)o.push({group:a,children:n[a]});return o=(0,r.sortBy)(o,(e=>e.group)),o}}}]);