"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[4540],{2663:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var o=s(5250),a=s(5545);const n=JSON.parse('{"hash":"actions/ai","pageTitle":"AI Actions","pageDescription":"AI actions are functions that make it easier to work with the AI.","pageSidebarLabel":"AI","contents":[{"id":1115,"order":9999,"name":"ai.chat-message","reflection":{"id":1115,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a chat message to the AI.\\nReturns a promise that contains the response from the AI.\\nThrows a "},{"kind":"text","text":"[`CasualOSError`](ref:CasualOSError)"},{"kind":"text","text":" if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat({\\n    role: \\"user\\",\\n    content: \\"Hello!\\"\\n});\\nconsole.log(`${response.role}: ${response.content}`);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.chat({\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}, {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nos.toast(response.content);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.chat"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.chat-message"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4784,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L4784"}],"parameters":[{"id":1116,"name":"message","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The message that should be sent to the AI."}],"blockTags":[]},"type":{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}},{"id":1117,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options that should be used."}],"blockTags":[]},"type":{"type":"reference","target":37847,"name":"AIChatOptions","package":"@casual-simulation/aux-runtime","id":37847,"qualifiedName":"AIChatOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Sends a chat message to the AI.\\nReturns a promise that contains the response from the AI.\\nThrows a CasualOSError if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message.","tags":[{"tagName":"example","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat({\\n    role: \\"user\\",\\n    content: \\"Hello!\\"\\n});\\nconsole.log(`${response.role}: ${response.content}`);\\n```"},{"tagName":"example","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.chat({\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}, {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nos.toast(response.content);\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.chat"},{"tagName":"docid","text":"ai.chat-message"}]},"group":null},{"id":1118,"order":9999,"name":"ai.chat-messages","reflection":{"id":1118,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a chat message to the AI.\\nReturns a promise that contains the response from the AI.\\nThrows a "},{"kind":"text","text":"[`CasualOSError`](ref:CasualOSError)"},{"kind":"text","text":" if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat([\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n    {\\n         role: \\"user\\",\\n         content: \\"Hello!\\"\\n    }\\n]);\\nconsole.log(`${response.role}: ${response.content}`);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBuild a basic chat bot.\\nconst messages = [\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n];\\n\\nwhile(true) {\\n     const userInput = await os.showInput();\\n     if (!userInput) {\\n         break;\\n     }\\n     messages.push({\\n         role: \\"user\\",\\n         content: userInput\\n     });\\n\\n     const response = await ai.chat(messages);\\n     messages.push(response);\\n     os.toast(response.content);\\n}\\n\\nos.toast(\\"Goodbye!\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.chat([{\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}], {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nos.toast(response.content);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.chat"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.chat-messages"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4862,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L4862"}],"parameters":[{"id":1119,"name":"messages","variant":"param","kind":32768,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}}},{"id":1120,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options that should be used."}],"blockTags":[]},"type":{"type":"reference","target":37847,"name":"AIChatOptions","package":"@casual-simulation/aux-runtime","id":37847,"qualifiedName":"AIChatOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Sends a chat message to the AI.\\nReturns a promise that contains the response from the AI.\\nThrows a CasualOSError if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message.","tags":[{"tagName":"example","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat([\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n    {\\n         role: \\"user\\",\\n         content: \\"Hello!\\"\\n    }\\n]);\\nconsole.log(`${response.role}: ${response.content}`);\\n```"},{"tagName":"example","text":"```ts\\nBuild a basic chat bot.\\nconst messages = [\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n];\\n\\nwhile(true) {\\n     const userInput = await os.showInput();\\n     if (!userInput) {\\n         break;\\n     }\\n     messages.push({\\n         role: \\"user\\",\\n         content: userInput\\n     });\\n\\n     const response = await ai.chat(messages);\\n     messages.push(response);\\n     os.toast(response.content);\\n}\\n\\nos.toast(\\"Goodbye!\\");\\n```"},{"tagName":"example","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.chat([{\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}], {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nos.toast(response.content);\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.chat"},{"tagName":"docid","text":"ai.chat-messages"}]},"group":null},{"id":1112,"order":9999,"name":"ai.chat-string","reflection":{"id":1112,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a chat message to the AI.\\nReturns a promise that contains the response from the AI.\\nThrows a "},{"kind":"text","text":"[`CasualOSError`](ref:CasualOSError)"},{"kind":"text","text":" if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat(\\"Hello!\\");\\nconsole.log(response);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"AI Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"AI"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"AI actions are functions that make it easier to work with the AI."}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.chat"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.chat-string"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4739,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L4739"}],"parameters":[{"id":1113,"name":"message","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The message that should be sent to the AI."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1114,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options that should be used."}],"blockTags":[]},"type":{"type":"reference","target":37847,"name":"AIChatOptions","package":"@casual-simulation/aux-runtime","id":37847,"qualifiedName":"AIChatOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Sends a chat message to the AI.\\nReturns a promise that contains the response from the AI.\\nThrows a CasualOSError if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message.","tags":[{"tagName":"example","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat(\\"Hello!\\");\\nconsole.log(response);\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"doctitle","text":"AI Actions"},{"tagName":"docsidebar","text":"AI"},{"tagName":"docdescription","text":"AI actions are functions that make it easier to work with the AI."},{"tagName":"docname","text":"ai.chat"},{"tagName":"docid","text":"ai.chat-string"}]},"group":null},{"id":1135,"order":9999,"name":"ai.generateImage-request","reflection":{"id":1135,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates an image from the given prompt.\\n\\nReturns a promise that resolves with the Base64 data of the generated image that can be used as the "},{"kind":"text","text":"[`#formAddress`](tags:formAddress)"},{"kind":"text","text":" of a bot."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate an image from a prompt.\\nconst imageResult = await ai.generateImage({\\n    prompt: \\"An oil painting of a grassy field.\\",\\n});\\nmasks.formAddress = imageResult.images[0].url;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a image from a prompt and a negative prompt\\nconst imageResult = await ai.generateImage({\\n    prompt: \\"An oil painting of a grassy field.\\",\\n    negativePrompt: \\"realistic\\"\\n});\\nmasks.formAddress = imageResult.images[0].url;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a image and upload it as a file record\\nconst imageResult = await ai.generateImage({\\n    prompt: \\"An oil painting of a grassy field.\\",\\n    negativePrompt: \\"realistic\\"\\n});\\nconst image = imageResult.images[0];\\nconst blob = bytes.fromBase64Url(image.url);\\nconst file = await os.recordFile(recordKey, blob);\\nconsole.log(\'file url\', file.url);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.generateImage"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.generateImage-request"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5289,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L5289"}],"parameters":[{"id":1136,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request object that describes what the image should look like."}],"blockTags":[]},"type":{"type":"reference","target":37887,"name":"AIGenerateImageOptions","package":"@casual-simulation/aux-runtime","id":37887,"qualifiedName":"AIGenerateImageOptions"}},{"id":1137,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the options for the request."}],"blockTags":[]},"type":{"type":"reference","target":37900,"name":"RecordActionOptions","package":"@casual-simulation/aux-runtime","id":37900,"qualifiedName":"RecordActionOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":35527,"name":"AIGenerateImageSuccess","package":"@casual-simulation/aux-runtime","id":35527,"qualifiedName":"AIGenerateImageAPISuccess"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Generates an image from the given prompt.\\n\\nReturns a promise that resolves with the Base64 data of the generated image that can be used as the formAddress of a bot.","tags":[{"tagName":"example","text":"```ts\\nGenerate an image from a prompt.\\nconst imageResult = await ai.generateImage({\\n    prompt: \\"An oil painting of a grassy field.\\",\\n});\\nmasks.formAddress = imageResult.images[0].url;\\n```"},{"tagName":"example","text":"```ts\\nGenerate a image from a prompt and a negative prompt\\nconst imageResult = await ai.generateImage({\\n    prompt: \\"An oil painting of a grassy field.\\",\\n    negativePrompt: \\"realistic\\"\\n});\\nmasks.formAddress = imageResult.images[0].url;\\n```"},{"tagName":"example","text":"```ts\\nGenerate a image and upload it as a file record\\nconst imageResult = await ai.generateImage({\\n    prompt: \\"An oil painting of a grassy field.\\",\\n    negativePrompt: \\"realistic\\"\\n});\\nconst image = imageResult.images[0];\\nconst blob = bytes.fromBase64Url(image.url);\\nconst file = await os.recordFile(recordKey, blob);\\nconsole.log(\'file url\', file.url);\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.generateImage"},{"tagName":"docid","text":"ai.generateImage-request"}]},"group":null},{"id":1131,"order":9999,"name":"ai.generateImage-string","reflection":{"id":1131,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates an image from the given prompt.\\n\\nReturns a promise that resolves with the Base64 data of the generated image that can be used as the "},{"kind":"text","text":"[`#formAddress`](tags:formAddress)"},{"kind":"text","text":" of a bot."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate an image from a prompt.\\nconst image = await ai.generateImage(\\"An oil painting of a grassy field.\\");\\nmasks.formAddress = image;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a image from a prompt and a negative prompt\\nconst image = await ai.generateImage(\\"An oil painting of a grassy field.\\", \\"realistic\\");\\nmasks.formAddress = image;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a image and upload it as a file record\\nconst image = await ai.generateImage(\\"An oil painting of a grassy field.\\");\\nconst blob = bytes.fromBase64Url(image);\\nconst file = await os.recordFile(recordKey, blob);\\nconsole.log(\'file url\', file.url);\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.generateImage"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.generateImage-string"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5248,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L5248"}],"parameters":[{"id":1132,"name":"prompt","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string that describes what the image should look like."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1133,"name":"negativePrompt","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the string that describes what the image should avoid looking like."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1134,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the additional options that should be used."}],"blockTags":[]},"type":{"type":"intersection","types":[{"type":"reference","target":37887,"name":"AIGenerateImageOptions","package":"@casual-simulation/aux-runtime","id":37887,"qualifiedName":"AIGenerateImageOptions"},{"type":"reference","target":37900,"name":"RecordActionOptions","package":"@casual-simulation/aux-runtime","id":37900,"qualifiedName":"RecordActionOptions"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Generates an image from the given prompt.\\n\\nReturns a promise that resolves with the Base64 data of the generated image that can be used as the formAddress of a bot.","tags":[{"tagName":"example","text":"```ts\\nGenerate an image from a prompt.\\nconst image = await ai.generateImage(\\"An oil painting of a grassy field.\\");\\nmasks.formAddress = image;\\n```"},{"tagName":"example","text":"```ts\\nGenerate a image from a prompt and a negative prompt\\nconst image = await ai.generateImage(\\"An oil painting of a grassy field.\\", \\"realistic\\");\\nmasks.formAddress = image;\\n```"},{"tagName":"example","text":"```ts\\nGenerate a image and upload it as a file record\\nconst image = await ai.generateImage(\\"An oil painting of a grassy field.\\");\\nconst blob = bytes.fromBase64Url(image);\\nconst file = await os.recordFile(recordKey, blob);\\nconsole.log(\'file url\', file.url);\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.generateImage"},{"tagName":"docid","text":"ai.generateImage-string"}]},"group":null},{"id":1127,"order":9999,"name":"ai.generateSkybox-request","reflection":{"id":1127,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a [skybox image](https://en.wikipedia.org/wiki/Skybox_%28video_games%29) from the given request object.\\n\\nReturns a promise that resolves with an object that contains a URL to the generated image that can be used as the "},{"kind":"text","text":"[`#formAddress`](tags:formAddress)"},{"kind":"text","text":" of a bot that has "},{"kind":"text","text":"[`#form`](tags:form)"},{"kind":"text","text":" set to "},{"kind":"code","text":"`skybox`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a skybox from a prompt.\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\");\\nmasks.formAddress = skybox;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a skybox from a prompt and a negative prompt\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\", \\"A skybox with a red sky and brown grass.\\");\\nmasks.formAddress = skybox;\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.generateSkybox"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.generateSkybox-request"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5164,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L5164"}],"parameters":[{"id":1128,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request object that describes what the skybox should look like."}],"blockTags":[]},"type":{"type":"reference","target":35520,"name":"AIGenerateSkyboxRequest","package":"@casual-simulation/aux-runtime","id":35520,"qualifiedName":"AIGenerateSkyboxRequest"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":35524,"name":"AIGenerateSkyboxResult","package":"@casual-simulation/aux-runtime","id":35524,"qualifiedName":"AIGenerateSkyboxResult"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Generates a [skybox image](https://en.wikipedia.org/wiki/Skybox_%28video_games%29) from the given request object.\\n\\nReturns a promise that resolves with an object that contains a URL to the generated image that can be used as the formAddress of a bot that has form set to `skybox`.","tags":[{"tagName":"example","text":"```ts\\nGenerate a skybox from a prompt.\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\");\\nmasks.formAddress = skybox;\\n```"},{"tagName":"example","text":"```ts\\nGenerate a skybox from a prompt and a negative prompt\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\", \\"A skybox with a red sky and brown grass.\\");\\nmasks.formAddress = skybox;\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.generateSkybox"},{"tagName":"docid","text":"ai.generateSkybox-request"}]},"group":null},{"id":1123,"order":9999,"name":"ai.generateSkybox-string","reflection":{"id":1123,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a [skybox image](https://en.wikipedia.org/wiki/Skybox_%28video_games%29) from the given prompt.\\n\\nReturns a promise that resolves with a URL to the generated image that can be used as the "},{"kind":"text","text":"[`#formAddress`](tags:formAddress)"},{"kind":"text","text":" of a bot that has "},{"kind":"text","text":"[`#form`](tags:form)"},{"kind":"text","text":" set to "},{"kind":"code","text":"`skybox`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a skybox from a prompt.\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\");\\nmasks.formAddress = skybox;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGenerate a skybox from a prompt and a negative prompt\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\", \\"A skybox with a red sky and brown grass.\\");\\nmasks.formAddress = skybox;\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.generateSkybox"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.generateSkybox-string"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5139,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L5139"}],"parameters":[{"id":1124,"name":"prompt","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string that describes what the skybox should look like."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1125,"name":"negativePrompt","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the string that describes what the skybox should avoid looking like."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1126,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the additional options that should be used."}],"blockTags":[]},"type":{"type":"reference","target":37862,"name":"AIGenerateSkyboxOptions","package":"@casual-simulation/aux-runtime","id":37862,"qualifiedName":"AIGenerateSkyboxOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Generates a [skybox image](https://en.wikipedia.org/wiki/Skybox_%28video_games%29) from the given prompt.\\n\\nReturns a promise that resolves with a URL to the generated image that can be used as the formAddress of a bot that has form set to `skybox`.","tags":[{"tagName":"example","text":"```ts\\nGenerate a skybox from a prompt.\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\");\\nmasks.formAddress = skybox;\\n```"},{"tagName":"example","text":"```ts\\nGenerate a skybox from a prompt and a negative prompt\\nconst skybox = await ai.generateSkybox(\\"A skybox with a blue sky and green grass.\\", \\"A skybox with a red sky and brown grass.\\");\\nmasks.formAddress = skybox;\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.generateSkybox"},{"tagName":"docid","text":"ai.generateSkybox-string"}]},"group":null},{"id":1145,"order":9999,"name":"ai.stream.chat-message","reflection":{"id":1145,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a chat message to the AI and streams the response back.\\nReturns a promise that resolves with an [async iterable](https://javascript.info/async-iterators-generators#async-iterables) that contains the responses from the AI.\\n\\nThrows a "},{"kind":"text","text":"[`CasualOSError`](ref:CasualOSError)"},{"kind":"text","text":" if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat({\\n    role: \\"user\\",\\n    content: \\"Hello!\\"\\n});\\nconsole.log(`${response.role}: ${response.content}`);\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.stream.chat({\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}, {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nfor await (let message of response) {\\n     os.toast(message.content);\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.stream.chat"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.stream.chat-message"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4973,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L4973"}],"parameters":[{"id":1146,"name":"message","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The message that should be sent to the AI."}],"blockTags":[]},"type":{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}},{"id":1147,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options that should be used."}],"blockTags":[]},"type":{"type":"reference","target":37847,"name":"AIChatOptions","package":"@casual-simulation/aux-runtime","id":37847,"qualifiedName":"AIChatOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}],"name":"AsyncIterable","package":"typescript"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Sends a chat message to the AI and streams the response back.\\nReturns a promise that resolves with an [async iterable](https://javascript.info/async-iterators-generators#async-iterables) that contains the responses from the AI.\\n\\nThrows a CasualOSError if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message.","tags":[{"tagName":"example","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.chat({\\n    role: \\"user\\",\\n    content: \\"Hello!\\"\\n});\\nconsole.log(`${response.role}: ${response.content}`);\\n```"},{"tagName":"example","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.stream.chat({\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}, {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nfor await (let message of response) {\\n     os.toast(message.content);\\n}\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.stream.chat"},{"tagName":"docid","text":"ai.stream.chat-message"}]},"group":null},{"id":1148,"order":9999,"name":"ai.stream.chat-messages","reflection":{"id":1148,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a chat message to the AI.\\nReturns a promise that resolves with an [async iterable](https://javascript.info/async-iterators-generators#async-iterables) that contains the responses from the AI.\\n\\nThrows a "},{"kind":"text","text":"[`CasualOSError`](ref:CasualOSError)"},{"kind":"text","text":" if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.stream.chat([\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n    {\\n         role: \\"user\\",\\n         content: \\"Hello!\\"\\n    }\\n]);\\n\\nfor await (let message of response) {\\n   console.log(`${message.role}: ${message.content}`);\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBuild a basic chat bot.\\nconst messages = [\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n];\\n\\nwhile(true) {\\n     const userInput = await os.showInput();\\n     if (!userInput) {\\n         break;\\n     }\\n     messages.push({\\n         role: \\"user\\",\\n         content: userInput\\n     });\\n\\n     const response = await ai.stream.chat(messages);\\n\\n     for await (let message of response) {\\n         messages.push(message);\\n         os.toast(message.content);\\n     }\\n}\\n\\nos.toast(\\"Goodbye!\\");\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.stream.chat([{\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}], {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nfor await (let message of response) {\\n     os.toast(message.content);\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.stream.chat"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.stream.chat-messages"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":5060,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L5060"}],"parameters":[{"id":1149,"name":"messages","variant":"param","kind":32768,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}}},{"id":1150,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options that should be used."}],"blockTags":[]},"type":{"type":"reference","target":37847,"name":"AIChatOptions","package":"@casual-simulation/aux-runtime","id":37847,"qualifiedName":"AIChatOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":38898,"name":"AIChatMessage","package":"@casual-simulation/aux-records","id":38898,"qualifiedName":"AIChatMessage"}],"name":"AsyncIterable","package":"typescript"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Sends a chat message to the AI.\\nReturns a promise that resolves with an [async iterable](https://javascript.info/async-iterators-generators#async-iterables) that contains the responses from the AI.\\n\\nThrows a CasualOSError if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message.","tags":[{"tagName":"example","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.stream.chat([\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n    {\\n         role: \\"user\\",\\n         content: \\"Hello!\\"\\n    }\\n]);\\n\\nfor await (let message of response) {\\n   console.log(`${message.role}: ${message.content}`);\\n}\\n```"},{"tagName":"example","text":"```ts\\nBuild a basic chat bot.\\nconst messages = [\\n     {\\n         role: \\"system\\",\\n         content: \\"You are a helpful assistant.\\"\\n     },\\n];\\n\\nwhile(true) {\\n     const userInput = await os.showInput();\\n     if (!userInput) {\\n         break;\\n     }\\n     messages.push({\\n         role: \\"user\\",\\n         content: userInput\\n     });\\n\\n     const response = await ai.stream.chat(messages);\\n\\n     for await (let message of response) {\\n         messages.push(message);\\n         os.toast(message.content);\\n     }\\n}\\n\\nos.toast(\\"Goodbye!\\");\\n```"},{"tagName":"example","text":"```ts\\nAsk the AI to describe an uploaded image.\\nconst files = await os.showUploadFiles();\\nconst firstFile = files[0];\\nconst base64 = bytes.toBase64String(new Uint8Array(firstFile.data));\\nconst response = await ai.stream.chat([{\\n   role: \'user\',\\n   content: [\\n       {\\n           base64: base64,\\n           mimeType: firstFile.mimeType,\\n       },\\n       {\\n           text: \'please describe the image\'\\n       }\\n   ]\\n}], {\\n   preferredModel: \'gemini-pro-vision\'\\n});\\n\\nfor await (let message of response) {\\n     os.toast(message.content);\\n}\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"docname","text":"ai.stream.chat"},{"tagName":"docid","text":"ai.stream.chat-messages"}]},"group":null},{"id":1142,"order":9999,"name":"ai.stream.chat-string","reflection":{"id":1142,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a chat message to the AI and streams the response back.\\nReturns a promise that resolves with an [async iterable](https://javascript.info/async-iterators-generators#async-iterables) that contains the responses from the AI.\\n\\nThrows a "},{"kind":"text","text":"[`CasualOSError`](ref:CasualOSError)"},{"kind":"text","text":" if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.stream.chat(\\"Hello!\\");\\n\\nfor await (let message of response) {\\n   console.log(message);\\n}\\n```"}]},{"tag":"@dochash","content":[{"kind":"text","text":"actions/ai"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"AI Actions"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"AI"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"AI actions are functions that make it easier to work with the AI."}]},{"tag":"@docname","content":[{"kind":"text","text":"ai.stream.chat"}]},{"tag":"@docid","content":[{"kind":"text","text":"ai.stream.chat-string"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":4923,"character":13,"url":"https://github.com/casual-simulation/casualos/blob/560d1bd88/src/aux-runtime/runtime/AuxLibrary.ts#L4923"}],"parameters":[{"id":1143,"name":"message","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The message that should be sent to the AI."}],"blockTags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":1144,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options that should be used."}],"blockTags":[]},"type":{"type":"reference","target":37847,"name":"AIChatOptions","package":"@casual-simulation/aux-runtime","id":37847,"qualifiedName":"AIChatOptions"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"AsyncIterable","package":"typescript"}],"name":"Promise","package":"typescript"}},"comment":{"text":"Sends a chat message to the AI and streams the response back.\\nReturns a promise that resolves with an [async iterable](https://javascript.info/async-iterators-generators#async-iterables) that contains the responses from the AI.\\n\\nThrows a CasualOSError if an error occurs while sending the message.\\n\\nThis function can be useful for creating chat bots, or for using an Artificial Intelligence (AI) to process a message.","tags":[{"tagName":"example","text":"```ts\\nSend a message to the AI and log the response.\\nconst response = await ai.stream.chat(\\"Hello!\\");\\n\\nfor await (let message of response) {\\n   console.log(message);\\n}\\n```"},{"tagName":"dochash","text":"actions/ai"},{"tagName":"doctitle","text":"AI Actions"},{"tagName":"docsidebar","text":"AI"},{"tagName":"docdescription","text":"AI actions are functions that make it easier to work with the AI."},{"tagName":"docname","text":"ai.stream.chat"},{"tagName":"docid","text":"ai.stream.chat-string"}]},"group":null}],"references":{"CasualOSError":"types/error","id-38849":"CasualOSError","Quaternion":"types/math/rotations","id-135":"Quaternion","Rotation":"types/math/rotations","id-167":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-38898":"AIChatMessage","AIChatOptions":"types/ai","id-37847":"AIChatOptions","AIDataContent":"types/ai","id-38907":"AIDataContent","AIGenerateImageSuccess":"types/ai","id-35527":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-37887":"AIGenerateImageOptions","AIGenerateSkyboxAction":"types/ai","id-37854":"AIGenerateSkyboxAction","AIGenerateSkyboxBlockadeLabsOptions":"types/ai","id-37865":"AIGenerateSkyboxBlockadeLabsOptions","AIGenerateSkyboxOptions":"types/ai","id-37862":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-35520":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-35524":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-35530":"AIGeneratedImage","AITextContent":"types/ai","id-38905":"AITextContent","AIUrlContent":"types/ai","id-38910":"AIUrlContent","ARSupportedAction":"types/os/xr","id-37138":"ARSupportedAction","AddCountFailure":"types/records/events","id-40918":"AddCountFailure","AddCountSuccess":"types/records/events","id-40913":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-37271":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-37275":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-37638":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-35535":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-35828":"AttachDebuggerOptions","AuthData":"types/os/records","id-37446":"AuthData","DebuggerOptions":"types/debuggers/common","id-35844":"DebuggerOptions","CasualOSDevice":"types/os/system","id-38817":"CasualOSDevice","CasualOSVersion":"types/os/system","id-38809":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-213":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-37350":"BeginRecordingAction","BotIntersection":"types/os/portals","id-36037":"BotIntersection","BotTagMasks":"types/core","id-38433":"BotTagMasks","BotTags":"types/core","id-38436":"BotTags","BotState":"types/core","id-38511":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-37551":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-36986":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-37510":"CalculateRayFromCameraAction","CalculateScreenCoordinatesFromViewportCoordinatesAction":"types/os/portals","id-37524":"CalculateScreenCoordinatesFromViewportCoordinatesAction","CalculateViewportCoordinatesFromPositionAction":"types/os/portals","id-37517":"CalculateViewportCoordinatesFromPositionAction","CalculateViewportCoordinatesFromScreenCoordinatesAction":"types/os/portals","id-37531":"CalculateViewportCoordinatesFromScreenCoordinatesAction","CancelSoundAction":"types/os/audio","id-36992":"CancelSoundAction","CompiledBotListeners":"types/core","id-38386":"CompiledBotListeners","CompiledBotModules":"types/core","id-38392":"CompiledBotModules","ConfigureWakeLockAction":"types/os/portals","id-37625":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-37472":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-37468":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-39897":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-39893":"CreatePublicRecordKeySuccess","DataPermission":"types/permissions","id-305":"DataPermission","DebuggerCallFrame":"types/debuggers/common","id-35868":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-35876":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-35862":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-35822":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-35817":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-35882":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-37460":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-36998":"DownloadAction","Easing":"types/animation","id-37088":"Easing","EnableARAction":"types/os/xr","id-37134":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-37065":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-37326":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-37152":"EnablePOVAction","EnableVRAction":"types/os/xr","id-37148":"EnableVRAction","EnableXROptions":"types/os/xr","id-37132":"EnableXROptions","EndRecordingAction":"types/os/audio","id-37362":"EndRecordingAction","EraseDataFailure":"types/records/data","id-40424":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-40420":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-40605":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-40601":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-216":"EulerAnglesRotation","EventPermission":"types/permissions","id-405":"EventPermission","ExitFullscreenAction":"types/os/portals","id-37167":"ExitFullscreenAction","FilePermission":"types/permissions","id-353":"FilePermission","FilePermissionOptions":"types/permissions","id-340":"FilePermissionOptions","FocusOnOptions":"types/os/camera","id-36702":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-36714":"FocusOnRotation","FormAnimationData":"types/os/animations","id-37606":"FormAnimationData","FromToRotation":"types/math/rotations","id-210":"FromToRotation","GenericError":"types/error","id-38846":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-37490":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-40929":"GetCountFailure","GetCountSuccess":"types/records/events","id-40923":"GetCountSuccess","GetDataFailure":"types/records/data","id-40415":"GetDataFailure","GetDataSuccess":"types/records/data","id-40406":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-37403":"GetGeolocationAction","GetRoomOptionsFailure":"types/os/portals","id-35989":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-35985":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-36023":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-36018":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-35999":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-35994":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-37394":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-37631":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-37430":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-44106":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-44104":"GrantMarkerPermissionSuccess","GrantResourcePermissionFailure":"types/records/policies","id-44129":"GrantResourcePermissionFailure","GrantResourcePermissionSuccess":"types/records/policies","id-44127":"GrantResourcePermissionSuccess","GrantRoleFailure":"types/records/roles","id-44188":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-44186":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-36698":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-36687":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-37223":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-37228":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os/image-classification","id-36824":"ImageClassifierOptions","InstPermission":"types/permissions","id-531":"InstPermission","InstUpdate":"types/os/spaces","id-38842":"InstUpdate","JoinRoomFailure":"types/os/portals","id-35961":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-35958":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-35970":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-35967":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-40446":"ListDataFailure","ListDataSuccess":"types/records/data","id-40436":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-37600":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-39940":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-39937":"ListStudiosSuccess","ListedData":"types/records/data","id-40442":"ListedData","MarkerPermission":"types/permissions","id-44318":"MarkerPermission","ResourcePermission":"types/permissions","id-44307":"ResourcePermission","ListedStudio":"types/records/studios","id-39944":"ListedStudio","LoadInstAction":"types/os/spaces","id-36864":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-37058":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-37081":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-37102":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-37117":"LocalTweenAction","LookRotation":"types/math/rotations","id-233":"LookRotation","MediaPermissionAction":"types/os/media","id-37483":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-37480":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-37367":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-37374":"MeetFunctionAction","NodeReference":"types/os/portals","id-37249":"NodeReference","Debugger":"types/debuggers/debugger","id-35642":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-35834":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os/portals","id-37261":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-37268":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-36798":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-36786":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-36975":"OpenURLAction","ParsedBotLink":"types/core","id-38377":"ParsedBotLink","PartialBotState":"types/core","id-38514":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-35698":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-35839":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-35854":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-35849":"PauseTriggerOptions","Photo":"types/camera","id-36782":"Photo","PlaySoundAction":"types/os/audio","id-36979":"PlaySoundAction","Point2D":"types/os/portals","id-37618":"Point2D","Point3D":"types/os/portals","id-37621":"Point3D","PossiblePauseTriggerLocation":"types/debuggers/common","id-35812":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-35888":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-226":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-37495":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-37502":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-36046":"RaycastRay","RaycastResult":"types/os/portals","id-36034":"RaycastResult","RecordActionOptions":"types/records/extra","id-37900":"RecordActionOptions","RecordDataFailure":"types/records/data","id-40398":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-40394":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-35931":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-35927":"RecordFileSuccess","RecordFileRequest":"types/records/files","id-40573":"RecordFileRequest","RecordedFile":"types/experimental","id-37425":"RecordedFile","Recording":"types/experimental","id-37423":"Recording","RecordingOptions":"types/experimental","id-37342":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-37181":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-37187":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-37200":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-37258":"RegisterPrefixOptions","RejectAction":"types/os/event","id-37025":"RejectAction","RemoteAction":"types/os/event","id-48517":"RemoteAction","ReportInstAction":"types/os/moderation","id-37435":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-37440":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-37165":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-44117":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-44115":"RevokeMarkerPermissionSuccess","RevokePermissionFailure":"types/records/policies","id-44151":"RevokePermissionFailure","RevokePermissionSuccess":"types/records/policies","id-44149":"RevokePermissionSuccess","RevokeResourcePermissionFailure":"types/records/policies","id-44140":"RevokeResourcePermissionFailure","RevokeResourcePermissionSuccess":"types/records/policies","id-44138":"RevokeResourcePermissionSuccess","RevokeRoleFailure":"types/records/roles","id-44199":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-44197":"RevokeRoleSuccess","RolePermission":"types/permissions","id-484":"RolePermission","RolePermissionOptions":"types/permissions","id-475":"RolePermissionOptions","RoomJoinOptions":"types/os/portals","id-38116":"RoomJoinOptions","RoomOptions":"types/os/portals","id-38112":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-38171":"RoomRemoteOptions","RoomTrackOptions":"types/os/rooms","id-38149":"RoomTrackOptions","RunScriptAction":"types/os/system","id-37045":"RunScriptAction","RuntimeBot":"types/core","id-38328":"RuntimeBot","RuntimeBotLinks":"types/core","id-38380":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-38383":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-224":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-37237":"SerializableMutationRecord","SessionSelector":"types/os/event","id-35503":"SessionSelector","SetAppOutputAction":"types/os/portals","id-37212":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-37028":"SetClipboardAction","SetRoomOptionsFailure":"types/os/portals","id-35979":"SetRoomOptionsFailure","SetRoomOptionsSuccess":"types/os/portals","id-35976":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-38146":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-36011":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-36006":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-37173":"ShareAction","ShareOptions":"types/os/input","id-37169":"ShareOptions","ShowChatBarAction":"types/os/input","id-37031":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-37039":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-36956":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-36962":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-36693":"ShowHtmlAction","ShowInputItem":"types/os/input","id-37013":"ShowInputItem","ShowInputOptions":"types/os/input","id-37004":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-37161":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-36673":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-36678":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-37051":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-37053":"ShowUploadFilesAction","SnapAxis":"types/os/portals","id-37287":"SnapAxis","SnapGrid":"types/os/portals","id-37305":"SnapGrid","SnapGridTarget":"types/os/portals","id-35936":"SnapGridTarget","SnapPoint":"types/os/portals","id-37280":"SnapPoint","SpeakTextAction":"types/os/audio","id-37385":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-35557":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-37570":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-37557":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-37592":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-37589":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-37409":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-37399":"SyntheticVoice","TweenOptions":"types/experimental","id-35561":"TweenOptions","UnloadInstAction":"types/os/spaces","id-36868":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-37194":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-37207":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-37419":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-40943":"UpdateEventRecordFailure","UpdateEventRecordRequest":"types/records/events","id-40933":"UpdateEventRecordRequest","UpdateEventRecordSuccess":"types/records/events","id-40941":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-37217":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-36049":"UploadedFile","VRSupportedAction":"types/os/xr","id-37143":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-37636":"WakeLockConfiguration","WebhookOptions":"types/web","id-35508":"WebhookOptions","WebhookResult":"types/web","id-35919":"WebhookResult","AIChatContent":"types/ai","id-38904":"AIChatContent","AIChatMessageRole":"types/ai","id-38897":"AIChatMessageRole","ActionKinds":"types/permissions","id-261":"ActionKinds","AddCountResult":"types/records/events","id-40912":"AddCountResult","AvailablePermissions":"types/permissions","id-268":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-36807":"BarcodeFormat","BotAction":"types/os/event","id-36592":"BotAction","BotAnchorPoint":"types/core","id-38540":"BotAnchorPoint","BotFilter":"types/core","id-35545":"BotFilter","BotSpace":"types/core","id-38423":"BotSpace","CameraPortal":"types/os/portals","id-37617":"CameraPortal","CameraType":"types/os/camera","id-36761":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-39892":"CreatePublicRecordKeyResult","DataActionKinds":"types/permissions","id-262":"DataActionKinds","EaseMode":"types/animation","id-37087":"EaseMode","EaseType":"types/animation","id-37086":"EaseType","EraseDataResult":"types/records/data","id-40419":"EraseDataResult","EraseFileResult":"types/records/files","id-40600":"EraseFileResult","EventActionKinds":"types/permissions","id-264":"EventActionKinds","FileActionKinds":"types/permissions","id-263":"FileActionKinds","Geolocation":"types/os/geolocation","id-37408":"Geolocation","GetCountResult":"types/records/events","id-40922":"GetCountResult","GetDataResult":"types/records/data","id-40405":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-35984":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-36017":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-35993":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-44103":"GrantMarkerPermissionResult","GrantResourcePermissionResult":"types/records/policies","id-44126":"GrantResourcePermissionResult","GrantRoleResult":"types/records/roles","id-44185":"GrantRoleResult","InstActionKinds":"types/permissions","id-267":"InstActionKinds","JoinRoomResult":"types/os/portals","id-35957":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-35966":"LeaveRoomResult","ListDataResult":"types/records/data","id-40435":"ListDataResult","ListStudiosResult":"types/records/studios","id-39936":"ListStudiosResult","MarkerActionKinds":"types/permissions","id-265":"MarkerActionKinds","Mod":"types/core","id-35502":"Mod","PortalType":"types/core","id-38426":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-35816":"PossiblePauseTriggerStates","PublicRecordKeyPolicy":"types/records/key","id-40237":"PublicRecordKeyPolicy","RecordDataResult":"types/records/data","id-40393":"RecordDataResult","RecordFileResult":"types/records/files","id-35926":"RecordFileResult","RecordUserPolicyType":"types/records/extra","id-37908":"RecordUserPolicyType","ResourceKinds":"types/permissions","id-245":"ResourceKinds","RevokeMarkerPermissionResult":"types/records/policies","id-44114":"RevokeMarkerPermissionResult","RevokeResourcePermissionResult":"types/records/policies","id-44137":"RevokeResourcePermissionResult","RevokeRoleResult":"types/records/roles","id-44196":"RevokeRoleResult","RoleActionKinds":"types/permissions","id-266":"RoleActionKinds","SetRoomOptionsResult":"types/os/portals","id-35975":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-36005":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-37017":"ShowInputSuptype","ShowInputType":"types/os/input","id-37016":"ShowInputType","SnapTarget":"types/os/portals","id-37299":"SnapTarget","StudioAssignmentRole":"types/records/studios","id-40200":"StudioAssignmentRole","SubjectType":"types/permissions","id-238":"SubjectType","TagFilter":"types/core","id-35498":"TagFilter","TrackKind":"types/records/rooms","id-38161":"TrackKind","TrackSource":"types/records/rooms","id-38162":"TrackSource","TrackVideoQuality":"types/os/rooms","id-38163":"TrackVideoQuality","UpdateEventRecordResult":"types/records/events","id-40940":"UpdateEventRecordResult","UserPolicy":"types/records/data","id-40520":"UserPolicy","animateTag-byOptions":"actions/os/animations","id-1053":"animateTag-byOptions","getbot-tag":"actions/data","id-718":"getbot-tag","getbots-tag":"actions/data","id-702":"getbots-tag","animateTag-byTag":"actions/os/animations","id-1047":"animateTag-byTag","changeState":"actions/data","id-863":"changeState","create":"actions/data","id-847":"create","destroy":"actions/data","id-851":"destroy","getbot-filters":"actions/data","id-711":"getbot-filters","getbots-filters":"actions/data","id-695":"getbots-filters","priorityShout":"actions/os/event","id-912":"priorityShout","shout":"actions/os/event","id-925":"shout","updateBotLinks":"actions/data","id-885":"updateBotLinks","whisper":"actions/os/event","id-951":"whisper","action.perform":"actions/os/event","id-34994":"action.perform","action.reject":"actions/os/event","id-34998":"action.reject","ai.chat-string":"actions/ai","id-1112":"ai.chat-string","ai.chat-message":"actions/ai","id-1115":"ai.chat-message","ai.chat-messages":"actions/ai","id-1118":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-1131":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-1135":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-1123":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-1127":"ai.generateSkybox-request","ai.stream.chat-string":"actions/ai","id-1142":"ai.stream.chat-string","ai.stream.chat-message":"actions/ai","id-1145":"ai.stream.chat-message","ai.stream.chat-messages":"actions/ai","id-1148":"ai.stream.chat-messages","applyDiffToSnapshot":"actions/data","id-768":"applyDiffToSnapshot","applyMod":"actions/mods","id-837":"applyMod","assert":"actions/debuggers","id-1096":"assert","assertEqual":"actions/debuggers","id-1101":"assertEqual","atPosition":"actions/bot-filters","id-982":"atPosition","byCreator":"actions/bot-filters","id-1003":"byCreator","byID":"actions/bot-filters","id-970":"byID","byMod":"actions/bot-filters","id-974":"byMod","bySpace":"actions/bot-filters","id-999":"bySpace","byTag":"actions/bot-filters","id-965":"byTag","bytes.fromBase64String":"actions/bytes","id-35212":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-35229":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-35220":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-35208":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-35224":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-35216":"bytes.toHexString","clearAnimations":"actions/os/animations","id-1067":"clearAnimations","clearTagMasks":"actions/data","id-791":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-35235":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-35241":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-35272":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-35265":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-35330":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-35325":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-35336":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-35321":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-35317":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-35301":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-35291":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-35296":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-35311":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-35340":"crypto.keypair","crypto.sha256":"actions/crypto","id-35257":"crypto.sha256","crypto.sha512":"actions/crypto","id-35261":"crypto.sha512","crypto.sign":"actions/crypto","id-35344":"crypto.sign","deleteTagMaskText":"actions/data","id-818":"deleteTagMaskText","deleteTagText":"actions/data","id-811":"deleteTagText","diffSnapshots":"actions/data","id-763":"diffSnapshots","either":"actions/bot-filters","id-1007":"either","os.beginAudioRecording":"actions/os/audio","id-35046":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-35053":"experiment.beginRecording","experiment.createStaticHtmlFromBots":"actions/experimental","id-35041":"experiment.createStaticHtmlFromBots","os.endAudioRecording":"actions/os/audio","id-35050":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-35057":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-35031":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-35065":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-35004":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-35009":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-35020":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-35060":"experiment.speakText","getBotLinks":"actions/data","id-881":"getBotLinks","getBotPosition":"actions/data","id-737":"getBotPosition","getBotRotation":"actions/data","id-742":"getBotRotation","getBotTagValues":"actions/data","id-727":"getBotTagValues","getFormattedJSON":"actions/data","id-755":"getFormattedJSON","getID":"actions/data","id-747":"getID","getJSON":"actions/data","id-751":"getJSON","getLink":"actions/data","id-877":"getLink","getMod":"actions/mods","id-732":"getMod","getSnapshot":"actions/data","id-759":"getSnapshot","getTag":"actions/data","id-773":"getTag","inDimension":"actions/bot-filters","id-978":"inDimension","inStack":"actions/bot-filters","id-988":"inStack","insertTagMaskText":"actions/data","id-803":"insertTagMaskText","insertTagText":"actions/data","id-796":"insertTagText","math.abs":"actions/math","id-35082":"math.abs","math.addVectors":"actions/math","id-35152":"math.addVectors","math.areClose":"actions/math","id-35183":"math.areClose","math.avg":"actions/math","id-35074":"math.avg","math.degreesToRadians":"actions/math","id-35108":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-35148":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-35116":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-35090":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-35125":"math.intersectPlane","math.negateVector":"actions/math","id-35162":"math.negateVector","math.normalizeVector":"actions/math","id-35167":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-35112":"math.radiansToDegrees","math.random":"actions/math","id-35103":"math.random","math.randomInt":"actions/math","id-35098":"math.randomInt","math.scaleVector":"actions/math","id-35177":"math.scaleVector","math.setRandomSeed":"actions/math","id-35094":"math.setRandomSeed","math.sqrt":"actions/math","id-35078":"math.sqrt","math.stdDev":"actions/math","id-35086":"math.stdDev","math.subtractVectors":"actions/math","id-35157":"math.subtractVectors","math.sum":"actions/math","id-35070":"math.sum","math.vectorLength":"actions/math","id-35172":"math.vectorLength","neighboring":"actions/bot-filters","id-993":"neighboring","not":"actions/bot-filters","id-1014":"not","os.attachDebugger":"actions/debuggers","id-34950":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-34939":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-34943":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-1212":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-1217":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-34947":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-1239":"showChat-options","showChat-placeholder":"actions/os/input","id-1235":"showChat-placeholder","os.showInput":"actions/os/portals","id-1468":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1538":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1529":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1534":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1525":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-34902":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-1286":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-34852":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1501":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-34832":"os.calculateRayFromCamera","os.calculateScreenCoordinatesFromViewportCoordinates":"actions/os/portals","id-34842":"os.calculateScreenCoordinatesFromViewportCoordinates","os.calculateViewportCoordinatesFromPosition":"actions/os/portals","id-34837":"os.calculateViewportCoordinatesFromPosition","os.calculateViewportCoordinatesFromScreenCoordinates":"actions/os/portals","id-34847":"os.calculateViewportCoordinatesFromScreenCoordinates","os.cancelSound":"actions/os/audio","id-1505":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-1385":"os.capturePhoto","os.capturePortalScreenshot":"actions/os/portals","id-1392":"os.capturePortalScreenshot","os.classifyImages":"actions/os/image-classification","id-1377":"os.classifyImages","os.closeBarcodeScanner":"actions/os/barcodes","id-1359":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1517":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-1374":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-1389":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-1345":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1652":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-34817":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-34804":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-34898":"os.createInitializationUpdate","os.device":"actions/os/system","id-1257":"os.device","os.disableAR":"actions/os/xr","id-1276":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-1301":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-1283":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-1307":"os.disableWakeLock","os.download":"actions/os/files","id-1313":"os.download","os.downloadBots":"actions/os/files","id-1319":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-1324":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-1332":"os.downloadInst","os.enableAR":"actions/os/xr","id-1272":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-1263":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1543":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-1292":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-1279":"os.enableVR","os.eraseData":"actions/os/records","id-34747":"os.eraseData","os.eraseFile-result":"actions/os/records","id-34788":"os.eraseFile-result","os.eraseFile-url":"actions/os/records","id-34792":"os.eraseFile-url","os.eraseManualApprovalData":"actions/os/records","id-34753":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/os/portals","id-1183":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1600":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1556":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1560":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-1439":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-1445":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os/spaces","id-34906":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-34722":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-1458":"os.getDimensionalDepth","os.getFile-result":"actions/os/records","id-34766":"os.getFile-result","os.getFile-url":"actions/os/records","id-34769":"os.getFile-url","os.getFocusPoint":"actions/os/portals","id-1568":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1550":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1593":"os.getInputList","os.getInputState":"actions/os/portals","id-1588":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-34894":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-34728":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1596":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-1448":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-1451":"os.getMiniPortalDimension","os.getPointerDirection":"actions/os/portals","id-1584":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1572":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1576":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-1454":"os.getPortalDimension","os.getPrivateFile-result":"actions/os/records","id-34780":"os.getPrivateFile-result","os.getPrivateFile-url":"actions/os/records","id-34783":"os.getPrivateFile-url","os.getPublicFile-result":"actions/os/records","id-34774":"os.getPublicFile-result","os.getPublicFile-url":"actions/os/records","id-34776":"os.getPublicFile-url","os.getPublicRecordKey":"actions/os/records","id-34649":"os.getPublicRecordKey","os.getRecordsEndpoint":"actions/os/records","id-34814":"os.getRecordsEndpoint","os.getRoomOptions":"actions/os/rooms","id-1618":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1633":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1622":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-34653":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-1310":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-1482":"os.goToDimension","os.goToURL":"actions/os/portals","id-1486":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-34669":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-34689":"os.grantInstRole","os.grantPermission":"actions/os/records","id-34657":"os.grantPermission","os.grantUserRole":"actions/os/records","id-34674":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1509":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-1367":"os.hideBarcode","os.hideChat":"actions/os/input","id-1247":"os.hideChat","os.hideHtml":"actions/os/portals","id-1190":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-1352":"os.hideQRCode","os.hideTips":"actions/os/portals","id-1171":"os.hideTips","os.importAUX":"actions/os/files","id-1423":"os.importAUX","os.inSheet":"actions/os/portals","id-1553":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-1260":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-1435":"os.isInDimension","os.isRecordKey":"actions/os/records","id-34704":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1603":"os.joinRoom","os.ldrawCountTextBuildSteps":"actions/os/ldraw","id-34871":"os.ldrawCountTextBuildSteps","os.leaveRoom":"actions/os/rooms","id-1608":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-34637":"os.listBuiltinTags","os.listData":"actions/os/records","id-34734":"os.listData","os.listDataByMarker":"actions/os/records","id-34740":"os.listDataByMarker","os.listFormAnimations":"actions/os/animations","id-34867":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-34891":"os.listInstUpdates","os.listUserStudios":"actions/os/records","id-34810":"os.listUserStudios","os.loadInst":"actions/os/spaces","id-1415":"os.loadInst","os.log":"actions/os/system","id-1546":"os.log","os.meetCommand":"actions/os/meets","id-34927":"os.meetCommand","os.meetFunction":"actions/os/meets","id-34932":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-34909":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-1355":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1521":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1494":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-1370":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-1381":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-1341":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1490":"os.openURL","os.parseBotsFromData":"actions/os/files","id-1427":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1497":"os.playSound","os.raycast":"actions/os/portals","id-34826":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-34821":"os.raycastFromCamera","os.recordData":"actions/os/records","id-34708":"os.recordData","os.recordEvent":"actions/os/records","id-34798":"os.recordEvent","os.recordFile":"actions/os/records","id-34759":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-34715":"os.recordManualApprovalData","os.registerApp":"actions/os/app","id-1643":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1638":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-34913":"os.remoteCount","os.remotes":"actions/os/remotes","id-34888":"os.remotes","os.replaceDragBot":"actions/os/portals","id-1431":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-34640":"os.reportInst","os.requestAuthBot":"actions/os/records","id-34643":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-34646":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-1180":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-1304":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-34697":"os.revokeInstRole","os.revokePermission":"actions/os/records","id-34663":"os.revokePermission","os.revokeUserRole":"actions/os/records","id-34682":"os.revokeUserRole","os.run":"actions/os/system","id-1250":"os.run","os.setClipboard":"actions/os/clipboard","id-1193":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1613":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1627":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1513":"os.share","os.showAccountInfo":"actions/os/system","id-1266":"os.showAccountInfo","os.showBarcode":"actions/os/barcodes","id-1362":"os.showBarcode","os.showConfirm":"actions/os/portals","id-1478":"os.showConfirm","os.showHtml":"actions/os/portals","id-1186":"os.showHtml","os.showInputForTag":"actions/os/portals","id-1462":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-1175":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-1348":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-1335":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-1338":"os.showUploadFiles","os.sleep":"actions/os/system","id-1155":"os.sleep","os.startFormAnimation":"actions/os/animations","id-34856":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-34862":"os.stopFormAnimation","os.tip":"actions/os/portals","id-1164":"os.tip","os.toast":"actions/os/portals","id-1159":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-34917":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-1419":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1648":"os.unregisterApp","os.version":"actions/os/system","id-1254":"os.version","os.vrSupported":"actions/os/xr","id-1289":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-1396":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-1404":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-1398":"os.instLatency","os.instTimeOffset":"actions/os/time","id-1400":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-1402":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-1394":"os.localTime","remote":"actions/os/event","id-1021":"remote","sendRemoteData":"actions/os/event","id-1033":"sendRemoteData","removeTags":"actions/data","id-826":"removeTags","renameTag":"actions/data","id-831":"renameTag","setTag":"actions/data","id-778":"setTag","setTagMask":"actions/data","id-784":"setTagMask","subtractMods":"actions/mods","id-842":"subtractMods","superShout":"actions/os/event","id-907":"superShout","uuid":"actions/data","id-1044":"uuid","web.get":"actions/web","id-35363":"web.get","web.hook":"actions/web","id-35374":"web.hook","web.post":"actions/web","id-35368":"web.post","configBot":"actions/os/system","id-1107":"configBot"}}');var i=s(1601);s(5058),s(6967);const r={id:"ai",title:"AI Actions",sidebar_label:"AI",description:"AI actions are functions that make it easier to work with the AI."},c=void 0,d={id:"actions/ai",title:"AI Actions",description:"AI actions are functions that make it easier to work with the AI.",source:"@site/docs/actions/ai.mdx",sourceDirName:"actions",slug:"/actions/ai",permalink:"/actions/ai",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions/ai.mdx",tags:[],version:"current",frontMatter:{id:"ai",title:"AI Actions",sidebar_label:"AI",description:"AI actions are functions that make it easier to work with the AI."},sidebar:"docs",previous:{title:"Listen",permalink:"/tags/listen"},next:{title:"Bot Filters",permalink:"/actions/bot-filters"}},l={},p=[...(0,i.KO)(n)];function m(e){return(0,o.jsx)(i.hl,{doc:n})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m()}},1601:(e,t,s)=>{s.d(t,{hl:()=>C,KO:()=>F});var o=s(79),a=s(5058),n=s(6144),i=s(8405),r=s(1888),c=s(5250);class d extends o.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const s="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw s;console.error(s)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var l=s(1537),p=s(6967),m=s(7544),u=s(3324),g=s(5834),y=s(1623);function h(e){void 0===e&&(e={});const t=e.references;return e=>{(0,g.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,l.Z)("tags/listen")+f(t.slice(1)):e.url=(0,l.Z)(y.L0[t])+f(t)}else if(e.url.startsWith("ref:")){const s=e.url.slice(4),o=t[s];e.url=(0,l.Z)(o)+"#"+s}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,l.Z)("glossary")+"#"+x(t)}else if(e.url.startsWith("page:")){const[t,s]=e.url.slice(5).split("#");e.url=(0,l.Z)(t)+"#"+s}}))}}function f(e){return"#"+x(e)}function x(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function b(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const A={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",A);const k=new Map([[A.Property,["type"]],["reflection",["declaration"]],[A.TypeLiteral,["children","signatures"]],[A.CallSignature,["parameters","comment","type"]]]);function R(e,t,s){void 0===s&&(s=null),function(e,t,s){var o;void 0===s&&(s=null);let a=k.get(null!=(o=e.kind)?o:e.type)||[];for(let n of a){let o=e[n];if(Array.isArray(o))for(let e of o)e&&t(e,s,n);else o&&t(o,s,n)}}(e,((e,s,o)=>{t(e,s,o),R(e,t,e)}))}function S(e,t){let s=[];return t(e)&&s.push(e),R(e,((e,o,a)=>{t(e,o,a)&&s.push(e)})),s}const I=["first","second","third","fourth","fifth"];function v(e,t){return e.name+"-"+t.name}function w(e,t){const s=v(e,t);let o;var a;return o=t.kind===A.Constructor?X(t.signatures[0],be(t)):t.kind===A.Method?X(t.signatures[0]):t.kind===A.Accessor?(a=t).name+": "+de(a.getSignature.type):ae(t),o="<span>"+o+"</span>",{value:o,id:s,level:3}}function T(e){let t=[],{properties:s,constructors:o,methods:a}=function(e){let t=[],s=[],o=[];if(!e)return{properties:t,constructors:s,methods:o};for(let a of e)a.flags.isPrivate||(a.kind===A.Property||a.kind===A.Accessor?t.push(a):a.kind===A.Constructor?s.push(a):a.kind===A.Method&&o.push(a));return{properties:t,constructors:s,methods:o}}(e.children);return s.length>0&&t.push(...s.map((t=>w(e,t)))),o.length>0&&t.push(...o.map((t=>w(e,t)))),a.length>0&&t.push(...a.map((t=>w(e,t)))),t}function F(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let s of e.contents)if(s.reflection.kind===A.Interface||s.reflection.kind===A.Class){const e=be(s.reflection),o=Ae(s.reflection);t.push({value:e,id:o,level:2}),s.reflection.kind===A.Class&&t.push(...T(s.reflection))}else if(s.reflection.kind===A.CallSignature){const e=be(s.reflection),o=Ae(s.reflection);t.push({value:"<span>"+X(s.reflection,e)+"</span>",id:o,level:2})}else if(s.reflection.kind===A.TypeAlias){const e=be(s.reflection),o=Ae(s.reflection);t.push({value:e,id:o,level:2})}else if(s.reflection.kind===A.GetSignature||s.reflection.kind===A.SetSignature){const e=be(s.reflection),o=Ae(s.reflection);t.push({value:"<code>"+X(s.reflection,e)+"</code>",id:o,level:2})}else{const e=be(s.reflection),o=Ae(s.reflection);t.push({value:e,id:o,level:2})}return t}function C(e){let{doc:t}=e;const s=t.contents,o=t.references;return(0,c.jsx)("ul",{className:"api api-list",children:s.map((e=>(0,c.jsx)("li",{className:"api-member-item",children:(0,c.jsx)(P,{reflection:e.reflection,references:o})},e.id)))})}function P(e){let{reflection:t,references:s}=e;return t.kind===A.Interface||t.kind===A.Class?(0,c.jsx)(D,{reflection:t,references:s}):t.kind===A.CallSignature||t.kind===A.GetSignature||t.kind===A.SetSignature?(0,c.jsx)(L,{reflection:t,references:s}):t.kind===A.TypeAlias?(0,c.jsx)(O,{reflection:t,references:s}):(0,c.jsx)(B,{reflection:t,references:s})}function O(e){let{reflection:t,references:s}=e;const o=be(t),n=Ae(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:n,children:o}),(0,c.jsx)(E,{reflection:t,references:s}),(0,c.jsx)(j,{reflection:t,name:o,references:s}),(0,c.jsx)(te,{member:t})]})}function j(e){let{reflection:t,name:s,references:o}=e,a="";return"union"===t.type.type&&(a=(0,c.jsx)(N,{type:t.type,name:s,references:o})),a}function N(e){let{type:t,name:s,references:o}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",s," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(G,{type:e,references:o},t)))})]})}function G(e){let{type:t,references:s}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:s})})})}function D(e){let{reflection:t,references:s}=e;const o=be(t),n=Ae(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:n,children:o}),(0,c.jsx)(M,{reflection:t,references:s}),(0,c.jsx)(te,{member:t})]})}function B(e){let{reflection:t,references:s}=e;const o=be(t),n=Ae(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:n,children:o}),(0,c.jsx)(W,{reflection:t,references:s}),(0,c.jsx)(te,{member:t})]})}function L(e){let{reflection:t,references:s}=e;const o=be(t),a=Ae(t);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:t,sig:t,name:o,link:a,references:s})})}function M(e){var t;const s=e.reflection;if(!s)throw new Error("Unable to find "+e.name+"!");const o=function(e){return(0,r.sortBy)(e,(e=>e.kind===A.Property||e.kind===A.Accessor?0:e.kind===A.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=s.children)?t:[]);return(0,c.jsx)(d,{reflection:s,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:s,references:e.references}),(0,c.jsx)(a.Z,{as:"h3",id:s.name+"-properties",children:"Members"}),(0,c.jsx)("div",{children:(0,c.jsxs)("ul",{className:"class-members-list",children:[s.indexSignature?(0,c.jsx)(U,{reflection:s,index:s.indexSignature,references:e.references}):"",s.references?(0,c.jsx)(_,{prop:s,references:e.references}):"",o.map((t=>(0,c.jsx)(q,{member:t,link:v(s,t),references:e.references},t.name)))]})})]})})}function U(e){let{reflection:t,index:s,references:o}=e;const n=s.parameters[0];return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(E,{reflection:s,references:o}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",n.name,": ",(0,c.jsx)(ce,{type:n.type,references:o}),"]: ",(0,c.jsx)(ce,{type:s.type,references:o})]})}),(0,c.jsx)(te,{member:s})]})}function E(e){let{reflection:t,references:s}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(z,{comment:t.comment,references:s})})}function q(e){let t;return t=e.member.kind===A.Property?function(e){let t,s=e.member,o="";s.references?(o=(0,c.jsx)(V,{prop:s,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:s.typeReference})):"reflection"===s.type.type&&s.typeText&&s.typeReference?(t=(0,c.jsx)(c.Fragment,{children:s.typeReference}),o=(0,c.jsx)(n.Z,{language:"typescript",children:s.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!o&&s.typeText&&s.typeReference&&(o=(0,c.jsx)(n.Z,{language:"typescript",children:s.typeText}));const i=be(s);Ae(s);return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsxs)("span",{className:"class-member-name",children:[i,e.member.flags.isOptional?(0,c.jsx)("span",{className:"class-member-optional",children:"?"}):""]})," ",(0,c.jsx)("span",{className:"class-member-type",children:t})]}),(0,c.jsx)(E,{reflection:e.member,references:e.references}),o]})}(e):e.member.kind===A.Constructor?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===A.Method?function(e){const t=be(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(J,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===A.Accessor?function(e){var t;return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsx)("span",{className:"class-member-name",children:e.member.name})," ",(0,c.jsx)("span",{className:"class-member-type",children:(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})})]}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsxs)(d,{reflection:e.member,children:[(0,c.jsx)("span",{role:"separator",className:"class-member-separator"}),(0,c.jsx)("li",{className:"class-member-item",children:t})]})}function _(e){let{prop:t,references:s}=e;const o=Ae(t);return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:o+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(i.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)($,{children:t.references,references:s})]})]})}function V(e){let{prop:t,references:s}=e;return(0,c.jsxs)(i.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)($,{children:t.references,references:s})]})}function W(e){const t=e.reflection,s=(t.type.declaration,Te(t));return(0,c.jsx)(d,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:t,references:e.references}),s.map((t=>(0,c.jsx)(K,{group:t,references:e.references},t.group)))]})})}function K(e){let{group:t,references:s}=e;const o=t.children,n=ve(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:t.group,children:n}),o.map((e=>(0,c.jsx)(H,{namespace:e.namespace,name:e.name,property:e.child,link:v(e.reflection,e.child),references:s},e.child.id)))]})}function H(e){let t;if(pe(e.property)){var s;const o=e.namespace?e.namespace+"."+e.name:e.name,a=e.property.type.declaration;t=J({name:o,func:e.property,sig:null!=(s=Re(a.signatures))?s:a.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){const s=e.namespace?e.namespace+"."+e.name:e.name,o=Se(e.property);t=J({name:s,func:e.property,sig:o,link:e.link,references:e.references})}else t=ye(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===A.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(E,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(d,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function J(e){let{func:t,sig:s,link:o,name:n,references:i}=e;const r=s.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h4",id:o,children:(0,c.jsx)(Y,{func:t,sig:s,name:n,references:i})}),(0,c.jsx)(Z,{sig:s,references:i}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(ee,{param:e,index:t,references:i},e.name)))}):"",(0,c.jsx)(te,{member:s})]})}function Z(e){let{sig:t,references:s}=e;return(0,c.jsx)(z,{comment:t.comment,references:s})}function z(e){let{comment:t,references:s}=e;return(0,c.jsx)($,{references:s,children:Q(t)})}function $(e){let{children:t,remarkPlugins:s,rehypePlugins:o,references:a}=e;return(0,c.jsx)(m.U,{remarkPlugins:[[h,{references:a}],...s||[]],rehypePlugins:[u.Z,...o||[]],children:t})}function Q(e){let t="";if(e&&e.summary)for(let s of e.summary)t+=s.text;return t}function Y(e){let{func:t,sig:s,name:o,references:a}=e;const n=s.parameters||[];let i="";return t.kind!==A.GetSignature&&(i=(0,c.jsxs)(c.Fragment,{children:["(",n.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:a})]},e.name))),")"]})),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("span",{className:"function-member-name",children:[(t.flags.isStatic?"static ":"")+(o||s.name),i]}),": ",(0,c.jsx)("span",{className:"function-member-type",children:(0,c.jsx)(ce,{type:s.type,references:a})})]})}function X(e,t){void 0===t&&(t=e.name);const s=e.parameters||[];let o="";return e.kind!==A.GetSignature&&(o="("+s.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+o+": "+de(e.type)}function ee(e){let t,{param:s,index:o,references:a}=e;return t=s.flags.isRest&&s.type.elementType?0===o?(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:s.type.elementType,references:a})," and are ",(0,c.jsx)(ne,{param:s,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:s.type.elementType,references:a})," and are ",(0,c.jsx)(ne,{param:s,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("em",{children:[oe(o)," parameter"]})," is",s.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:s.type,references:a})," and ",(0,c.jsx)(ne,{param:s,references:a})]}),t}function te(e){var t;let{member:s}=e;if(null==(t=s.comment)||!t.blockTags)return"";const o=s.comment.blockTags.filter((e=>"@example"===e.tag));return o.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h5",{className:"examples-heading",children:"Examples"}),o.map(((e,t)=>(0,c.jsx)(se,{example:e},t)))]}):""}function se(e){let{example:t}=e;const s=t.content.map((e=>e.text)).join(""),o=s.indexOf("\n"),a=s.indexOf("\n",o+1);let i="typescript";o>3&&(i=s.substring(3,o).trim());const r=s.lastIndexOf("```"),d=s.substring(o,a),l=s.substring(a,r);return(0,c.jsx)(n.Z,{language:i,title:d.trim(),children:l.trim()})}function oe(e){return I[e]}function ae(e,t){let s;return void 0===t&&(t=e.name),s=e.typeReference?e.typeReference:de(e.type),t+(e.flags.isOptional?"?":"")+": "+s}function ne(e){let{param:t,isRest:s,references:o}=e;return(0,c.jsx)($,{remarkPlugins:[b],references:o,children:ie(t,s)})}function ie(e,t){let s=Q(e.comment);return s?(s=s.slice(0,1).toLowerCase()+s.slice(1),s.startsWith("the")&&!t&&(s="is "+s),s):""}const re=new Map([["ArrayBuffer","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer"],["Blob","https://developer.mozilla.org/en-US/docs/Web/API/Blob"],["Uint8Array","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"],["RegExp","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"],["Function","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"],["Error","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"]]);function ce(e){let{type:t,references:s,isInUnionOrArray:a}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var n,i,r,d,m,u;if(t.name===(null==(n=t.target)?void 0:n.qualifiedName)&&re.has(t.name)){const e=re.get(t.name);return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)("a",{className:"type-link",href:e,children:t.name})})}if("Promise"===t.name&&"Promise"===(null==(i=t.target)?void 0:i.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:s}),">"]});if("Partial"===t.name&&"Partial"===(null==(r=t.target)?void 0:r.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:s}),">"]});if("Omit"===t.name&&"Omit"===(null==(d=t.target)?void 0:d.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys",children:"Omit"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:s}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:s}),">"]});if("Map"===t.name&&"Map"===(null==(m=t.target)?void 0:m.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"Map"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:s}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:s}),">"]});if("Set"===t.name&&"Set"===(null==(u=t.target)?void 0:u.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",children:"Set"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:s}),">"]});let e="#"+t.name;const o=t.id?null==s?void 0:s["id-"+t.id]:null;if(o){const t=null==s?void 0:s[o];t&&(e=(0,l.Z)(t)+"#"+o)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry. ");return(0,c.jsx)(p.Z,{className:"type-link",href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(o.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:s,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:s,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===A.TypeLiteral&&e.signatures&&!e.children){var g;const t=null!=(g=Re(e.signatures))?g:e.signatures[0],o=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[a?"(":"","(",o.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:s})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:s}),a?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:s,isInUnionOrArray:!0})]})))}if("tuple"===t.type){const e=t.elements.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?", ":"",(0,c.jsx)(ce,{type:e,references:s,isInUnionOrArray:!0})]})));return(0,c.jsxs)("span",{children:["[",e,"]"]})}return"typeOperator"===t.type?(0,c.jsxs)("span",{children:[t.operator," ",(0,c.jsx)(ce,{type:t.target,references:s,isInUnionOrArray:!0})]}):""+JSON.stringify(t)}function de(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+de(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>de(e))).join(" | ")+")":"array"===e.type?de(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function le(e){return pe(e)||ue(e)}function pe(e){return e&&me(e.type)}function me(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===A.CallSignature))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>me(e)))}function ge(e){return e&&e.kind===A.CallSignature}function ye(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===A.TypeLiteral&&e.type.declaration.children}function he(e,t){var s;const o=null==(s=e.comment)||null==(s=s.blockTags)?void 0:s.find((e=>e.tag===t));return o?o.content.map((e=>e.text)).join(""):null}function fe(e){if(e)for(let t of e){const e=he(t,"@docname");if(e)return e.trim()}return null}function xe(e){if(pe(e)){var t;const s=null==e||null==(t=e.type)?void 0:t.declaration;let o=ke(null==s?void 0:s.signatures);if(o)return o}else if(ue(e)){const t=e.type.types;for(let e of t)if(me(e)){let t=ke(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=ke([e]);if(t)return t}return"99-default"}function be(e){if(e.kind===A.Method){let t=fe(e.signatures);if(t)return t}else if(pe(e)){var t;const s=null==e||null==(t=e.type)?void 0:t.declaration;let o=fe(null==s?void 0:s.signatures);if(o)return o}else if(ue(e)){const t=e.type.types;for(let e of t)if(me(e)){let t=fe(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=fe([e]);if(t)return t}return he(s=e,"@docname")||s.name;var s}function Ae(e){const t=he(e,"@docid");if(t)return t;const s=function(e,t){let s=[];return R(e,((e,o,a)=>{"comment"===a&&(console.log(e),s.push(...e.blockTags.filter((e=>e.tag===t))))})),s}(e,"@docid");return s.length>0?s[0].text.trim():be(e)}function ke(e){if(e)for(let t of e){const e=he(t,"@docgroup");if(e)return e.trim()}return null}function Re(e){for(let t of e){if(he(t,"@docgroup"))return t}return null}function Se(e){const t=e.type.types;let s=null;for(let o of t)if(me(o)){const e=o.declaration.signatures;s||(s=e[0]);let t=Re(e);if(t)return t}return s}function Ie(e){const t=(s=e,o=A.CallSignature,S(s,(e=>e.kind===o)));var s,o;for(let a of t){const e=he(a,"@docgrouptitle");if(e)return e.trim()}return null}function ve(e){for(let t of e.children){let e=Ie(t.child);if(e)return e}return e.group}function we(e){if(e.kind===A.CallSignature)return ge(e)||le(e)||ye(e)?[{group:xe(e),name:be(e),reflection:e,child:e}]:[];if(e.kind===A.TypeAlias||e.kind===A.GetSignature||e.kind===A.SetSignature)return[];const t=e.type.declaration.children.filter((e=>ge(e)||le(e)||ye(e))),s=null!==he(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>le(t)?{group:xe(t),name:be(t),namespace:s,reflection:e,child:t}:we(t)))}function Te(e){const t=we(e),s=(0,r.groupBy)(t,(e=>e.group));let o=[];for(let a in s)o.push({group:a,children:s[a]});return o=(0,r.sortBy)(o,(e=>e.group)),o}}}]);