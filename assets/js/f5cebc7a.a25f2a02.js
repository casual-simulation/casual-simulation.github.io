"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[3786],{371:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var s=o(5250),a=o(5545);const i=JSON.parse('{"hash":"types/core","pageTitle":"Core Types","pageDescription":"Documentation for core types that are used throughout CasualOS.","pageSidebarLabel":"Core","contents":[{"id":35524,"order":9999,"name":"BotFilter","reflection":{"id":35524,"name":"BotFilter","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines a bot filter function.\\n\\nCommon bot filters are "},{"kind":"text","text":"[`byTag(tag, filter)`](ref:byTag)"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"BotFilter"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":769,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L769"}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":35525,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":769,"character":25,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L769"}],"signatures":[{"id":35526,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":35527,"name":"bot","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":38244,"name":"Bot","package":"@casual-simulation/aux-common","id":38244,"qualifiedName":"Bot"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},{"type":"literal","value":null}]}},"comment":{"text":"Defines a bot filter function.\\n\\nCommon bot filters are byTag","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"BotFilter"}]},"group":"01-core"},{"id":38339,"order":9999,"name":"BotSpace","reflection":{"id":38339,"name":"BotSpace","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"The possible bot spaces.\\n\\n- "},{"kind":"code","text":"`\\"shared\\"`"},{"kind":"text","text":" means that the bot is a normal bot.\\n- "},{"kind":"code","text":"`\\"local\\"`"},{"kind":"text","text":" means that the bot is stored in the [local storage](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage) partition.\\n- "},{"kind":"code","text":"`\\"tempLocal\\"`"},{"kind":"text","text":" means that the bot is stored in the [temporary](https://en.wikipedia.org/wiki/In-memory_database) partition.\\n- "},{"kind":"code","text":"`\\"tempShared\\"`"},{"kind":"text","text":" means that the bot is temporary and shared with other devices.\\n- "},{"kind":"code","text":"`\\"remoteTempShared\\"`"},{"kind":"text","text":" means that the bot is temporary and shared with this device from a remote device."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Space"}]},{"tag":"@docid","content":[{"kind":"text","text":"BotSpace"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":423,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L423"}],"type":{"type":"union","types":[{"type":"literal","value":"shared"},{"type":"literal","value":"local"},{"type":"literal","value":"tempLocal"},{"type":"literal","value":"history"},{"type":"literal","value":"admin"},{"type":"literal","value":"tempShared"},{"type":"literal","value":"remoteTempShared"},{"type":"literal","value":"certified"}]}},"comment":{"text":"The possible bot spaces.\\n\\n- `\\"shared\\"` means that the bot is a normal bot.\\n- `\\"local\\"` means that the bot is stored in the [local storage](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage) partition.\\n- `\\"tempLocal\\"` means that the bot is stored in the [temporary](https://en.wikipedia.org/wiki/In-memory_database) partition.\\n- `\\"tempShared\\"` means that the bot is temporary and shared with other devices.\\n- `\\"remoteTempShared\\"` means that the bot is temporary and shared with this device from a remote device.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Space"},{"tagName":"docid","text":"BotSpace"}]},"group":"01-core"},{"id":38427,"order":9999,"name":"BotState","reflection":{"id":38427,"name":"BotsState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that contains a set of bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with groups of bots.\\nFor example, the "},{"kind":"text","text":"[`diffSnapshots(first, second)`](ref:diffSnapshots)"},{"kind":"text","text":" function takes two bot states and produces the difference between them."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"BotState"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nCreate a bot state with two bots\\nlet state = {\\n   [bot1.id]: bot1,\\n   [bot2.id]: bot2\\n};\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a bot by its ID from a bot state\\nlet bot = state[botId];\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":863,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L863"}],"indexSignature":{"id":38428,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets the bot in the state with the given ID."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":867,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L867"}],"parameters":[{"id":38429,"name":"id","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":38244,"name":"Bot","package":"@casual-simulation/aux-common","id":38244,"qualifiedName":"Bot"}}},"comment":{"text":"Defines an interface that contains a set of bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with groups of bots.\\nFor example, the diffSnapshots function takes two bot states and produces the difference between them.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"BotState"},{"tagName":"example","text":"```ts\\nCreate a bot state with two bots\\nlet state = {\\n   [bot1.id]: bot1,\\n   [bot2.id]: bot2\\n};\\n```"},{"tagName":"example","text":"```ts\\nGet a bot by its ID from a bot state\\nlet bot = state[botId];\\n```"}]},"group":"01-core"},{"id":38349,"order":9999,"name":"BotTagMasks","reflection":{"id":38349,"name":"BotTagMasks","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface for a map of tag masks to tag names.\\n\\nTag masks are special tags that can exist in a different space from the bot they are applied to.\\nThis makes it possible to have some local-only data applied to a shared bot for example.\\n\\nThe actual data structure is similar to the bot tags structure except that tags are additionally\\nsplit by the space that they originated from. This makes it possible to identify which space a tag came from and also\\nprevents cross-space conflicts.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface TagMasks {\\n     [space: string]: Tags;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"TagMasks"}]},{"tag":"@docid","content":[{"kind":"text","text":"BotTagMasks"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":509,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L509"}],"indexSignature":{"id":38350,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets the tag masks that are specific to the given space."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":513,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L513"}],"parameters":[{"id":38351,"name":"space","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":38352,"name":"Tags","package":"@casual-simulation/aux-common","id":38352,"qualifiedName":"BotTags"}}},"comment":{"text":"Defines an interface for a map of tag masks to tag names.\\n\\nTag masks are special tags that can exist in a different space from the bot they are applied to.\\nThis makes it possible to have some local-only data applied to a shared bot for example.\\n\\nThe actual data structure is similar to the bot tags structure except that tags are additionally\\nsplit by the space that they originated from. This makes it possible to identify which space a tag came from and also\\nprevents cross-space conflicts.\\n\\n```typescript\\ninterface TagMasks {\\n     [space: string]: Tags;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"TagMasks"},{"tagName":"docid","text":"BotTagMasks"}]},"group":"01-core"},{"id":38352,"order":9999,"name":"BotTags","reflection":{"id":38352,"name":"BotTags","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents a set of tags and their related values.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Tags {\\n     [tag: string]: any\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Tags"}]},{"tag":"@docid","content":[{"kind":"text","text":"BotTags"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":530,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L530"}],"indexSignature":{"id":38425,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets the given tag on the bot."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the #color on this bot\\nlet color = thisBot.tags.color;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a raw tag on this bot\\nlet rawTag = thisBot.raw.tag;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSet the #color tag to \\"red\\" on this bot\\nthisBot.tags.color = \\"red\\";\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSet a tempLocal tag mask for #color on this bot\\nthisBot.masks.color = \\"red\\";\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":841,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L841"}],"parameters":[{"id":38426,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},"comment":{"text":"Defines an interface that represents a set of tags and their related values.\\n\\n```typescript\\ninterface Tags {\\n     [tag: string]: any\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Tags"},{"tagName":"docid","text":"BotTags"}]},"group":"01-core"},{"id":38302,"order":9999,"name":"CompiledBotListeners","reflection":{"id":38302,"name":"CompiledBotListeners","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An interface that maps tag names to compiled listener functions.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Listeners {\\n     [tag: string]: (arg?: any) => any;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Listeners"}]},{"tag":"@docid","content":[{"kind":"text","text":"CompiledBotListeners"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":297,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L297"}],"indexSignature":{"id":38303,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the listener in the given tag."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":301,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L301"}],"parameters":[{"id":38304,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":38305,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":301,"character":19,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L301"}],"signatures":[{"id":38306,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":38307,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}},"comment":{"text":"An interface that maps tag names to compiled listener functions.\\n\\n```typescript\\ninterface Listeners {\\n     [tag: string]: (arg?: any) => any;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Listeners"},{"tagName":"docid","text":"CompiledBotListeners"}]},"group":"01-core"},{"id":38308,"order":9999,"name":"CompiledBotModules","reflection":{"id":38308,"name":"CompiledBotModules","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An interface that maps module names to compiled modules.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Modules {\\n     [tag: string]: BotModule;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Listeners"}]},{"tag":"@docid","content":[{"kind":"text","text":"CompiledBotModules"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":318,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L318"}],"indexSignature":{"id":38309,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the listener in the given tag."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":322,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L322"}],"parameters":[{"id":38310,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../src/aux-common/bots/BotModule.ts","qualifiedName":"BotModule"},"name":"BotModule","package":"@casual-simulation/aux-common"}}},"comment":{"text":"An interface that maps module names to compiled modules.\\n\\n```typescript\\ninterface Modules {\\n     [tag: string]: BotModule;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Listeners"},{"tagName":"docid","text":"CompiledBotModules"}]},"group":"01-core"},{"id":35481,"order":9999,"name":"Mod","reflection":{"id":35481,"name":"Mod","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines a type that represents a mod.\\nThat is, a set of tags that can be applied to another bot."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Mod"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":528,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L528"}],"type":{"type":"union","types":[{"type":"reference","target":38352,"name":"Tags","package":"@casual-simulation/aux-common","id":38352,"qualifiedName":"BotTags"},{"type":"reference","target":38244,"name":"Bot","package":"@casual-simulation/aux-common","id":38244,"qualifiedName":"Bot"}]}},"comment":{"text":"Defines a type that represents a mod.\\nThat is, a set of tags that can be applied to another bot.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Mod"}]},"group":"01-core"},{"id":38293,"order":9999,"name":"ParsedBotLink","reflection":{"id":38293,"name":"ParsedBotLink","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents a bot link that was parsed from a tag."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"ParsedBotLink"}]}]},"children":[{"id":38295,"name":"botIDs","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The bot IDs that the link references."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":225,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L225"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":38294,"name":"tag","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tag that the link was parsed from."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":220,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L220"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[38295,38294]}],"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":216,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L216"}]},"comment":{"text":"Defines an interface that represents a bot link that was parsed from a tag.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"ParsedBotLink"}]},"group":"01-core"},{"id":38430,"order":9999,"name":"PartialBotState","reflection":{"id":38430,"name":"PartialBotsState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that contains a set of partial bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with differences between groups of bots.\\nFor example, the "},{"kind":"text","text":"[`applyDiffToSnapshot(snapshot, diff)`](ref:applyDiffToSnapshot)"},{"kind":"text","text":" function takes a bot state and a partial bot state and produces a final state that contains the combined result."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"PartialBotState"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":880,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L880"}],"indexSignature":{"id":38431,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":881,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L881"}],"parameters":[{"id":38432,"name":"id","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":38244,"name":"Bot","package":"@casual-simulation/aux-common","id":38244,"qualifiedName":"Bot"}],"name":"Partial","package":"typescript"}}},"comment":{"text":"Defines an interface that contains a set of partial bots that have been indexed by their IDs.\\n\\nGenerally, this is only used when working with differences between groups of bots.\\nFor example, the applyDiffToSnapshot function takes a bot state and a partial bot state and produces a final state that contains the combined result.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"PartialBotState"}]},"group":"01-core"},{"id":38244,"order":9999,"name":"RuntimeBot","reflection":{"id":38244,"name":"RuntimeBot","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface for a bot in a script/formula.\\n\\nThe difference between this and Bot is that the tags\\nare calculated values and raw is the original tag values.\\n\\ni.e. tags will evaluate formulas while raw will return the formula scripts themselves."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@doctitle","content":[{"kind":"text","text":"Core Types"}]},{"tag":"@docsidebar","content":[{"kind":"text","text":"Core"}]},{"tag":"@docdescription","content":[{"kind":"text","text":"Documentation for core types that are used throughout CasualOS."}]},{"tag":"@docid","content":[{"kind":"text","text":"RuntimeBot"}]},{"tag":"@docname","content":[{"kind":"text","text":"Bot"}]}]},"children":[{"id":38253,"name":"changes","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The changes that have been made to the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":113,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L113"}],"type":{"type":"reference","target":38352,"name":"Tags","package":"@casual-simulation/aux-common","id":38352,"qualifiedName":"BotTags"}},{"id":38245,"name":"id","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ID of the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":71,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L71"}],"type":{"type":"intrinsic","name":"string"}},{"id":38246,"name":"link","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The link to the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":76,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L76"}],"type":{"type":"intrinsic","name":"string"}},{"id":38251,"name":"links","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tags on the bot that link to other bots."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":103,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L103"}],"type":{"type":"reference","target":38296,"name":"Links","package":"@casual-simulation/aux-common","id":38296,"qualifiedName":"RuntimeBotLinks"}},{"id":38256,"name":"listeners","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The calculated listener functions.\\nThis lets you get the compiled listener functions."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":131,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L131"}],"type":{"type":"reference","target":38302,"name":"Listeners","package":"@casual-simulation/aux-common","id":38302,"qualifiedName":"CompiledBotListeners"}},{"id":38254,"name":"maskChanges","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tag mask changes that have been made to the bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":118,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L118"}],"type":{"type":"reference","target":38349,"name":"TagMasks","package":"@casual-simulation/aux-common","id":38349,"qualifiedName":"BotTagMasks"}},{"id":38250,"name":"masks","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The tag masks that have been applied to this bot."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":98,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L98"}],"type":{"type":"reference","target":38352,"name":"Tags","package":"@casual-simulation/aux-common","id":38352,"qualifiedName":"BotTags"}},{"id":38249,"name":"raw","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The raw tag values. This lets you get the raw script text from formulas."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":93,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L93"}],"type":{"type":"reference","target":38352,"name":"Tags","package":"@casual-simulation/aux-common","id":38352,"qualifiedName":"BotTags"}},{"id":38247,"name":"space","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The space that the bot is in.\\nDefaults to "},{"kind":"code","text":"`\\"shared\\"`"}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":82,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L82"}],"type":{"type":"reference","target":38339,"name":"Space","package":"@casual-simulation/aux-common","id":38339,"qualifiedName":"BotSpace"}},{"id":38248,"name":"tags","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The calculated tag values.\\nThis lets you get the calculated values from formulas."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":88,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L88"}],"type":{"type":"reference","target":38352,"name":"Tags","package":"@casual-simulation/aux-common","id":38352,"qualifiedName":"ScriptTags"}},{"id":38252,"name":"vars","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The variables that the bot contains."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":108,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L108"}],"type":{"type":"reference","target":38299,"name":"Variables","package":"@casual-simulation/aux-common","id":38299,"qualifiedName":"RuntimeBotVars"}}],"groups":[{"title":"Properties","children":[38253,38245,38246,38251,38256,38254,38250,38249,38247,38248,38252]}],"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":67,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L67"}],"indexSignature":{"id":38288,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the listener or bot property with the given name.\\n\\nIf given a property name, like "},{"kind":"code","text":"`\\"tags\\"`"},{"kind":"text","text":" or "},{"kind":"code","text":"`\\"vars\\"`"},{"kind":"text","text":", then it will return the value of that property.\\nAlternatively, if the name does not match an existing property on the bot, then it will return the listener with the given name."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the tags of a bot\\nlet tags = bot.tags;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the links of a bot\\nlet links = bot.links;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet the\\n```"}]},{"tag":"@onClick","content":[{"kind":"text","text":"listener of a bot\\nlet onClick = bot.onClick;"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a property on a bot by a variable\\nlet propertyToGet = \'tags\';\\nlet tags = bot[propertyToGet];\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":206,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L206"}],"parameters":[{"id":38289,"name":"listenerOrProperty","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":38290,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":206,"character":35,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L206"}],"signatures":[{"id":38291,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":38292,"name":"arg","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}},{"type":"intrinsic","name":"any"}]}}},"comment":{"text":"Defines an interface for a bot in a script/formula.\\n\\nThe difference between this and Bot is that the tags\\nare calculated values and raw is the original tag values.\\n\\ni.e. tags will evaluate formulas while raw will return the formula scripts themselves.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"doctitle","text":"Core Types"},{"tagName":"docsidebar","text":"Core"},{"tagName":"docdescription","text":"Documentation for core types that are used throughout CasualOS."},{"tagName":"docid","text":"RuntimeBot"},{"tagName":"docname","text":"Bot"}]},"group":"01-core"},{"id":38296,"order":9999,"name":"RuntimeBotLinks","reflection":{"id":38296,"name":"RuntimeBotLinks","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents the bot links a bot can have.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Links {\\n     [link: string]: Bot | Bot[];\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Links"}]},{"tag":"@docid","content":[{"kind":"text","text":"RuntimeBotLinks"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":242,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L242"}],"indexSignature":{"id":38297,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the bot or bots that are linked in the given tag."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a bot that is linked in the #manager tag\\nlet managerBot = thisBot.links.manager;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nLink a bot to another bot in the #manager tag\\nthisBot.links.manager = managerBot;\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":252,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L252"}],"parameters":[{"id":38298,"name":"tag","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":38244,"name":"Bot","package":"@casual-simulation/aux-common","id":38244,"qualifiedName":"RuntimeBot"},{"type":"array","elementType":{"type":"reference","target":38244,"name":"Bot","package":"@casual-simulation/aux-common","id":38244,"qualifiedName":"RuntimeBot"}}]}}},"comment":{"text":"Defines an interface that represents the bot links a bot can have.\\n\\n```typescript\\ninterface Links {\\n     [link: string]: Bot | Bot[];\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Links"},{"tagName":"docid","text":"RuntimeBotLinks"}]},"group":"01-core"},{"id":38299,"order":9999,"name":"RuntimeBotVars","reflection":{"id":38299,"name":"RuntimeBotVars","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that represents the variables a bot can have.\\nVariables are useful for storing data that is not able to be saved to a tag.\\n\\n"},{"kind":"code","text":"```typescript\\ninterface Variables {\\n     [variable: string]: any;\\n}\\n```"}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"Variables"}]},{"tag":"@docid","content":[{"kind":"text","text":"RuntimeBotVars"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":270,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L270"}],"indexSignature":{"id":38300,"name":"__index","variant":"signature","kind":8192,"flags":{},"comment":{"summary":[{"kind":"text","text":"Gets or sets a variable on the bot."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nGet a variable on thisBot\\nlet variable = thisBot.vars.variable;\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nSave a variable on thisBot\\nthisBot.vars.variable = variable;\\n```"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":280,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L280"}],"parameters":[{"id":38301,"name":"variable","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}},"comment":{"text":"Defines an interface that represents the variables a bot can have.\\nVariables are useful for storing data that is not able to be saved to a tag.\\n\\n```typescript\\ninterface Variables {\\n     [variable: string]: any;\\n}\\n```","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"Variables"},{"tagName":"docid","text":"RuntimeBotVars"}]},"group":"01-core"},{"id":35477,"order":9999,"name":"TagFilter","reflection":{"id":35477,"name":"TagFilter","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines the possible values that can be used as a tag filter."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docgroup","content":[{"kind":"text","text":"01-core"}]},{"tag":"@docname","content":[{"kind":"text","text":"TagFilter"}]}]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":512,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L512"}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":35478,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":513,"character":7,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L513"}],"signatures":[{"id":35479,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":35480,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]}},"comment":{"text":"Defines the possible values that can be used as a tag filter.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docgroup","text":"01-core"},{"tagName":"docname","text":"TagFilter"}]},"group":"01-core"},{"id":38456,"order":9999,"name":"BotAnchorPoint","reflection":{"id":38456,"name":"BotAnchorPoint","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines the possible bot anchor points."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"BotAnchorPoint"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":1036,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L1036"}],"type":{"type":"union","types":[{"type":"literal","value":"top"},{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"literal","value":"left"},{"type":"literal","value":"right"},{"type":"literal","value":"bottom"},{"type":"literal","value":"center"},{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}]}},"comment":{"text":"Defines the possible bot anchor points.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"BotAnchorPoint"}]},"group":null},{"id":38342,"order":9999,"name":"PortalType","reflection":{"id":38342,"name":"PortalType","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"The possible portal types."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"PortalType"}]}]},"sources":[{"fileName":"src/aux-common/bots/Bot.ts","line":458,"character":12,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/Bot.ts#L458"}],"type":{"type":"union","types":[{"type":"literal","value":"grid"},{"type":"literal","value":"miniGrid"},{"type":"literal","value":"menu"},{"type":"literal","value":"sheet"},{"type":"literal","value":"meet"},{"type":"literal","value":"system"},{"type":"intrinsic","name":"string"}]}},"comment":{"text":"The possible portal types.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"PortalType"}]},"group":null},{"id":35867,"order":9999,"name":"PseudoRandomNumberGenerator","reflection":{"id":35867,"name":"PseudoRandomNumberGenerator","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface for a random number generator."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"PseudoRandomNumberGenerator"}]}]},"children":[{"id":35868,"name":"seed","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The seed used for this random number generator.\\nIf null then an unpredictable seed was used."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1970,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1970"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"id":35869,"name":"random","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1975,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1975"},{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1982,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1982"}],"signatures":[{"id":35870,"name":"random","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random number between 0 and 1."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1975,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1975"}],"type":{"type":"intrinsic","name":"number"}},{"id":35871,"name":"random","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random decimal number between the given min and max values."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1982,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1982"}],"parameters":[{"id":35872,"name":"min","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The minimum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":35873,"name":"max","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}]},{"id":35874,"name":"randomInt","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1989,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1989"}],"signatures":[{"id":35875,"name":"randomInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random integer between the given min and max values."}],"blockTags":[]},"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1989,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1989"}],"parameters":[{"id":35876,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The minimum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}},{"id":35877,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The maximum output number."}],"blockTags":[]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}]}],"groups":[{"title":"Properties","children":[35868]},{"title":"Methods","children":[35869,35874]}],"sources":[{"fileName":"src/aux-runtime/runtime/AuxLibrary.ts","line":1965,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-runtime/runtime/AuxLibrary.ts#L1965"}]},"comment":{"text":"Defines an interface for a random number generator.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"PseudoRandomNumberGenerator"}]},"group":null},{"id":37199,"order":9999,"name":"RegisterPrefixOptions","reflection":{"id":37199,"name":"RegisterPrefixOptions","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an interface that contains options for register prefix actions."}],"blockTags":[{"tag":"@dochash","content":[{"kind":"text","text":"types/core"}]},{"tag":"@docname","content":[{"kind":"text","text":"RegisterPrefixOptions"}]}]},"children":[{"id":37200,"name":"language","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The possible languages that prefixes can use."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":2368,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/BotEvents.ts#L2368"}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"javascript"},{"type":"literal","value":"typescript"},{"type":"literal","value":"json"},{"type":"literal","value":"jsx"},{"type":"literal","value":"tsx"}]}},{"id":37201,"name":"name","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the prefix."}],"blockTags":[]},"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":2373,"character":4,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/BotEvents.ts#L2373"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[37200,37201]}],"sources":[{"fileName":"src/aux-common/bots/BotEvents.ts","line":2364,"character":17,"url":"https://github.com/casual-simulation/casualos/blob/61a8066b8/src/aux-common/bots/BotEvents.ts#L2364"}]},"comment":{"text":"Defines an interface that contains options for register prefix actions.","tags":[{"tagName":"dochash","text":"types/core"},{"tagName":"docname","text":"RegisterPrefixOptions"}]},"group":null}],"references":{"CasualOSError":"types/error","id-38765":"CasualOSError","Quaternion":"types/math/rotations","id-135":"Quaternion","Rotation":"types/math/rotations","id-167":"Rotation","Vector2":"types/math/vectors","id-1":"Vector2","Vector3":"types/math/vectors","id-58":"Vector3","AIChatMessage":"types/ai","id-38802":"AIChatMessage","AIChatOptions":"types/ai","id-37763":"AIChatOptions","AIDataContent":"types/ai","id-38811":"AIDataContent","AIGenerateImageSuccess":"types/ai","id-35506":"AIGenerateImageSuccess","AIGenerateImageOptions":"types/ai","id-37803":"AIGenerateImageOptions","AIGenerateSkyboxAction":"types/ai","id-37770":"AIGenerateSkyboxAction","AIGenerateSkyboxBlockadeLabsOptions":"types/ai","id-37781":"AIGenerateSkyboxBlockadeLabsOptions","AIGenerateSkyboxOptions":"types/ai","id-37778":"AIGenerateSkyboxOptions","AIGenerateSkyboxRequest":"types/ai","id-35499":"AIGenerateSkyboxRequest","AIGenerateSkyboxResult":"types/ai","id-35503":"AIGenerateSkyboxResult","AIGeneratedImage":"types/ai","id-35509":"AIGeneratedImage","AITextContent":"types/ai","id-38809":"AITextContent","AIUrlContent":"types/ai","id-38814":"AIUrlContent","ARSupportedAction":"types/os/xr","id-37079":"ARSupportedAction","AddCountFailure":"types/records/events","id-40822":"AddCountFailure","AddCountSuccess":"types/records/events","id-40817":"AddCountSuccess","AddDropSnapAction":"types/os/portals","id-37212":"AddDropSnapAction","AddDropSnapPointsAction":"types/os/portals","id-37216":"AddDropSnapPointsAction","AnalyticsRecordEventAction":"types/os/portals","id-37566":"AnalyticsRecordEventAction","AnimateTagOptions":"types/animation","id-35514":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-35807":"AttachDebuggerOptions","AuthData":"types/os/records","id-37387":"AuthData","DebuggerOptions":"types/debuggers/common","id-35823":"DebuggerOptions","CasualOSDevice":"types/os/system","id-38733":"CasualOSDevice","CasualOSVersion":"types/os/system","id-38725":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-213":"AxisAndAngle","BeginRecordingAction":"types/os/audio","id-37291":"BeginRecordingAction","BotIntersection":"types/os/portals","id-36016":"BotIntersection","BotTagMasks":"types/core","id-38349":"BotTagMasks","BotTags":"types/core","id-38352":"BotTags","BotState":"types/core","id-38427":"BotState","BufferFormAddressGLTFAction":"types/os/portals","id-37479":"BufferFormAddressGLTFAction","BufferSoundAction":"types/os/audio","id-36927":"BufferSoundAction","CalculateRayFromCameraAction":"types/os/portals","id-37451":"CalculateRayFromCameraAction","CalculateScreenCoordinatesFromViewportCoordinatesAction":"types/os/portals","id-37465":"CalculateScreenCoordinatesFromViewportCoordinatesAction","CalculateViewportCoordinatesFromPositionAction":"types/os/portals","id-37458":"CalculateViewportCoordinatesFromPositionAction","CalculateViewportCoordinatesFromScreenCoordinatesAction":"types/os/portals","id-37472":"CalculateViewportCoordinatesFromScreenCoordinatesAction","CancelSoundAction":"types/os/audio","id-36933":"CancelSoundAction","CompiledBotListeners":"types/core","id-38302":"CompiledBotListeners","CompiledBotModules":"types/core","id-38308":"CompiledBotModules","ConfigureWakeLockAction":"types/os/portals","id-37553":"ConfigureWakeLockAction","ConvertGeolocationToWhat3WordsAction":"types/os/geolocation","id-37413":"ConvertGeolocationToWhat3WordsAction","ConvertGeolocationToWhat3WordsOptions":"types/os/geolocation","id-37409":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-39801":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-39797":"CreatePublicRecordKeySuccess","DataPermission":"types/permissions","id-305":"DataPermission","DebuggerCallFrame":"types/debuggers/common","id-35847":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-35855":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-35841":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-35801":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-35796":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-35861":"DebuggerVariable","DefineGlobalBotAction":"types/os/portals","id-37401":"DefineGlobalBotAction","DownloadAction":"types/os/files","id-36939":"DownloadAction","Easing":"types/animation","id-37029":"Easing","EnableARAction":"types/os/xr","id-37075":"EnableARAction","EnableCollaborationAction":"types/os/spaces","id-37006":"EnableCollaborationAction","EnableCustomDraggingAction":"types/os/portals","id-37267":"EnableCustomDraggingAction","EnablePOVAction":"types/os/portals","id-37093":"EnablePOVAction","EnableVRAction":"types/os/xr","id-37089":"EnableVRAction","EnableXROptions":"types/os/xr","id-37073":"EnableXROptions","EndRecordingAction":"types/os/audio","id-37303":"EndRecordingAction","EraseDataFailure":"types/records/data","id-40328":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-40324":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-40509":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-40505":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-216":"EulerAnglesRotation","EventPermission":"types/permissions","id-405":"EventPermission","ExitFullscreenAction":"types/os/portals","id-37108":"ExitFullscreenAction","FilePermission":"types/permissions","id-353":"FilePermission","FilePermissionOptions":"types/permissions","id-340":"FilePermissionOptions","FocusOnOptions":"types/os/camera","id-36643":"FocusOnOptions","FocusOnRotation":"types/os/camera","id-36655":"FocusOnRotation","FormAnimationData":"types/os/animations","id-37534":"FormAnimationData","FromToRotation":"types/math/rotations","id-210":"FromToRotation","GenericError":"types/error","id-38762":"GenericError","GetAverageFrameRateAction":"types/os/portals","id-37431":"GetAverageFrameRateAction","GetCountFailure":"types/records/events","id-40833":"GetCountFailure","GetCountSuccess":"types/records/events","id-40827":"GetCountSuccess","GetDataFailure":"types/records/data","id-40319":"GetDataFailure","GetDataSuccess":"types/records/data","id-40310":"GetDataSuccess","GetGeolocationAction":"types/os/geolocation","id-37344":"GetGeolocationAction","GetRoomOptionsFailure":"types/os/portals","id-35968":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os/portals","id-35964":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os/portals","id-36002":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os/portals","id-35997":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os/portals","id-35978":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os/portals","id-35973":"GetRoomTrackOptionsSuccess","GetVoicesAction":"types/os/audio","id-37335":"GetVoicesAction","GetWakeLockConfigurationAction":"types/os/portals","id-37559":"GetWakeLockConfigurationAction","GoToTagAction":"types/os/portals","id-37371":"GoToTagAction","GrantMarkerPermissionFailure":"types/records/policies","id-43950":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-43948":"GrantMarkerPermissionSuccess","GrantResourcePermissionFailure":"types/records/policies","id-43973":"GrantResourcePermissionFailure","GrantResourcePermissionSuccess":"types/records/policies","id-43971":"GrantResourcePermissionSuccess","GrantRoleFailure":"types/records/roles","id-44032":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-44030":"GrantRoleSuccess","HideHtmlAction":"types/os/portals","id-36639":"HideHtmlAction","HideTooltipAction":"types/os/portals","id-36628":"HideTooltipAction","HtmlAppEventAction":"types/os/portals","id-37164":"HtmlAppEventAction","HtmlAppMethodCallAction":"types/os/portals","id-37169":"HtmlAppMethodCallAction","ImageClassifierOptions":"types/os/image-classification","id-36765":"ImageClassifierOptions","InstPermission":"types/permissions","id-531":"InstPermission","InstUpdate":"types/os/spaces","id-38758":"InstUpdate","JoinRoomFailure":"types/os/portals","id-35940":"JoinRoomFailure","JoinRoomSuccess":"types/os/portals","id-35937":"JoinRoomSuccess","LeaveRoomFailure":"types/os/portals","id-35949":"LeaveRoomFailure","LeaveRoomSuccess":"types/os/portals","id-35946":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-40350":"ListDataFailure","ListDataSuccess":"types/records/data","id-40340":"ListDataSuccess","ListFormAnimationsAction":"types/os/animations","id-37528":"ListFormAnimationsAction","ListStudiosFailure":"types/records/studios","id-39844":"ListStudiosFailure","ListStudiosSuccess":"types/records/studios","id-39841":"ListStudiosSuccess","ListedData":"types/records/data","id-40346":"ListedData","MarkerPermission":"types/permissions","id-44162":"MarkerPermission","ResourcePermission":"types/permissions","id-44151":"ResourcePermission","ListedStudio":"types/records/studios","id-39848":"ListedStudio","LoadInstAction":"types/os/spaces","id-36805":"LoadInstAction","LoadSpaceAction":"types/os/spaces","id-36999":"LoadSpaceAction","LocalFormAnimationAction":"types/os/animations","id-37022":"LocalFormAnimationAction","LocalPositionTweenAction":"types/os/animations","id-37043":"LocalPositionTweenAction","LocalTweenAction":"types/os/animations","id-37058":"LocalTweenAction","LookRotation":"types/math/rotations","id-233":"LookRotation","MediaPermissionAction":"types/os/media","id-37424":"MediaPermissionAction","MediaPermissionOptions":"types/os/media","id-37421":"MediaPermissionOptions","MeetCommandAction":"types/os/meets","id-37308":"MeetCommandAction","MeetFunctionAction":"types/os/meets","id-37315":"MeetFunctionAction","NodeReference":"types/os/portals","id-37190":"NodeReference","Debugger":"types/debuggers/debugger","id-35621":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-35813":"NormalDebuggerOptions","OpenCircleWipeAction":"types/os/portals","id-37202":"OpenCircleWipeAction","OpenCircleWipeOptions":"types/os/portals","id-37209":"OpenCircleWipeOptions","OpenConsoleAction":"types/os/system","id-36739":"OpenConsoleAction","PhotoCameraOptions":"types/camera","id-36727":"PhotoCameraOptions","OpenURLAction":"types/os/portals","id-36916":"OpenURLAction","ParsedBotLink":"types/core","id-38293":"ParsedBotLink","PartialBotState":"types/core","id-38430":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-35677":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-35818":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-35833":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-35828":"PauseTriggerOptions","Photo":"types/camera","id-36723":"Photo","PlaySoundAction":"types/os/audio","id-36920":"PlaySoundAction","Point2D":"types/os/portals","id-37546":"Point2D","Point3D":"types/os/portals","id-37549":"Point3D","PossiblePauseTriggerLocation":"types/debuggers/common","id-35791":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-35867":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-226":"QuaternionRotation","RaycastFromCameraAction":"types/os/portals","id-37436":"RaycastFromCameraAction","RaycastInPortalAction":"types/os/portals","id-37443":"RaycastInPortalAction","RaycastRay":"types/os/portals","id-36025":"RaycastRay","RaycastResult":"types/os/portals","id-36013":"RaycastResult","RecordActionOptions":"types/records/extra","id-37816":"RecordActionOptions","RecordDataFailure":"types/records/data","id-40302":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-40298":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-35910":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-35906":"RecordFileSuccess","RecordFileRequest":"types/records/files","id-40477":"RecordFileRequest","RecordedFile":"types/experimental","id-37366":"RecordedFile","Recording":"types/experimental","id-37364":"Recording","RecordingOptions":"types/experimental","id-37283":"RecordingOptions","RegisterBuiltinPortalAction":"types/os/portals","id-37122":"RegisterBuiltinPortalAction","RegisterCustomAppAction":"types/os/portals","id-37128":"RegisterCustomAppAction","RegisterHtmlAppAction":"types/os/portals","id-37141":"RegisterHtmlAppAction","RegisterPrefixOptions":"types/core","id-37199":"RegisterPrefixOptions","RejectAction":"types/os/event","id-36966":"RejectAction","RemoteAction":"types/os/event","id-48354":"RemoteAction","ReportInstAction":"types/os/moderation","id-37376":"ReportInstAction","RequestAuthDataAction":"types/os/records","id-37381":"RequestAuthDataAction","RequestFullscreenAction":"types/os/portals","id-37106":"RequestFullscreenAction","RevokeMarkerPermissionFailure":"types/records/policies","id-43961":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-43959":"RevokeMarkerPermissionSuccess","RevokePermissionFailure":"types/records/policies","id-43995":"RevokePermissionFailure","RevokePermissionSuccess":"types/records/policies","id-43993":"RevokePermissionSuccess","RevokeResourcePermissionFailure":"types/records/policies","id-43984":"RevokeResourcePermissionFailure","RevokeResourcePermissionSuccess":"types/records/policies","id-43982":"RevokeResourcePermissionSuccess","RevokeRoleFailure":"types/records/roles","id-44043":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-44041":"RevokeRoleSuccess","RolePermission":"types/permissions","id-484":"RolePermission","RolePermissionOptions":"types/permissions","id-475":"RolePermissionOptions","RoomJoinOptions":"types/os/portals","id-38032":"RoomJoinOptions","RoomOptions":"types/os/portals","id-38028":"RoomOptions","RoomRemoteOptions":"types/os/portals","id-38087":"RoomRemoteOptions","RoomTrackOptions":"types/os/rooms","id-38065":"RoomTrackOptions","RunScriptAction":"types/os/system","id-36986":"RunScriptAction","RuntimeBot":"types/core","id-38244":"RuntimeBot","RuntimeBotLinks":"types/core","id-38296":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-38299":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-224":"SequenceRotation","SerializableMutationRecord":"types/os/portals","id-37178":"SerializableMutationRecord","SessionSelector":"types/os/event","id-35482":"SessionSelector","SetAppOutputAction":"types/os/portals","id-37153":"SetAppOutputAction","SetClipboardAction":"types/os/clipboard","id-36969":"SetClipboardAction","SetRoomOptionsFailure":"types/os/portals","id-35958":"SetRoomOptionsFailure","SetRoomOptionsSuccess":"types/os/portals","id-35955":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os/portals","id-38062":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os/portals","id-35990":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os/portals","id-35985":"SetRoomTrackOptionsSuccess","ShareAction":"types/os/input","id-37114":"ShareAction","ShareOptions":"types/os/input","id-37110":"ShareOptions","ShowChatBarAction":"types/os/input","id-36972":"ShowChatBarAction","ShowChatOptions":"types/os/input","id-36980":"ShowChatOptions","ShowConfirmAction":"types/os/input","id-36897":"ShowConfirmAction","ShowConfirmOptions":"types/os/input","id-36903":"ShowConfirmOptions","ShowHtmlAction":"types/os/portals","id-36634":"ShowHtmlAction","ShowInputItem":"types/os/input","id-36954":"ShowInputItem","ShowInputOptions":"types/os/input","id-36945":"ShowInputOptions","ShowJoinCodeAction":"types/os/barcodes","id-37102":"ShowJoinCodeAction","ShowToastAction":"types/os/portals","id-36614":"ShowToastAction","ShowTooltipAction":"types/os/portals","id-36619":"ShowTooltipAction","ShowUploadAuxFileAction":"types/os/input","id-36992":"ShowUploadAuxFileAction","ShowUploadFilesAction":"types/os/input","id-36994":"ShowUploadFilesAction","SnapAxis":"types/os/portals","id-37228":"SnapAxis","SnapGrid":"types/os/portals","id-37246":"SnapGrid","SnapGridTarget":"types/os/portals","id-35915":"SnapGridTarget","SnapPoint":"types/os/portals","id-37221":"SnapPoint","SpeakTextAction":"types/os/audio","id-37326":"SpeakTextAction","SpeakTextOptions":"types/experimental","id-35536":"SpeakTextOptions","StartFormAnimationAction":"types/os/animations","id-37498":"StartFormAnimationAction","StartFormAnimationOptions":"types/os/animations","id-37485":"StartFormAnimationOptions","StopFormAnimationAction":"types/os/animations","id-37520":"StopFormAnimationAction","StopFormAnimationOptions":"types/os/animations","id-37517":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os/geolocation","id-37350":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-37340":"SyntheticVoice","TweenOptions":"types/experimental","id-35540":"TweenOptions","UnloadInstAction":"types/os/spaces","id-36809":"UnloadInstAction","UnregisterCustomAppAction":"types/os/portals","id-37135":"UnregisterCustomAppAction","UnregisterHtmlAppAction":"types/os/portals","id-37148":"UnregisterHtmlAppAction","UnsuccessfulGeolocation":"types/os/geolocation","id-37360":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-40847":"UpdateEventRecordFailure","UpdateEventRecordRequest":"types/records/events","id-40837":"UpdateEventRecordRequest","UpdateEventRecordSuccess":"types/records/events","id-40845":"UpdateEventRecordSuccess","UpdateHtmlAppAction":"types/os/portals","id-37158":"UpdateHtmlAppAction","UploadedFile":"types/os/files","id-36028":"UploadedFile","VRSupportedAction":"types/os/xr","id-37084":"VRSupportedAction","WakeLockConfiguration":"types/os/portals","id-37564":"WakeLockConfiguration","WebhookOptions":"types/web","id-35487":"WebhookOptions","WebhookResult":"types/web","id-35898":"WebhookResult","AIChatContent":"types/ai","id-38808":"AIChatContent","ActionKinds":"types/permissions","id-261":"ActionKinds","AddCountResult":"types/records/events","id-40816":"AddCountResult","AvailablePermissions":"types/permissions","id-268":"AvailablePermissions","BarcodeFormat":"types/os/barcodes","id-36748":"BarcodeFormat","BotAction":"types/os/event","id-36551":"BotAction","BotAnchorPoint":"types/core","id-38456":"BotAnchorPoint","BotFilter":"types/core","id-35524":"BotFilter","BotSpace":"types/core","id-38339":"BotSpace","CameraPortal":"types/os/portals","id-37545":"CameraPortal","CameraType":"types/os/camera","id-36702":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-39796":"CreatePublicRecordKeyResult","DataActionKinds":"types/permissions","id-262":"DataActionKinds","EaseMode":"types/animation","id-37028":"EaseMode","EaseType":"types/animation","id-37027":"EaseType","EraseDataResult":"types/records/data","id-40323":"EraseDataResult","EraseFileResult":"types/records/files","id-40504":"EraseFileResult","EventActionKinds":"types/permissions","id-264":"EventActionKinds","FileActionKinds":"types/permissions","id-263":"FileActionKinds","Geolocation":"types/os/geolocation","id-37349":"Geolocation","GetCountResult":"types/records/events","id-40826":"GetCountResult","GetDataResult":"types/records/data","id-40309":"GetDataResult","GetRoomOptionsResult":"types/os/portals","id-35963":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os/portals","id-35996":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os/portals","id-35972":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-43947":"GrantMarkerPermissionResult","GrantResourcePermissionResult":"types/records/policies","id-43970":"GrantResourcePermissionResult","GrantRoleResult":"types/records/roles","id-44029":"GrantRoleResult","InstActionKinds":"types/permissions","id-267":"InstActionKinds","JoinRoomResult":"types/os/portals","id-35936":"JoinRoomResult","LeaveRoomResult":"types/os/portals","id-35945":"LeaveRoomResult","ListDataResult":"types/records/data","id-40339":"ListDataResult","ListStudiosResult":"types/records/studios","id-39840":"ListStudiosResult","MarkerActionKinds":"types/permissions","id-265":"MarkerActionKinds","Mod":"types/core","id-35481":"Mod","PortalType":"types/core","id-38342":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-35795":"PossiblePauseTriggerStates","PublicRecordKeyPolicy":"types/records/key","id-40141":"PublicRecordKeyPolicy","RecordDataResult":"types/records/data","id-40297":"RecordDataResult","RecordFileResult":"types/records/files","id-35905":"RecordFileResult","RecordUserPolicyType":"types/records/extra","id-37824":"RecordUserPolicyType","ResourceKinds":"types/permissions","id-245":"ResourceKinds","RevokeMarkerPermissionResult":"types/records/policies","id-43958":"RevokeMarkerPermissionResult","RevokeResourcePermissionResult":"types/records/policies","id-43981":"RevokeResourcePermissionResult","RevokeRoleResult":"types/records/roles","id-44040":"RevokeRoleResult","RoleActionKinds":"types/permissions","id-266":"RoleActionKinds","SetRoomOptionsResult":"types/os/portals","id-35954":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os/portals","id-35984":"SetRoomTrackOptionsResult","ShowInputSuptype":"types/os/input","id-36958":"ShowInputSuptype","ShowInputType":"types/os/input","id-36957":"ShowInputType","SnapTarget":"types/os/portals","id-37240":"SnapTarget","StudioAssignmentRole":"types/records/studios","id-40104":"StudioAssignmentRole","SubjectType":"types/permissions","id-238":"SubjectType","TagFilter":"types/core","id-35477":"TagFilter","TrackKind":"types/records/rooms","id-38077":"TrackKind","TrackSource":"types/records/rooms","id-38078":"TrackSource","TrackVideoQuality":"types/os/rooms","id-38079":"TrackVideoQuality","UpdateEventRecordResult":"types/records/events","id-40844":"UpdateEventRecordResult","UserPolicy":"types/records/data","id-40424":"UserPolicy","animateTag-byOptions":"actions/os/animations","id-1053":"animateTag-byOptions","getbot-tag":"actions/data","id-718":"getbot-tag","getbots-tag":"actions/data","id-702":"getbots-tag","animateTag-byTag":"actions/os/animations","id-1047":"animateTag-byTag","changeState":"actions/data","id-863":"changeState","create":"actions/data","id-847":"create","destroy":"actions/data","id-851":"destroy","getbot-filters":"actions/data","id-711":"getbot-filters","getbots-filters":"actions/data","id-695":"getbots-filters","priorityShout":"actions/os/event","id-912":"priorityShout","shout":"actions/os/event","id-925":"shout","updateBotLinks":"actions/data","id-885":"updateBotLinks","whisper":"actions/os/event","id-951":"whisper","action.perform":"actions/os/event","id-34978":"action.perform","action.reject":"actions/os/event","id-34982":"action.reject","ai.chat-string":"actions/ai","id-1112":"ai.chat-string","ai.chat-message":"actions/ai","id-1115":"ai.chat-message","ai.chat-messages":"actions/ai","id-1118":"ai.chat-messages","ai.generateImage-string":"actions/ai","id-1131":"ai.generateImage-string","ai.generateImage-request":"actions/ai","id-1135":"ai.generateImage-request","ai.generateSkybox-string":"actions/ai","id-1123":"ai.generateSkybox-string","ai.generateSkybox-request":"actions/ai","id-1127":"ai.generateSkybox-request","applyDiffToSnapshot":"actions/data","id-768":"applyDiffToSnapshot","applyMod":"actions/mods","id-837":"applyMod","assert":"actions/debuggers","id-1096":"assert","assertEqual":"actions/debuggers","id-1101":"assertEqual","atPosition":"actions/bot-filters","id-982":"atPosition","byCreator":"actions/bot-filters","id-1003":"byCreator","byID":"actions/bot-filters","id-970":"byID","byMod":"actions/bot-filters","id-974":"byMod","bySpace":"actions/bot-filters","id-999":"bySpace","byTag":"actions/bot-filters","id-965":"byTag","bytes.fromBase64String":"actions/bytes","id-35191":"bytes.fromBase64String","bytes.fromBase64Url":"actions/bytes","id-35208":"bytes.fromBase64Url","bytes.fromHexString":"actions/bytes","id-35199":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-35187":"bytes.toBase64String","bytes.toBase64Url":"actions/bytes","id-35203":"bytes.toBase64Url","bytes.toHexString":"actions/bytes","id-35195":"bytes.toHexString","clearAnimations":"actions/os/animations","id-1067":"clearAnimations","clearTagMasks":"actions/data","id-791":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-35214":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-35220":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-35251":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-35244":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-35309":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-35304":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-35315":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-35300":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-35296":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-35280":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-35270":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-35275":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-35290":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-35319":"crypto.keypair","crypto.sha256":"actions/crypto","id-35236":"crypto.sha256","crypto.sha512":"actions/crypto","id-35240":"crypto.sha512","crypto.sign":"actions/crypto","id-35323":"crypto.sign","deleteTagMaskText":"actions/data","id-818":"deleteTagMaskText","deleteTagText":"actions/data","id-811":"deleteTagText","diffSnapshots":"actions/data","id-763":"diffSnapshots","either":"actions/bot-filters","id-1007":"either","os.beginAudioRecording":"actions/os/audio","id-35025":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-35032":"experiment.beginRecording","os.endAudioRecording":"actions/os/audio","id-35029":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-35036":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-35015":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-35044":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-34988":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-34993":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-35004":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-35039":"experiment.speakText","getBotLinks":"actions/data","id-881":"getBotLinks","getBotPosition":"actions/data","id-737":"getBotPosition","getBotRotation":"actions/data","id-742":"getBotRotation","getBotTagValues":"actions/data","id-727":"getBotTagValues","getFormattedJSON":"actions/data","id-755":"getFormattedJSON","getID":"actions/data","id-747":"getID","getJSON":"actions/data","id-751":"getJSON","getLink":"actions/data","id-877":"getLink","getMod":"actions/mods","id-732":"getMod","getSnapshot":"actions/data","id-759":"getSnapshot","getTag":"actions/data","id-773":"getTag","inDimension":"actions/bot-filters","id-978":"inDimension","inStack":"actions/bot-filters","id-988":"inStack","insertTagMaskText":"actions/data","id-803":"insertTagMaskText","insertTagText":"actions/data","id-796":"insertTagText","math.abs":"actions/math","id-35061":"math.abs","math.addVectors":"actions/math","id-35131":"math.addVectors","math.areClose":"actions/math","id-35162":"math.areClose","math.avg":"actions/math","id-35053":"math.avg","math.degreesToRadians":"actions/math","id-35087":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-35127":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-35095":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-35069":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-35104":"math.intersectPlane","math.negateVector":"actions/math","id-35141":"math.negateVector","math.normalizeVector":"actions/math","id-35146":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-35091":"math.radiansToDegrees","math.random":"actions/math","id-35082":"math.random","math.randomInt":"actions/math","id-35077":"math.randomInt","math.scaleVector":"actions/math","id-35156":"math.scaleVector","math.setRandomSeed":"actions/math","id-35073":"math.setRandomSeed","math.sqrt":"actions/math","id-35057":"math.sqrt","math.stdDev":"actions/math","id-35065":"math.stdDev","math.subtractVectors":"actions/math","id-35136":"math.subtractVectors","math.sum":"actions/math","id-35049":"math.sum","math.vectorLength":"actions/math","id-35151":"math.vectorLength","neighboring":"actions/bot-filters","id-993":"neighboring","not":"actions/bot-filters","id-1014":"not","os.attachDebugger":"actions/debuggers","id-34934":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-34923":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-34927":"os.createDebugger-pausable","os.focusOn-bot":"actions/os/portals","id-1199":"os.focusOn-bot","os.focusOn-position":"actions/os/portals","id-1204":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-34931":"os.getExecutingDebugger","showChat-options":"actions/os/input","id-1226":"showChat-options","showChat-placeholder":"actions/os/input","id-1222":"showChat-placeholder","os.showInput":"actions/os/portals","id-1452":"os.showInput","os.addBotDropGrid":"actions/os/portals","id-1522":"os.addBotDropGrid","os.addBotDropSnap":"actions/os/portals","id-1513":"os.addBotDropSnap","os.addDropGrid":"actions/os/portals","id-1518":"os.addDropGrid","os.addDropSnap":"actions/os/portals","id-1509":"os.addDropSnap","os.applyUpdatesToInst":"actions/os/spaces","id-34886":"os.applyUpdatesToInst","os.arSupported":"actions/os/xr","id-1273":"os.arSupported","os.bufferFormAddressGLTF":"actions/os/animations","id-34836":"os.bufferFormAddressGLTF","os.bufferSound":"actions/os/audio","id-1485":"os.bufferSound","os.calculateRayFromCamera":"actions/os/portals","id-34816":"os.calculateRayFromCamera","os.calculateScreenCoordinatesFromViewportCoordinates":"actions/os/portals","id-34826":"os.calculateScreenCoordinatesFromViewportCoordinates","os.calculateViewportCoordinatesFromPosition":"actions/os/portals","id-34821":"os.calculateViewportCoordinatesFromPosition","os.calculateViewportCoordinatesFromScreenCoordinates":"actions/os/portals","id-34831":"os.calculateViewportCoordinatesFromScreenCoordinates","os.cancelSound":"actions/os/audio","id-1489":"os.cancelSound","os.capturePhoto":"actions/os/camera","id-1372":"os.capturePhoto","os.classifyImages":"actions/os/image-classification","id-1364":"os.classifyImages","os.closeBarcodeScanner":"actions/os/barcodes","id-1346":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/os/portals","id-1501":"os.closeCircleWipe","os.closeImageClassifier":"actions/os/image-classification","id-1361":"os.closeImageClassifier","os.closePhotoCamera":"actions/os/camera","id-1376":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/os/barcodes","id-1332":"os.closeQRCodeScanner","os.compileApp":"actions/os/app","id-1636":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os/geolocation","id-34801":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/os/records","id-34788":"os.countEvents","os.createInitializationUpdate":"actions/os/spaces","id-34882":"os.createInitializationUpdate","os.device":"actions/os/system","id-1244":"os.device","os.disableAR":"actions/os/xr","id-1263":"os.disableAR","os.disablePointOfView":"actions/os/portals","id-1288":"os.disablePointOfView","os.disableVR":"actions/os/xr","id-1270":"os.disableVR","os.disableWakeLock":"actions/os/portals","id-1294":"os.disableWakeLock","os.download":"actions/os/files","id-1300":"os.download","os.downloadBots":"actions/os/files","id-1306":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/os/files","id-1311":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/os/files","id-1319":"os.downloadInst","os.enableAR":"actions/os/xr","id-1259":"os.enableAR","os.enableCollaboration":"actions/os/spaces","id-1250":"os.enableCollaboration","os.enableCustomDragging":"actions/os/portals","id-1527":"os.enableCustomDragging","os.enablePointOfView":"actions/os/portals","id-1279":"os.enablePointOfView","os.enableVR":"actions/os/xr","id-1266":"os.enableVR","os.eraseData":"actions/os/records","id-34731":"os.eraseData","os.eraseFile-result":"actions/os/records","id-34772":"os.eraseFile-result","os.eraseFile-url":"actions/os/records","id-34776":"os.eraseFile-url","os.eraseManualApprovalData":"actions/os/records","id-34737":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/os/portals","id-1170":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os/portals","id-1584":"os.getAverageFrameRate","os.getCameraPosition":"actions/os/portals","id-1540":"os.getCameraPosition","os.getCameraRotation":"actions/os/portals","id-1544":"os.getCameraRotation","os.getCurrentDimension":"actions/os/portals","id-1423":"os.getCurrentDimension","os.getCurrentInst":"actions/os/portals","id-1429":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os/spaces","id-34890":"os.getCurrentInstUpdate","os.getData":"actions/os/records","id-34706":"os.getData","os.getDimensionalDepth":"actions/os/portals","id-1442":"os.getDimensionalDepth","os.getFile-result":"actions/os/records","id-34750":"os.getFile-result","os.getFile-url":"actions/os/records","id-34753":"os.getFile-url","os.getFocusPoint":"actions/os/portals","id-1552":"os.getFocusPoint","os.getGeolocation":"actions/os/geolocation","id-1534":"os.getGeolocation","os.getInputList":"actions/os/portals","id-1577":"os.getInputList","os.getInputState":"actions/os/portals","id-1572":"os.getInputState","os.getInstStateFromUpdates":"actions/os/spaces","id-34878":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/os/records","id-34712":"os.getManualApprovalData","os.getMediaPermission":"actions/os/media","id-1580":"os.getMediaPermission","os.getMenuDimension":"actions/os/portals","id-1432":"os.getMenuDimension","os.getMiniPortalDimension":"actions/os/portals","id-1435":"os.getMiniPortalDimension","os.getPointerDirection":"actions/os/portals","id-1568":"os.getPointerDirection","os.getPointerPosition":"actions/os/portals","id-1556":"os.getPointerPosition","os.getPointerRotation":"actions/os/portals","id-1560":"os.getPointerRotation","os.getPortalDimension":"actions/os/portals","id-1438":"os.getPortalDimension","os.getPrivateFile-result":"actions/os/records","id-34764":"os.getPrivateFile-result","os.getPrivateFile-url":"actions/os/records","id-34767":"os.getPrivateFile-url","os.getPublicFile-result":"actions/os/records","id-34758":"os.getPublicFile-result","os.getPublicFile-url":"actions/os/records","id-34760":"os.getPublicFile-url","os.getPublicRecordKey":"actions/os/records","id-34633":"os.getPublicRecordKey","os.getRecordsEndpoint":"actions/os/records","id-34798":"os.getRecordsEndpoint","os.getRoomOptions":"actions/os/rooms","id-1602":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/os/rooms","id-1617":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/os/rooms","id-1606":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/os/records","id-34637":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os/portals","id-1297":"os.getWakeLockConfiguration","os.goToDimension":"actions/os/portals","id-1466":"os.goToDimension","os.goToURL":"actions/os/portals","id-1470":"os.goToURL","os.grantInstAdminPermission":"actions/os/records","id-34653":"os.grantInstAdminPermission","os.grantInstRole":"actions/os/records","id-34673":"os.grantInstRole","os.grantPermission":"actions/os/records","id-34641":"os.grantPermission","os.grantUserRole":"actions/os/records","id-34658":"os.grantUserRole","os.hasBotInMiniPortal":"actions/os/portals","id-1493":"os.hasBotInMiniPortal","os.hideBarcode":"actions/os/barcodes","id-1354":"os.hideBarcode","os.hideChat":"actions/os/input","id-1234":"os.hideChat","os.hideHtml":"actions/os/portals","id-1177":"os.hideHtml","os.hideQRCode":"actions/os/barcodes","id-1339":"os.hideQRCode","os.hideTips":"actions/os/portals","id-1158":"os.hideTips","os.importAUX":"actions/os/files","id-1407":"os.importAUX","os.inSheet":"actions/os/portals","id-1537":"os.inSheet","os.isCollaborative":"actions/os/spaces","id-1247":"os.isCollaborative","os.isInDimension":"actions/os/portals","id-1419":"os.isInDimension","os.isRecordKey":"actions/os/records","id-34688":"os.isRecordKey","os.joinRoom":"actions/os/rooms","id-1587":"os.joinRoom","os.ldrawCountTextBuildSteps":"actions/os/ldraw","id-34855":"os.ldrawCountTextBuildSteps","os.leaveRoom":"actions/os/rooms","id-1592":"os.leaveRoom","os.listBuiltinTags":"actions/os/app","id-34621":"os.listBuiltinTags","os.listData":"actions/os/records","id-34718":"os.listData","os.listDataByMarker":"actions/os/records","id-34724":"os.listDataByMarker","os.listFormAnimations":"actions/os/animations","id-34851":"os.listFormAnimations","os.listInstUpdates":"actions/os/spaces","id-34875":"os.listInstUpdates","os.listUserStudios":"actions/os/records","id-34794":"os.listUserStudios","os.loadInst":"actions/os/spaces","id-1399":"os.loadInst","os.log":"actions/os/system","id-1530":"os.log","os.meetCommand":"actions/os/meets","id-34911":"os.meetCommand","os.meetFunction":"actions/os/meets","id-34916":"os.meetFunction","os.mergeInstUpdates":"actions/os/spaces","id-34893":"os.mergeInstUpdates","os.openBarcodeScanner":"actions/os/barcodes","id-1342":"os.openBarcodeScanner","os.openCircleWipe":"actions/os/portals","id-1505":"os.openCircleWipe","os.openDevConsole":"actions/os/system","id-1478":"os.openDevConsole","os.openImageClassifier":"actions/os/image-classification","id-1357":"os.openImageClassifier","os.openPhotoCamera":"actions/os/camera","id-1368":"os.openPhotoCamera","os.openQRCodeScanner":"actions/os/barcodes","id-1328":"os.openQRCodeScanner","os.openURL":"actions/os/portals","id-1474":"os.openURL","os.parseBotsFromData":"actions/os/files","id-1411":"os.parseBotsFromData","os.playSound":"actions/os/audio","id-1481":"os.playSound","os.raycast":"actions/os/portals","id-34810":"os.raycast","os.raycastFromCamera":"actions/os/portals","id-34805":"os.raycastFromCamera","os.recordData":"actions/os/records","id-34692":"os.recordData","os.recordEvent":"actions/os/records","id-34782":"os.recordEvent","os.recordFile":"actions/os/records","id-34743":"os.recordFile","os.recordManualApprovalData":"actions/os/records","id-34699":"os.recordManualApprovalData","os.registerApp":"actions/os/app","id-1627":"os.registerApp","os.registerTagPrefix":"actions/os/app","id-1622":"os.registerTagPrefix","os.remoteCount":"actions/os/remotes","id-34897":"os.remoteCount","os.remotes":"actions/os/remotes","id-34872":"os.remotes","os.replaceDragBot":"actions/os/portals","id-1415":"os.replaceDragBot","os.reportInst":"actions/os/moderation","id-34624":"os.reportInst","os.requestAuthBot":"actions/os/records","id-34627":"os.requestAuthBot","os.requestAuthBotInBackground":"actions/os/records","id-34630":"os.requestAuthBotInBackground","os.requestFullscreenMode":"actions/os/portals","id-1167":"os.requestFullscreenMode","os.requestWakeLock":"actions/os/portals","id-1291":"os.requestWakeLock","os.revokeInstRole":"actions/os/records","id-34681":"os.revokeInstRole","os.revokePermission":"actions/os/records","id-34647":"os.revokePermission","os.revokeUserRole":"actions/os/records","id-34666":"os.revokeUserRole","os.run":"actions/os/system","id-1237":"os.run","os.setClipboard":"actions/os/clipboard","id-1180":"os.setClipboard","os.setRoomOptions":"actions/os/rooms","id-1597":"os.setRoomOptions","os.setRoomTrackOptions":"actions/os/rooms","id-1611":"os.setRoomTrackOptions","os.share":"actions/os/input","id-1497":"os.share","os.showAccountInfo":"actions/os/system","id-1253":"os.showAccountInfo","os.showBarcode":"actions/os/barcodes","id-1349":"os.showBarcode","os.showConfirm":"actions/os/portals","id-1462":"os.showConfirm","os.showHtml":"actions/os/portals","id-1173":"os.showHtml","os.showInputForTag":"actions/os/portals","id-1446":"os.showInputForTag","os.showJoinCode":"actions/os/barcodes","id-1162":"os.showJoinCode","os.showQRCode":"actions/os/barcodes","id-1335":"os.showQRCode","os.showUploadAuxFile":"actions/os/files","id-1322":"os.showUploadAuxFile","os.showUploadFiles":"actions/os/files","id-1325":"os.showUploadFiles","os.sleep":"actions/os/system","id-1142":"os.sleep","os.startFormAnimation":"actions/os/animations","id-34840":"os.startFormAnimation","os.stopFormAnimation":"actions/os/animations","id-34846":"os.stopFormAnimation","os.tip":"actions/os/portals","id-1151":"os.tip","os.toast":"actions/os/portals","id-1146":"os.toast","os.totalRemoteCount":"actions/os/remotes","id-34901":"os.totalRemoteCount","os.unloadInst":"actions/os/spaces","id-1403":"os.unloadInst","os.unregisterApp":"actions/os/app","id-1632":"os.unregisterApp","os.version":"actions/os/system","id-1241":"os.version","os.vrSupported":"actions/os/xr","id-1276":"os.vrSupported","os.agreedUponTime":"actions/os/time","id-1380":"os.agreedUponTime","os.deadReckoningTime":"actions/os/time","id-1388":"os.deadReckoningTime","os.instLatency":"actions/os/time","id-1382":"os.instLatency","os.instTimeOffset":"actions/os/time","id-1384":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/os/time","id-1386":"os.instTimeOffsetSpread","os.localTime":"actions/os/time","id-1378":"os.localTime","remote":"actions/os/event","id-1021":"remote","sendRemoteData":"actions/os/event","id-1033":"sendRemoteData","removeTags":"actions/data","id-826":"removeTags","renameTag":"actions/data","id-831":"renameTag","setTag":"actions/data","id-778":"setTag","setTagMask":"actions/data","id-784":"setTagMask","subtractMods":"actions/mods","id-842":"subtractMods","superShout":"actions/os/event","id-907":"superShout","uuid":"actions/data","id-1044":"uuid","web.get":"actions/web","id-35342":"web.get","web.hook":"actions/web","id-35353":"web.hook","web.post":"actions/web","id-35347":"web.post","configBot":"actions/os/system","id-1107":"configBot"}}');var n=o(1601);o(5058),o(6967);const r={id:"core",title:"Core Types",sidebar_label:"Core",description:"Documentation for core types that are used throughout CasualOS."},c=void 0,l={id:"types/core",title:"Core Types",description:"Documentation for core types that are used throughout CasualOS.",source:"@site/docs/types/core.mdx",sourceDirName:"types",slug:"/types/core",permalink:"/types/core",draft:!1,unlisted:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/types/core.mdx",tags:[],version:"current",frontMatter:{id:"core",title:"Core Types",sidebar_label:"Core",description:"Documentation for core types that are used throughout CasualOS."},sidebar:"docs",previous:{title:"AI",permalink:"/types/ai"},next:{title:"Common",permalink:"/types/debuggers/common"}},d={},m=[...(0,n.KO)(i)];function p(e){return(0,s.jsx)(n.hl,{doc:i})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p()}},1601:(e,t,o)=>{o.d(t,{hl:()=>F,KO:()=>P});var s=o(79),a=o(5058),i=o(6144),n=o(8405),r=o(1888),c=o(5250);class l extends s.Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,t){const o="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw o;console.error(o)}render(){return this.state.hasError?(0,c.jsxs)("h1",{children:["[",this.props.reflection.name,"] ",this.state.error]}):this.props.children}}var d=o(1537),m=o(6967),p=o(7544),u=o(3324),g=o(5834),y=o(1623);function h(e){void 0===e&&(e={});const t=e.references;return e=>{(0,g.Vn)(e,"link",(e=>{if(e.url.startsWith("tags:")){const t=e.url.slice(5);t.startsWith("@")?e.url=(0,d.Z)("tags/listen")+f(t.slice(1)):e.url=(0,d.Z)(y.L0[t])+f(t)}else if(e.url.startsWith("ref:")){const o=e.url.slice(4),s=t[o];e.url=(0,d.Z)(s)+"#"+o}else if(e.url.startsWith("glossary:")){const t=e.url.slice(9);e.url=(0,d.Z)("glossary")+"#"+b(t)}else if(e.url.startsWith("page:")){const[t,o]=e.url.slice(5).split("#");e.url=(0,d.Z)(t)+"#"+o}}))}}function f(e){return"#"+b(e)}function b(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function x(e){return void 0===e&&(e={}),e=>{e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}const k={Project:1,Module:2,Namespace:4,Enum:8,EnumMember:16,Variable:32,Function:64,Class:128,Interface:256,Constructor:512,Property:1024,Method:2048,CallSignature:4096,IndexSignature:8192,ConstructorSignature:16384,Parameter:32768,TypeLiteral:65536,TypeParameter:131072,Accessor:262144,GetSignature:524288,SetSignature:1048576,TypeAlias:2097152,Reference:4194304};console.log("ReflectionKind",k);const R=new Map([[k.Property,["type"]],["reflection",["declaration"]],[k.TypeLiteral,["children","signatures"]],[k.CallSignature,["parameters","comment","type"]]]);function v(e,t,o){void 0===o&&(o=null),function(e,t,o){var s;void 0===o&&(o=null);let a=R.get(null!=(s=e.kind)?s:e.type)||[];for(let i of a){let s=e[i];if(Array.isArray(s))for(let e of s)e&&t(e,o,i);else s&&t(s,o,i)}}(e,((e,o,s)=>{t(e,o,s),v(e,t,e)}))}function A(e,t){let o=[];return t(e)&&o.push(e),v(e,((e,s,a)=>{t(e,s,a)&&o.push(e)})),o}const S=["first","second","third","fourth","fifth"];function T(e,t){return e.name+"-"+t.name}function B(e,t){const o=T(e,t);let s;var a;return s=t.kind===k.Constructor?$(t.signatures[0],xe(t)):t.kind===k.Method?$(t.signatures[0]):t.kind===k.Accessor?(a=t).name+": "+le(a.getSignature.type):ae(t),s="<span>"+s+"</span>",{value:s,id:o,level:3}}function C(e){let t=[],{properties:o,constructors:s,methods:a}=function(e){let t=[],o=[],s=[];if(!e)return{properties:t,constructors:o,methods:s};for(let a of e)a.flags.isPrivate||(a.kind===k.Property||a.kind===k.Accessor?t.push(a):a.kind===k.Constructor?o.push(a):a.kind===k.Method&&s.push(a));return{properties:t,constructors:o,methods:s}}(e.children);return o.length>0&&t.push(...o.map((t=>B(e,t)))),s.length>0&&t.push(...s.map((t=>B(e,t)))),a.length>0&&t.push(...a.map((t=>B(e,t)))),t}function P(e){let t=[{value:e.pageTitle,id:"",level:2}];for(let o of e.contents)if(o.reflection.kind===k.Interface||o.reflection.kind===k.Class){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2}),o.reflection.kind===k.Class&&t.push(...C(o.reflection))}else if(o.reflection.kind===k.CallSignature){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:"<span>"+$(o.reflection,e)+"</span>",id:s,level:2})}else if(o.reflection.kind===k.TypeAlias){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}else if(o.reflection.kind===k.GetSignature||o.reflection.kind===k.SetSignature){const e=xe(o.reflection),s=ke(o.reflection);t.push({value:"<code>"+$(o.reflection,e)+"</code>",id:s,level:2})}else{const e=xe(o.reflection),s=ke(o.reflection);t.push({value:e,id:s,level:2})}return t}function F(e){let{doc:t}=e;const o=t.contents,s=t.references;return(0,c.jsx)("ul",{className:"api api-list",children:o.map((e=>(0,c.jsx)("li",{className:"api-member-item",children:(0,c.jsx)(j,{reflection:e.reflection,references:s})},e.id)))})}function j(e){let{reflection:t,references:o}=e;return t.kind===k.Interface||t.kind===k.Class?(0,c.jsx)(w,{reflection:t,references:o}):t.kind===k.CallSignature||t.kind===k.GetSignature||t.kind===k.SetSignature?(0,c.jsx)(G,{reflection:t,references:o}):t.kind===k.TypeAlias?(0,c.jsx)(O,{reflection:t,references:o}):(0,c.jsx)(I,{reflection:t,references:o})}function O(e){let{reflection:t,references:o}=e;const s=xe(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:i,children:s}),(0,c.jsx)(E,{reflection:t,references:o}),(0,c.jsx)(D,{reflection:t,name:s,references:o}),(0,c.jsx)(te,{member:t})]})}function D(e){let{reflection:t,name:o,references:s}=e,a="";return"union"===t.type.type&&(a=(0,c.jsx)(L,{type:t.type,name:o,references:s})),a}function L(e){let{type:t,name:o,references:s}=e;return(0,c.jsxs)("div",{children:[(0,c.jsxs)("p",{children:["A ",o," can be one of the following values:"]}),(0,c.jsx)("ul",{children:t.types.map(((e,t)=>(0,c.jsx)(N,{type:e,references:s},t)))})]})}function N(e){let{type:t,references:o}=e;return(0,c.jsx)("li",{children:(0,c.jsx)("code",{children:(0,c.jsx)(ce,{type:t,references:o})})})}function w(e){let{reflection:t,references:o}=e;const s=xe(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:i,children:s}),(0,c.jsx)(M,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function I(e){let{reflection:t,references:o}=e;const s=xe(t),i=ke(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h2",id:i,children:s}),(0,c.jsx)(W,{reflection:t,references:o}),(0,c.jsx)(te,{member:t})]})}function G(e){let{reflection:t,references:o}=e;const s=xe(t),a=ke(t);return(0,c.jsx)("div",{children:(0,c.jsx)(H,{func:t,sig:t,name:s,link:a,references:o})})}function M(e){var t;const o=e.reflection;if(!o)throw new Error("Unable to find "+e.name+"!");const s=function(e){return(0,r.sortBy)(e,(e=>e.kind===k.Property||e.kind===k.Accessor?0:e.kind===k.Constructor?1:2)).filter((e=>!e.flags.isPrivate))}(null!=(t=o.children)?t:[]);return(0,c.jsx)(l,{reflection:o,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:o,references:e.references}),(0,c.jsx)(a.Z,{as:"h3",id:o.name+"-properties",children:"Members"}),(0,c.jsx)("div",{children:(0,c.jsxs)("ul",{className:"class-members-list",children:[o.indexSignature?(0,c.jsx)(U,{reflection:o,index:o.indexSignature,references:e.references}):"",o.references?(0,c.jsx)(_,{prop:o,references:e.references}):"",s.map((t=>(0,c.jsx)(V,{member:t,link:T(o,t),references:e.references},t.name)))]})})]})})}function U(e){let{reflection:t,index:o,references:s}=e;const i=o.parameters[0];return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:t.name+"-_index",children:"Index Signature"}),(0,c.jsx)(E,{reflection:o,references:s}),(0,c.jsx)("pre",{children:(0,c.jsxs)("code",{children:["[",i.name,": ",(0,c.jsx)(ce,{type:i.type,references:s}),"]: ",(0,c.jsx)(ce,{type:o.type,references:s})]})}),(0,c.jsx)(te,{member:o})]})}function E(e){let{reflection:t,references:o}=e;return(0,c.jsx)("div",{children:(0,c.jsx)(z,{comment:t.comment,references:o})})}function V(e){let t;return t=e.member.kind===k.Property?function(e){let t,o=e.member,s="";o.references?(s=(0,c.jsx)(q,{prop:o,references:e.references}),t=(0,c.jsx)(c.Fragment,{children:o.typeReference})):"reflection"===o.type.type&&o.typeText&&o.typeReference?(t=(0,c.jsx)(c.Fragment,{children:o.typeReference}),s=(0,c.jsx)(i.Z,{language:"typescript",children:o.typeText})):t=(0,c.jsx)(ce,{type:e.member.type,references:e.references});!s&&o.typeText&&o.typeReference&&(s=(0,c.jsx)(i.Z,{language:"typescript",children:o.typeText}));const n=xe(o);ke(o);return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsxs)("span",{className:"class-member-name",children:[n,e.member.flags.isOptional?(0,c.jsx)("span",{className:"class-member-optional",children:"?"}):""]})," ",(0,c.jsx)("span",{className:"class-member-type",children:t})]}),(0,c.jsx)(E,{reflection:e.member,references:e.references}),s]})}(e):e.member.kind===k.Constructor?function(e){const t=xe(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(H,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Method?function(e){const t=xe(e.member);return(0,c.jsx)("div",{children:(0,c.jsx)(H,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references})})}(e):e.member.kind===k.Accessor?function(e){var t;return(0,c.jsxs)("div",{className:"class-member-property",children:[(0,c.jsxs)(a.Z,{as:"h4",id:e.link,children:[(0,c.jsx)("span",{className:"class-member-name",children:e.member.name})," ",(0,c.jsx)("span",{className:"class-member-type",children:(0,c.jsx)(ce,{type:e.member.getSignature.type,references:e.references})})]}),(0,c.jsx)("p",{children:null==(t=e.member.getSignature.comment)?void 0:t.text})]})}(e):"Kind not found "+e.member.kind,(0,c.jsxs)(l,{reflection:e.member,children:[(0,c.jsx)("span",{role:"separator",className:"class-member-separator"}),(0,c.jsx)("li",{className:"class-member-item",children:t})]})}function _(e){let{prop:t,references:o}=e;const s=ke(t);return(0,c.jsxs)("li",{className:"class-member-item",children:[(0,c.jsx)(a.Z,{as:"h4",id:s+"-extra-functions",children:"Extra Functions"}),(0,c.jsx)("p",{children:"The extra functions that are available on this type."}),(0,c.jsxs)(n.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})]})}function q(e){let{prop:t,references:o}=e;return(0,c.jsxs)(n.Z,{children:[(0,c.jsx)("p",{children:"See the following functions for more information:"}),(0,c.jsx)(Q,{children:t.references,references:o})]})}function W(e){const t=e.reflection,o=(t.type.declaration,Ce(t));return(0,c.jsx)(l,{reflection:t,root:!0,children:(0,c.jsxs)("div",{className:"api",children:[(0,c.jsx)(E,{reflection:t,references:e.references}),o.map((t=>(0,c.jsx)(K,{group:t,references:e.references},t.group)))]})})}function K(e){let{group:t,references:o}=e;const s=t.children,i=Te(t);return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:t.group,children:i}),s.map((e=>(0,c.jsx)(J,{namespace:e.namespace,name:e.name,property:e.child,link:T(e.reflection,e.child),references:o},e.child.id)))]})}function J(e){let t;if(me(e.property)){var o;const s=e.namespace?e.namespace+"."+e.name:e.name,a=e.property.type.declaration;t=H({name:s,func:e.property,sig:null!=(o=ve(a.signatures))?o:a.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){const o=e.namespace?e.namespace+"."+e.name:e.name,s=Ae(e.property);t=H({name:o,func:e.property,sig:s,link:e.link,references:e.references})}else t=ye(e.property)?(0,c.jsxs)(c.Fragment,{children:["This is really fun! ",e.property.name]}):e.property.kind===k.Property?function(e){return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h3",id:e.link,children:(0,c.jsxs)("code",{children:[e.property.name,": ",(0,c.jsx)(ce,{type:e.property.type,references:e.references})]})}),(0,c.jsx)(E,{reflection:e.property,references:e.references})]})}(e):"Kind Not found "+e.property.kind;return(0,c.jsx)(l,{reflection:e.property,children:(0,c.jsx)("div",{children:t})})}function H(e){let{func:t,sig:o,link:s,name:i,references:n}=e;const r=o.parameters||[];return(0,c.jsxs)("div",{children:[(0,c.jsx)(a.Z,{as:"h4",id:s,children:(0,c.jsx)(Y,{func:t,sig:o,name:i,references:n})}),(0,c.jsx)(Z,{sig:o,references:n}),r.length>0?(0,c.jsx)("div",{children:r.map(((e,t)=>(0,c.jsx)(ee,{param:e,index:t,references:n},e.name)))}):"",(0,c.jsx)(te,{member:o})]})}function Z(e){let{sig:t,references:o}=e;return(0,c.jsx)(z,{comment:t.comment,references:o})}function z(e){let{comment:t,references:o}=e;return(0,c.jsx)(Q,{references:o,children:X(t)})}function Q(e){let{children:t,remarkPlugins:o,rehypePlugins:s,references:a}=e;return(0,c.jsx)(p.U,{remarkPlugins:[[h,{references:a}],...o||[]],rehypePlugins:[u.Z,...s||[]],children:t})}function X(e){let t="";if(e&&e.summary)for(let o of e.summary)t+=o.text;return t}function Y(e){let{func:t,sig:o,name:s,references:a}=e;const i=o.parameters||[];let n="";return t.kind!==k.GetSignature&&(n=(0,c.jsxs)(c.Fragment,{children:["(",i.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",(0,c.jsx)(ce,{type:e.type,references:a})]},e.name))),")"]})),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("span",{className:"function-member-name",children:[(t.flags.isStatic?"static ":"")+(s||o.name),n]}),": ",(0,c.jsx)("span",{className:"function-member-type",children:(0,c.jsx)(ce,{type:o.type,references:a})})]})}function $(e,t){void 0===t&&(t=e.name);const o=e.parameters||[];let s="";return e.kind!==k.GetSignature&&(s="("+o.map(((e,t)=>(e.flags.isRest?"...":"")+e.name)).join(", ")+")"),""+t+s+": "+le(e.type)}function ee(e){let t,{param:o,index:s,references:a}=e;return t=o.flags.isRest&&o.type.elementType?0===s?(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:a})," and are ",(0,c.jsx)(ie,{param:o,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:[(0,c.jsx)("em",{children:"Each other parameter"})," is a ",(0,c.jsx)(ce,{type:o.type.elementType,references:a})," and are ",(0,c.jsx)(ie,{param:o,isRest:!0,references:a})]}):(0,c.jsxs)("p",{children:["The ",(0,c.jsxs)("em",{children:[se(s)," parameter"]})," is",o.flags.isOptional?" optional and is":""," a ",(0,c.jsx)(ce,{type:o.type,references:a})," and ",(0,c.jsx)(ie,{param:o,references:a})]}),t}function te(e){var t;let{member:o}=e;if(null==(t=o.comment)||!t.blockTags)return"";const s=o.comment.blockTags.filter((e=>"@example"===e.tag));return s.length>0?(0,c.jsxs)("div",{children:[(0,c.jsx)("h5",{className:"examples-heading",children:"Examples"}),s.map(((e,t)=>(0,c.jsx)(oe,{example:e},t)))]}):""}function oe(e){let{example:t}=e;const o=t.content.map((e=>e.text)).join(""),s=o.indexOf("\n"),a=o.indexOf("\n",s+1);let n="typescript";s>3&&(n=o.substring(3,s).trim());const r=o.lastIndexOf("```"),l=o.substring(s,a),d=o.substring(a,r);return(0,c.jsx)(i.Z,{language:n,title:l.trim(),children:d.trim()})}function se(e){return S[e]}function ae(e,t){let o;return void 0===t&&(t=e.name),o=e.typeReference?e.typeReference:le(e.type),t+(e.flags.isOptional?"?":"")+": "+o}function ie(e){let{param:t,isRest:o,references:s}=e;return(0,c.jsx)(Q,{remarkPlugins:[x],references:s,children:ne(t,o)})}function ne(e,t){let o=X(e.comment);return o?(o=o.slice(0,1).toLowerCase()+o.slice(1),o.startsWith("the")&&!t&&(o="is "+o),o):""}const re=new Map([["ArrayBuffer","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer"],["Blob","https://developer.mozilla.org/en-US/docs/Web/API/Blob"],["Uint8Array","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"],["RegExp","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"],["Function","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"],["Error","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"]]);function ce(e){let{type:t,references:o,isInUnionOrArray:a}=e;if("intrinsic"===t.type)return(0,c.jsx)("span",{children:t.name});if(t.name){var i,n,r,l,p,u;if(t.name===(null==(i=t.target)?void 0:i.qualifiedName)&&re.has(t.name)){const e=re.get(t.name);return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)("a",{className:"type-link",href:e,children:t.name})})}if("Promise"===t.name&&"Promise"===(null==(n=t.target)?void 0:n.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promise"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Partial"===t.name&&"Partial"===(null==(r=t.target)?void 0:r.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Partial"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});if("Omit"===t.name&&"Omit"===(null==(l=t.target)?void 0:l.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys",children:"Omit"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Map"===t.name&&"Map"===(null==(p=t.target)?void 0:p.qualifiedName)&&t.typeArguments&&2===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"Map"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),", ",(0,c.jsx)(ce,{type:t.typeArguments[1],references:o}),">"]});if("Set"===t.name&&"Set"===(null==(u=t.target)?void 0:u.qualifiedName)&&t.typeArguments&&1===t.typeArguments.length)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("a",{className:"type-link",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",children:"Set"}),"<",(0,c.jsx)(ce,{type:t.typeArguments[0],references:o}),">"]});let e="#"+t.name;const s=t.id?null==o?void 0:o["id-"+t.id]:null;if(s){const t=null==o?void 0:o[s];t&&(e=(0,d.Z)(t)+"#"+s)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry. ");return(0,c.jsx)(m.Z,{className:"type-link",href:e,children:t.name})}if("union"===t.type)return(0,c.jsxs)("span",{children:["(",t.types.map(((e,t)=>(0,c.jsxs)(s.Fragment,{children:[t>0?" | ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]},t))),")"]});if("array"===t.type)return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ce,{type:t.elementType,references:o,isInUnionOrArray:!0}),"[]"]});if("literal"===t.type)return"string"==typeof t.value?(0,c.jsxs)("span",{children:['"',t.value,'"']}):"number"==typeof t.value?(0,c.jsx)("span",{children:t.value}):"boolean"==typeof t.value?(0,c.jsx)("span",{children:t.value?"true":"false"}):void 0===t.value?(0,c.jsx)("span",{children:"undefined"}):null===t.value?(0,c.jsx)("span",{children:"null"}):""+JSON.stringify(t);if("reflection"===t.type){const e=t.declaration;if(e.kind===k.TypeLiteral&&e.signatures&&!e.children){var g;const t=null!=(g=ve(e.signatures))?g:e.signatures[0],s=t.parameters||[];return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("span",{children:[a?"(":"","(",s.map(((e,t)=>(0,c.jsxs)("span",{children:[t>0?",":"",e.name,": ",(0,c.jsx)(ce,{type:e.type,references:o})]},t))),") => ",(0,c.jsx)(ce,{type:t.type,references:o}),a?")":""]})})}return"object"}if("intersection"===t.type){return t.types.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?" & ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})))}if("tuple"===t.type){const e=t.elements.map(((e,t)=>(0,c.jsxs)(c.Fragment,{children:[t>0?", ":"",(0,c.jsx)(ce,{type:e,references:o,isInUnionOrArray:!0})]})));return(0,c.jsxs)("span",{children:["[",e,"]"]})}return"typeOperator"===t.type?(0,c.jsxs)("span",{children:[t.operator," ",(0,c.jsx)(ce,{type:t.target,references:o,isInUnionOrArray:!0})]}):""+JSON.stringify(t)}function le(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+le(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((e=>le(e))).join(" | ")+")":"array"===e.type?le(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function de(e){return me(e)||ue(e)}function me(e){return e&&pe(e.type)}function pe(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((e=>e.kind===k.CallSignature))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((e=>pe(e)))}function ge(e){return e&&e.kind===k.CallSignature}function ye(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&e.type.declaration.kind===k.TypeLiteral&&e.type.declaration.children}function he(e,t){var o;const s=null==(o=e.comment)||null==(o=o.blockTags)?void 0:o.find((e=>e.tag===t));return s?s.content.map((e=>e.text)).join(""):null}function fe(e){if(e)for(let t of e){const e=he(t,"@docname");if(e)return e.trim()}return null}function be(e){if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=Re(null==o?void 0:o.signatures);if(s)return s}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=Re(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=Re([e]);if(t)return t}return"99-default"}function xe(e){if(e.kind===k.Method){let t=fe(e.signatures);if(t)return t}else if(me(e)){var t;const o=null==e||null==(t=e.type)?void 0:t.declaration;let s=fe(null==o?void 0:o.signatures);if(s)return s}else if(ue(e)){const t=e.type.types;for(let e of t)if(pe(e)){let t=fe(e.declaration.signatures);if(t)return t}}else if(ge(e)){let t=fe([e]);if(t)return t}return he(o=e,"@docname")||o.name;var o}function ke(e){const t=he(e,"@docid");if(t)return t;const o=function(e,t){let o=[];return v(e,((e,s,a)=>{"comment"===a&&(console.log(e),o.push(...e.blockTags.filter((e=>e.tag===t))))})),o}(e,"@docid");return o.length>0?o[0].text.trim():xe(e)}function Re(e){if(e)for(let t of e){const e=he(t,"@docgroup");if(e)return e.trim()}return null}function ve(e){for(let t of e){if(he(t,"@docgroup"))return t}return null}function Ae(e){const t=e.type.types;let o=null;for(let s of t)if(pe(s)){const e=s.declaration.signatures;o||(o=e[0]);let t=ve(e);if(t)return t}return o}function Se(e){const t=(o=e,s=k.CallSignature,A(o,(e=>e.kind===s)));var o,s;for(let a of t){const e=he(a,"@docgrouptitle");if(e)return e.trim()}return null}function Te(e){for(let t of e.children){let e=Se(t.child);if(e)return e}return e.group}function Be(e){if(e.kind===k.CallSignature)return ge(e)||de(e)||ye(e)?[{group:be(e),name:xe(e),reflection:e,child:e}]:[];if(e.kind===k.TypeAlias||e.kind===k.GetSignature||e.kind===k.SetSignature)return[];const t=e.type.declaration.children.filter((e=>ge(e)||de(e)||ye(e))),o=null!==he(e,"@hiddennamespace")?null:e.name;return(0,r.flatMap)(t,(t=>de(t)?{group:be(t),name:xe(t),namespace:o,reflection:e,child:t}:Be(t)))}function Ce(e){const t=Be(e),o=(0,r.groupBy)(t,(e=>e.group));let s=[];for(let a in o)s.push({group:a,children:o[a]});return s=(0,r.sortBy)(s,(e=>e.group)),s}}}]);