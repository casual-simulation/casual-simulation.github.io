"use strict";(self.webpackChunkcasual_simulation=self.webpackChunkcasual_simulation||[]).push([[2006],{4629:function(e,t,n){n.d(t,{hl:function(){return O},zl:function(){return V},KO:function(){return E},HE:function(){return w},Op:function(){return R}});var r=n(7639),o=n(7294),a=n(2503),s=n(814),i=n(4673),c=n(6486),d=n(1073),l=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={hasError:!1},n}(0,d.Z)(t,e),t.getDerivedStateFromError=function(e){return{hasError:!0,error:e}};var n=t.prototype;return n.componentDidCatch=function(e,t){var n="["+this.props.reflection.name+"] "+e;if(!this.props.root)throw n;console.error(n)},n.render=function(){return this.state.hasError?o.createElement("h1",null,"[",this.props.reflection.name,"] ",this.state.error):this.props.children},t}(o.Component),g=n(4996),u=n(9960),m=n(7120),p=n(6388),f=n(1169);function h(e){void 0===e&&(e={});var t=e.references;return function(e){(0,f.Vn)(e,"link",(function(e){if(e.url.startsWith("tags:")){var n=e.url.slice("tags:".length);n.startsWith("@")?e.url=(0,g.Z)("listen-tags")+y(n.slice(1)):e.url=(0,g.Z)("tags")+y(n)}else if(e.url.startsWith("ref:")){var r=e.url.slice("ref:".length),o=t[r];e.url=(0,g.Z)(o)+"#"+r}else if(e.url.startsWith("glossary:")){var a=e.url.slice("glossary:".length);e.url=(0,g.Z)("glossary")+"#"+b(a)}else if(e.url.startsWith("page:")){var s=e.url.slice("page:".length).split("#"),i=s[0],c=s[1];e.url=(0,g.Z)(i)+"#"+c}}))}}function y(e){return"#"+b(e)}function b(e){return e.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()}function k(e){return void 0===e&&(e={}),function(e){e&&e.children&&e.children.length>0&&"paragraph"===e.children[0].type&&(e.children=e.children[0].children.concat(e.children.slice(1)))}}var S={Property:["type"],reflection:["declaration"],"Type literal":["children","signatures"],"Call signature":["parameters","comment","type"]};function v(e,t,n){void 0===n&&(n=null),function(e,t,n){var o;void 0===n&&(n=null);for(var a,s=S[null!=(o=e.kindString)?o:e.type]||[],i=(0,r.Z)(s);!(a=i()).done;){var c=a.value,d=e[c];if(Array.isArray(d))for(var l,g=(0,r.Z)(d);!(l=g()).done;){var u=l.value;u&&t(u,n,c)}else d&&t(d,n,c)}}(e,(function(e,n,r){t(e,n,r),v(e,t,e)}))}function T(e,t){var n=[];return t(e)&&n.push(e),v(e,(function(e,r,o){t(e,r,o)&&n.push(e)})),n}function R(e){e}var P=["first","second","third","fourth","fifth"];function x(e,t){return e.name+"-"+t.name}function D(e,t){var n,r=x(e,t);return{value:"<code>"+("Constructor"===t.kindString||"Method"===t.kindString?te(t.signatures[0]):"Accessor"===t.kindString?(n=t).name+": "+ce(n.getSignature[0].type):ae(t))+"</code>",id:r,level:3}}function w(e){var t=[],n=function(e){var t=[],n=[],o=[];if(!e)return{properties:t,constructors:n,methods:o};for(var a,s=(0,r.Z)(e);!(a=s()).done;){var i=a.value;i.flags.isPrivate||("Property"===i.kindString||"Accessor"===i.kindString?t.push(i):"Constructor"===i.kindString?n.push(i):"Method"===i.kindString&&o.push(i))}return{properties:t,constructors:n,methods:o}}(e.children),o=n.properties,a=n.constructors,s=n.methods;return o.length>0&&t.push.apply(t,o.map((function(t){return D(e,t)}))),a.length>0&&t.push.apply(t,a.map((function(t){return D(e,t)}))),s.length>0&&t.push.apply(t,s.map((function(t){return D(e,t)}))),t}function C(e){for(var t,n=[],o=De(e),a=(0,r.Z)(o);!(t=a()).done;){var s=t.value,i=Pe(s);n.push({value:i,id:s.group,level:2}),n.push.apply(n,s.children.map((function(e){return A(e)})))}return n}function A(e){var t,n=e.reflection,r=e.child,o=(e.group,e.name),a=e.namespace,s=a?a+"."+o:o;if(le(r)){var i,c=r.type.declaration.signatures;t=te(null!=(i=ve(c))?i:c[0],s)}else if(ue(r)){t=te(Te(r),s)}else t=ae(r,s);return{value:t="<code>"+t+"</code>",id:n.name+"-"+r.name,level:3}}function E(e){for(var t,n=[{value:e.pageTitle,id:"",level:2}],o=(0,r.Z)(e.contents);!(t=o()).done;){var a=t.value;if("Interface"===a.reflection.kindString||"Class"===a.reflection.kindString){var s=be(a.reflection),i=ke(a.reflection);n.push({value:s,id:i,level:2}),n.push.apply(n,w(a.reflection))}else if("Call signature"===a.reflection.kindString){var c=be(a.reflection),d=ke(a.reflection);n.push({value:"<code>"+te(a.reflection,c)+"</code>",id:d,level:3})}else if("Type alias"===a.reflection.kindString){var l=be(a.reflection),g=ke(a.reflection);n.push({value:l,id:g,level:2})}else if("Get signature"===a.reflection.kindString||"Set signature"===a.reflection.kindString){var u=be(a.reflection),m=ke(a.reflection);n.push({value:"<code>"+te(a.reflection,u)+"</code>",id:m,level:3})}else{var p=be(a.reflection),f=ke(a.reflection);n.push({value:p,id:f,level:2}),n.push.apply(n,C(a.reflection))}}return n}function O(e){var t=e.doc,n=t.contents,r=t.references;return o.createElement("div",{className:"api"},n.map((function(e){return o.createElement(F,{key:e.id,reflection:e.reflection,references:r})})))}function F(e){var t=e.reflection,n=e.references;return"Interface"===t.kindString||"Class"===t.kindString?o.createElement(U,{reflection:t,references:n}):"Call signature"===t.kindString||"Get signature"===t.kindString||"Set signature"===t.kindString?o.createElement(L,{reflection:t,references:n}):"Type alias"===t.kindString?o.createElement(B,{reflection:t,references:n}):o.createElement(G,{reflection:t,references:n})}function B(e){var t=e.reflection,n=e.references,r=be(t),s=ke(t);return o.createElement("div",null,o.createElement(a.Z,{as:"h2",id:s},r),o.createElement(_,{reflection:t,references:n}),o.createElement(M,{reflection:t,name:r,references:n}),o.createElement(re,{member:t}))}function M(e){var t=e.reflection,n=e.name,r=e.references,a="";return"union"===t.type.type&&(a=o.createElement(N,{type:t.type,name:n,references:r})),a}function N(e){var t=e.type,n=e.name,r=e.references;return o.createElement("div",null,o.createElement("p",null,"A ",n," can be one of the following values:"),o.createElement("ul",null,t.types.map((function(e,t){return o.createElement(I,{key:t,type:e,references:r})}))))}function I(e){var t=e.type,n=e.references;return o.createElement("li",null,o.createElement("code",null,o.createElement(ie,{type:t,references:n})))}function U(e){var t=e.reflection,n=e.references,r=be(t),s=ke(t);return o.createElement("div",null,o.createElement(a.Z,{as:"h2",id:s},r),o.createElement(V,{reflection:t,references:n}),o.createElement(re,{member:t}))}function G(e){var t=e.reflection,n=e.references,r=be(t),s=ke(t);return o.createElement("div",null,o.createElement(a.Z,{as:"h2",id:s},r),o.createElement(H,{reflection:t,references:n}),o.createElement(re,{member:t}))}function L(e){var t=e.reflection,n=e.references,r=be(t),a=ke(t);return o.createElement("div",null,o.createElement(Q,{func:t,sig:t,name:r,link:a,references:n}))}function V(e){var t,n=e.reflection;if(!n)throw new Error("Unable to find "+e.name+"!");var r=function(e){return(0,c.sortBy)(e,(function(e){return"Property"===e.kindString||"Accessor"===e.kindString?0:"Constructor"===e.kindString?1:2})).filter((function(e){return!e.flags.isPrivate}))}(null!=(t=n.children)?t:[]);return o.createElement(l,{reflection:n,root:!0},o.createElement("div",{className:"api"},o.createElement(_,{reflection:n,references:e.references}),n.indexSignature?o.createElement(W,{reflection:n,index:n.indexSignature,references:e.references}):"",n.references?o.createElement(Z,{prop:n,references:e.references}):"",r.map((function(t){return o.createElement(q,{key:t.name,member:t,link:x(n,t),references:e.references})}))))}function W(e){var t=e.reflection,n=e.index,r=e.references,s=n.parameters[0];return o.createElement("div",null,o.createElement(a.Z,{as:"h3",id:t.name+"-_index"},"Index Signature"),o.createElement(_,{reflection:n,references:r}),o.createElement("pre",null,o.createElement("code",null,"[",s.name,": ",o.createElement(ie,{type:s.type,references:r}),"]: ",o.createElement(ie,{type:n.type,references:r}))),o.createElement(re,{member:n}))}function _(e){var t=e.reflection,n=e.references;return o.createElement("div",null,o.createElement(X,{comment:t.comment,references:n}))}function q(e){var t;return t="Property"===e.member.kindString?function(e){var t,n=e.member,r="";n.references?(r=o.createElement(K,{prop:n,references:e.references}),t=o.createElement(o.Fragment,null,n.typeReference)):"reflection"===n.type.type&&n.typeText&&n.typeReference?(t=o.createElement(o.Fragment,null,n.typeReference),r=o.createElement(s.Z,{language:"typescript"},n.typeText)):t=o.createElement(ie,{type:e.member.type,references:e.references});!r&&n.typeText&&n.typeReference&&(r=o.createElement(s.Z,{language:"typescript"},n.typeText));var i=be(n);ke(n);return o.createElement("div",null,o.createElement(a.Z,{as:"h3",id:e.link},o.createElement("code",null,i,e.member.flags.isOptional?"?":"",": ",t)),o.createElement(_,{reflection:e.member,references:e.references}),r)}(e):"Constructor"===e.member.kindString?function(e){var t=be(e.member);return o.createElement("div",null,o.createElement(Q,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references}))}(e):"Method"===e.member.kindString?function(e){var t=be(e.member);return o.createElement("div",null,o.createElement(Q,{func:e.member,name:t,sig:e.member.signatures[0],link:e.link,references:e.references}))}(e):"Accessor"===e.member.kindString?function(e){var t;return o.createElement("div",null,o.createElement(a.Z,{as:"h3",id:e.link},o.createElement("code",null,e.member.name,": ",o.createElement(ie,{type:e.member.getSignature[0].type,references:e.references}))),o.createElement("p",null,null==(t=e.member.getSignature[0].comment)?void 0:t.shortText))}(e):"Not found "+e.member.kindString,o.createElement(l,{reflection:e.member},o.createElement("div",null,t))}function Z(e){var t=e.prop,n=e.references,r=ke(t);return o.createElement("div",null,o.createElement(a.Z,{as:"h3",id:r+"-extra-functions"},"Extra Functions"),o.createElement("p",null,"The extra functions that are available on this type."),o.createElement(i.Z,null,o.createElement("p",null,"See the following functions for more information:"),o.createElement(Y,{children:t.references,references:n})))}function K(e){var t=e.prop,n=e.references;return o.createElement(i.Z,null,o.createElement("p",null,"See the following functions for more information:"),o.createElement(Y,{children:t.references,references:n}))}function H(e){var t=e.reflection,n=(t.type.declaration,De(t));return console.log(n),o.createElement(l,{reflection:t,root:!0},o.createElement("div",{className:"api"},o.createElement(_,{reflection:t,references:e.references}),n.map((function(t){return o.createElement(J,{key:t.group,group:t,references:e.references})}))))}function J(e){var t=e.group,n=e.references,r=t.children,s=Pe(t);return o.createElement("div",null,o.createElement(a.Z,{as:"h3",id:t.group},s),r.map((function(e){return o.createElement(j,{key:e.child.id,namespace:e.namespace,name:e.name,property:e.child,link:x(e.reflection,e.child),references:n})})))}function j(e){var t;if(le(e.property)){var n,r=e.namespace?e.namespace+"."+e.name:e.name,s=e.property.type.declaration;t=Q({name:r,func:e.property,sig:null!=(n=ve(s.signatures))?n:s.signatures[0],link:e.link,references:e.references})}else if(ue(e.property)){var i=e.namespace?e.namespace+"."+e.name:e.name,c=Te(e.property);console.log(i,c,e.property),t=Q({name:i,func:e.property,sig:c,link:e.link,references:e.references})}else t=pe(e.property)?o.createElement(o.Fragment,null,"This is really fun! ",e.property.name):"Property"===e.property.kindString?function(e){return o.createElement("div",null,o.createElement(a.Z,{as:"h3",id:e.link},o.createElement("code",null,e.property.name,": ",o.createElement(ie,{type:e.property.type,references:e.references}))),o.createElement(_,{reflection:e.property,references:e.references}))}(e):"Not found "+e.property.kindString;return o.createElement(l,{reflection:e.property},o.createElement("div",null,t))}function Q(e){var t=e.func,n=e.sig,r=e.link,s=e.name,i=e.references;n||console.log(s,t);var c=n.parameters||[];return o.createElement("div",null,o.createElement(a.Z,{as:"h3",id:r},o.createElement(ee,{func:t,sig:n,name:s,references:i})),o.createElement(z,{sig:n,references:i}),c.length>0?o.createElement("div",null,c.map((function(e,t){return o.createElement(ne,{key:e.name,param:e,index:t,references:i})}))):"",o.createElement(re,{member:n}))}function z(e){var t=e.sig,n=e.references;return o.createElement(X,{comment:t.comment,references:n})}function X(e){var t=e.comment,n=e.references;return o.createElement(Y,{references:n},$(t))}function Y(e){var t=e.children,n=e.remarkPlugins,r=e.rehypePlugins,a=e.references;return o.createElement(m.D,{remarkPlugins:[[h,{references:a}]].concat(n||[]),rehypePlugins:[p.Z].concat(r||[])},t)}function $(e){var t="";return e&&(t+=e.shortText,e.text&&(t+="\n\n"+e.text)),t}function ee(e){var t=e.func,n=e.sig,r=e.name,a=e.references,s=n.parameters||[],i="";return"Get signature"!==t.kindString&&(i=o.createElement(o.Fragment,null,"(",s.map((function(e,t){return o.createElement("span",{key:e.name},t>0?", ":"",e.flags.isRest?"...":"",e.name,e.flags.isOptional?"?":"",": ",o.createElement(ie,{type:e.type,references:a}))})),")")),o.createElement("code",null,(t.flags.isStatic?"static ":"")+(r||n.name),i,": ",o.createElement(ie,{type:n.type,references:a}))}function te(e,t){void 0===t&&(t=e.name);var n=e.parameters||[],r="";return"Get signature"!==e.kindString&&(r="("+n.map((function(e,t){return(e.flags.isRest?"...":"")+e.name})).join(", ")+")"),""+t+r+": "+ce(e.type)}function ne(e){var t,n=e.param,r=e.index,a=e.references;return t=n.flags.isRest&&n.type.elementType?0===r?o.createElement("p",null,o.createElement("strong",null,"Each parameter")," is a ",o.createElement(ie,{type:n.type.elementType,references:a})," and are ",o.createElement(se,{param:n,isRest:!0,references:a})):o.createElement("p",null,o.createElement("strong",null,"Each other parameter")," is a ",o.createElement(ie,{type:n.type.elementType,references:a})," and are ",o.createElement(se,{param:n,isRest:!0,references:a})):o.createElement("p",null,"The ",o.createElement("strong",null,function(e){return P[e]}(r)," parameter")," is",n.flags.isOptional?" optional and is":""," a ",o.createElement(ie,{type:n.type,references:a})," and ",o.createElement(se,{param:n,references:a})),t}function re(e){var t,n=e.member;if(null==(t=n.comment)||!t.tags)return"";var r=n.comment.tags.filter((function(e){return"example"===e.tag}));return r.length>0?o.createElement("div",null,o.createElement("h4",null,"Examples"),r.map((function(e,t){return o.createElement(oe,{key:t,example:e})}))):""}function oe(e){var t=e.example.text,n=t.indexOf("\n"),r=t.substring(0,n),a=t.substring(n+1);return o.createElement(s.Z,{language:"typescript",title:r.trim()},a.trim())}function ae(e,t){var n;return void 0===t&&(t=e.name),n=e.typeReference?e.typeReference:ce(e.type),t+(e.flags.isOptional?"?":"")+": "+n}function se(e){var t=e.param,n=e.isRest,r=e.references;return o.createElement(Y,{remarkPlugins:[k],references:r},function(e,t){var n=$(e.comment);if(!n)return"";(n=n.slice(0,1).toLowerCase()+n.slice(1)).startsWith("the")&&!t&&(n="is "+n);return n}(t,n))}function ie(e){var t=e.type,n=e.references,r=e.isInUnionOrArray;if("intrinsic"===t.type)return o.createElement("span",null,t.name);if(t.name){if("Promise"===t.name&&"Promise"===t.qualifiedName&&t.typeArguments&&1===t.typeArguments.length)return o.createElement(o.Fragment,null,"Promise<",o.createElement(ie,{type:t.typeArguments[0],references:n}),">");if("Partial"===t.name&&"Partial"===t.qualifiedName&&t.typeArguments&&1===t.typeArguments.length)return o.createElement(o.Fragment,null,o.createElement("a",{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"},"Partial"),"<",o.createElement(ie,{type:t.typeArguments[0],references:n}),">");var a="#"+t.name,s=t.id?null==n?void 0:n["id-"+t.id]:null;if(s){var i=null==n?void 0:n[s];i&&(a=(0,g.Z)(i)+"#"+s)}else t.id?console.log("Missing reference for",t.id,t.name,t,"it is likely that the type does not have a @docid or @docname comment"):console.log("Missing reference for",t,"it is likely that the type is not exported from the entry");return o.createElement(u.Z,{href:a},t.name)}if("union"===t.type)return o.createElement("span",null,"(",t.types.map((function(e,t){return o.createElement(o.Fragment,{key:t},t>0?" | ":"",o.createElement(ie,{type:e,references:n,isInUnionOrArray:!0}))})),")");if("array"===t.type)return o.createElement(o.Fragment,null,o.createElement(ie,{type:t.elementType,references:n,isInUnionOrArray:!0}),"[]");if("literal"===t.type)return"string"==typeof t.value?o.createElement("span",null,'"',t.value,'"'):"number"==typeof t.value?o.createElement("span",null,t.value):"boolean"==typeof t.value?o.createElement("span",null,t.value?"true":"false"):void 0===t.value?o.createElement("span",null,"undefined"):null===t.value?o.createElement("span",null,"null"):""+JSON.stringify(t);if("reflection"===t.type){var c=t.declaration;if("Type literal"===c.kindString&&c.signatures&&!c.children){var d,l=null!=(d=ve(c.signatures))?d:c.signatures[0],m=l.parameters||[];return o.createElement(o.Fragment,null,o.createElement("span",null,r?"(":"","(",m.map((function(e,t){return o.createElement("span",{key:t},t>0?",":"",e.name,": ",o.createElement(ie,{type:e.type,references:n}))})),") => ",o.createElement(ie,{type:l.type,references:n}),r?")":""))}return"object"}return""+JSON.stringify(t)}function ce(e){return"intrinsic"===e.type?e.name:e.name?"Promise"===e.name&&"Promise"===e.qualifiedName&&e.typeArguments&&1===e.typeArguments.length?"Promise&lt;"+ce(e.typeArguments[0])+"&gt;":e.name:"union"===e.type?"("+e.types.map((function(e){return ce(e)})).join(" | ")+")":"array"===e.type?ce(e.elementType)+"[]":"literal"===e.type?"string"==typeof e.value?'"'+e.value+'"':"number"==typeof e.value?String(e.value):"boolean"==typeof e.value?e.value?"true":"false":""+JSON.stringify(e):"reflection"===e.type?"object":"missing!: "+JSON.stringify(e)}function de(e){return le(e)||ue(e)}function le(e){return e&&ge(e.type)}function ge(e){return e&&"reflection"===e.type&&e.declaration&&e.declaration.signatures&&e.declaration.signatures.some((function(e){return"Call signature"===e.kindString}))}function ue(e){return e&&e.type&&"intersection"===e.type.type&&e.type.types.some((function(e){return ge(e)}))}function me(e){return e&&"Call signature"===e.kindString}function pe(e){return e&&e.type&&"reflection"===e.type.type&&e.type.declaration&&"Type literal"===e.type.declaration.kindString&&e.type.declaration.children}function fe(e,t){var n,r,o=null==(n=e.comment)||null==(r=n.tags)?void 0:r.find((function(e){return e.tag===t}));return o?o.text.trim():null}function he(e){if(e)for(var t,n=(0,r.Z)(e);!(t=n()).done;){var o=fe(t.value,"docname");if(o)return o.trim()}return null}function ye(e){if(le(e)){var t,n=null==e||null==(t=e.type)?void 0:t.declaration,o=Se(null==n?void 0:n.signatures);if(o)return o}else if(ue(e))for(var a,s=e.type.types,i=(0,r.Z)(s);!(a=i()).done;){var c=a.value;if(ge(c)){var d=Se(c.declaration.signatures);if(d)return d}}else if(me(e)){var l=Se([e]);if(l)return l}return"99-default"}function be(e){if("Method"===e.kindString){var t=he(e.signatures);if(t)return t}else if(le(e)){var n,o=null==e||null==(n=e.type)?void 0:n.declaration,a=he(null==o?void 0:o.signatures);if(a)return a}else if(ue(e))for(var s,i=e.type.types,c=(0,r.Z)(i);!(s=c()).done;){var d=s.value;if(ge(d)){var l=he(d.declaration.signatures);if(l)return l}}else if(me(e)){var g=he([e]);if(g)return g}return fe(u=e,"docname")||u.name;var u}function ke(e){var t=fe(e,"docid");if(t)return t;var n,r,o=(n="docid",r=[],v(e,(function(e,t,o){"comment"===o&&r.push.apply(r,e.tags.filter((function(e){return e.tag===n})))})),r);return o.length>0?o[0].text.trim():be(e)}function Se(e){if(e)for(var t,n=(0,r.Z)(e);!(t=n()).done;){var o=fe(t.value,"docgroup");if(o)return o.trim()}return null}function ve(e){for(var t,n=(0,r.Z)(e);!(t=n()).done;){var o=t.value;if(fe(o,"docgroup"))return o}return null}function Te(e){for(var t,n=e.type.types,o=null,a=(0,r.Z)(n);!(t=a()).done;){var s=t.value;if(ge(s)){var i=s.declaration.signatures;o||(o=i[0]);var c=ve(i);if(c)return c}}return o}function Re(e){for(var t,n,o=(t="Call signature",T(e,(function(e){return e.kindString===t}))),a=(0,r.Z)(o);!(n=a()).done;){var s=fe(n.value,"docgrouptitle");if(s)return s.trim()}return null}function Pe(e){for(var t,n=(0,r.Z)(e.children);!(t=n()).done;){var o=Re(t.value.child);if(o)return o}return e.group}function xe(e){if("Call signature"===e.kindString)return me(e)||de(e)||pe(e)?[{group:ye(e),name:be(e),reflection:e,child:e}]:[];if("Type alias"===e.kindString||"Get signature"===e.kindString||"Set signature"===e.kindString)return[];var t=e.type.declaration.children.filter((function(e){return me(e)||de(e)||pe(e)})),n=null!==fe(e,"hiddennamespace")?null:e.name;return(0,c.flatMap)(t,(function(t){return de(t)?{group:ye(t),name:be(t),namespace:n,reflection:e,child:t}:xe(t)}))}function De(e){var t=xe(e),n=(0,c.groupBy)(t,(function(e){return e.group})),r=[];for(var o in n)r.push({group:o,children:n[o]});return r=(0,c.sortBy)(r,(function(e){return e.group}))}},4771:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return d},metadata:function(){return g},toc:function(){return m}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),s=JSON.parse('{"hash":"types/debuggers/pausable-debugger","pageTitle":"Pausable Debugger","pageDescription":"Defines an interface that represents a pausable debugger.","pageSidebarLabel":"Pausable Debugger","contents":[{"id":2306,"order":9999,"name":"PausableDebugger","reflection":{"id":2306,"name":"PausableDebugger","kind":256,"kindString":"Interface","flags":[],"comment":{"shortText":"Defines an interface that represents a pausable debugger.","tags":[{"tag":"dochash","paramName":"","text":"types/debuggers/pausable-debugger"},{"tag":"doctitle","paramName":"","text":"Pausable Debugger"},{"tag":"docsidebar","paramName":"","text":"Pausable Debugger"},{"tag":"docdescription","paramName":"","text":"Defines an interface that represents a pausable debugger."},{"tag":"docname","paramName":"","text":"PausableDebugger"},{"tag":"docreferenceactions","paramName":"","text":"^\\\\w+$\\n"}]},"children":[{"id":2418,"name":"action","kind":1024,"kindString":"Property","flags":[],"comment":{"shortText":"The action-related actions that are available in this debugger.","tags":[{"tag":"docreferenceactions","paramName":"","text":"^action\\\\."},{"tag":"docsource","paramName":"","text":"ActionActions\\n"}]},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":1229,"character":4}],"type":{"type":"reflection","declaration":{"id":2419,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"inheritedFrom":{"type":"reference","name":"DebuggerBase.action"},"typeText":"interface ActionActions {\\n}","typeReference":"ActionActions","references":"- [`action.perform(action)`](ref:action.perform)\\n- [`action.reject(action)`](ref:action.reject)\\n"},{"id":2416,"name":"os","kind":1024,"kindString":"Property","flags":[],"comment":{"shortText":"The OS actions that are available in this debugger.","tags":[{"tag":"docreferenceactions","paramName":"","text":"^os\\\\."},{"tag":"docsource","paramName":"","text":"OSActions\\n"}]},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":1215,"character":4}],"type":{"type":"reflection","declaration":{"id":2417,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"inheritedFrom":{"type":"reference","name":"DebuggerBase.os"},"typeText":"interface OSActions {\\n}","typeReference":"OSActions","references":"- [`os.beginAudioRecording(options)`](ref:os.beginAudioRecording)\\n- [`os.endAudioRecording()`](ref:os.endAudioRecording)\\n- [`os.attachDebugger(debug, options)`](ref:os.attachDebugger)\\n- [`os.createDebugger(options)`](ref:os.createDebugger-normal)\\n- [`os.createDebugger(options)`](ref:os.createDebugger-pausable)\\n- [`os.focusOn(bot, options)`](ref:os.focusOn-bot)\\n- [`os.focusOn(position, options)`](ref:os.focusOn-position)\\n- [`os.getExecutingDebugger()`](ref:os.getExecutingDebugger)\\n- [`os.showInput(currentValue, options)`](ref:os.showInput)\\n- [`os.addBotDropGrid(bot, ...targets)`](ref:os.addBotDropGrid)\\n- [`os.addBotDropSnap(bot, ...targets)`](ref:os.addBotDropSnap)\\n- [`os.addDropGrid(...targets)`](ref:os.addDropGrid)\\n- [`os.addDropSnap(...targets)`](ref:os.addDropSnap)\\n- [`os.applyUpdatesToInst(updates)`](ref:os.applyUpdatesToInst)\\n- [`os.arSupported()`](ref:os.arSupported)\\n- [`os.beginAudioRecording(options)`](ref:os.beginAudioRecording)\\n- [`os.bufferFormAddressGLTF(address)`](ref:os.bufferFormAddressGLTF)\\n- [`os.bufferSound(url)`](ref:os.bufferSound)\\n- [`os.calculateRayFromCamera(portal, viewportCoordinates)`](ref:os.calculateRayFromCamera)\\n- [`os.cancelSound(soundId)`](ref:os.cancelSound)\\n- [`os.capturePhoto(options)`](ref:os.capturePhoto)\\n- [`os.closeBarcodeScanner()`](ref:os.closeBarcodeScanner)\\n- [`os.closeCircleWipe(options)`](ref:os.closeCircleWipe)\\n- [`os.closeImageClassifier()`](ref:os.closeImageClassifier)\\n- [`os.closePhotoCamera()`](ref:os.closePhotoCamera)\\n- [`os.closeQRCodeScanner()`](ref:os.closeQRCodeScanner)\\n- [`os.compileApp(appId, content)`](ref:os.compileApp)\\n- [`os.convertGeolocationToWhat3Words(location)`](ref:os.convertGeolocationToWhat3Words)\\n- [`os.countEvents(recordNameOrKey, eventName, endpoint)`](ref:os.countEvents)\\n- [`os.createInitializationUpdate(bots)`](ref:os.createInitializationUpdate)\\n- [`os.device()`](ref:os.device)\\n- [`os.disableAR()`](ref:os.disableAR)\\n- [`os.disablePointOfView()`](ref:os.disablePointOfView)\\n- [`os.disableVR()`](ref:os.disableVR)\\n- [`os.disableWakeLock()`](ref:os.disableWakeLock)\\n- [`os.download(data, filename, mimeType)`](ref:os.download)\\n- [`os.downloadBots(bots, filename)`](ref:os.downloadBots)\\n- [`os.downloadBotsAsInitialzationUpdate(bots, filename)`](ref:os.downloadBotsAsInitialzationUpdate)\\n- [`os.downloadInst()`](ref:os.downloadInst)\\n- [`os.downloadInst()`](ref:os.downloadInst)\\n- [`os.enableAR(options)`](ref:os.enableAR)\\n- [`os.enableCustomDragging()`](ref:os.enableCustomDragging)\\n- [`os.enablePointOfView(center, imu)`](ref:os.enablePointOfView)\\n- [`os.enableVR(options)`](ref:os.enableVR)\\n- [`os.endAudioRecording()`](ref:os.endAudioRecording)\\n- [`os.eraseData(recordKeyOrName, address, endpoint)`](ref:os.eraseData)\\n- [`os.eraseManualApprovalData(recordKeyOrName, address, endpoint)`](ref:os.eraseManualApprovalData)\\n- [`os.exitFullscreenMode()`](ref:os.exitFullscreenMode)\\n- [`os.getAverageFrameRate()`](ref:os.getAverageFrameRate)\\n- [`os.getCameraPosition(portal)`](ref:os.getCameraPosition)\\n- [`os.getCameraRotation(portal)`](ref:os.getCameraRotation)\\n- [`os.getCurrentDimension()`](ref:os.getCurrentDimension)\\n- [`os.getCurrentInst()`](ref:os.getCurrentInst)\\n- [`os.getCurrentInstUpdate()`](ref:os.getCurrentInstUpdate)\\n- [`os.getCurrentInst()`](ref:os.getCurrentInst)\\n- [`os.getData(recordKeyOrName, address, endpoint)`](ref:os.getData)\\n- [`os.getDimensionalDepth(dimension)`](ref:os.getDimensionalDepth)\\n- [`os.getFocusPoint(portal)`](ref:os.getFocusPoint)\\n- [`os.getGeolocation()`](ref:os.getGeolocation)\\n- [`os.getInputList()`](ref:os.getInputList)\\n- [`os.getInputState(controller, button)`](ref:os.getInputState)\\n- [`os.getInstStateFromUpdates(updates)`](ref:os.getInstStateFromUpdates)\\n- [`os.getManualApprovalData(recordKeyOrName, address, endpoint)`](ref:os.getManualApprovalData)\\n- [`os.getMediaPermission(options)`](ref:os.getMediaPermission)\\n- [`os.getMenuDimension()`](ref:os.getMenuDimension)\\n- [`os.getMiniPortalDimension()`](ref:os.getMiniPortalDimension)\\n- [`os.getPointerDirection(pointer)`](ref:os.getPointerDirection)\\n- [`os.getPointerPosition(pointer)`](ref:os.getPointerPosition)\\n- [`os.getPointerRotation(pointer)`](ref:os.getPointerRotation)\\n- [`os.getPortalDimension(portal)`](ref:os.getPortalDimension)\\n- [`os.getPublicRecordKey(name)`](ref:os.getPublicRecordKey)\\n- [`os.getRoomOptions(roomName)`](ref:os.getRoomOptions)\\n- [`os.getRoomRemoteOptions(roomName, remoteId)`](ref:os.getRoomRemoteOptions)\\n- [`os.getRoomTrackOptions(roomName, address)`](ref:os.getRoomTrackOptions)\\n- [`os.getSubjectlessPublicRecordKey(name)`](ref:os.getSubjectlessPublicRecordKey)\\n- [`os.getWakeLockConfiguration()`](ref:os.getWakeLockConfiguration)\\n- [`os.goToDimension(dimension)`](ref:os.goToDimension)\\n- [`os.goToURL(url)`](ref:os.goToURL)\\n- [`os.grantInstAdminPermission(recordName, options)`](ref:os.grantInstAdminPermission)\\n- [`os.grantInstRole(recordName, role, inst, expireTimeMs, options)`](ref:os.grantInstRole)\\n- [`os.grantRecordMarkerPermission(recordName, marker, permission, options)`](ref:os.grantRecordMarkerPermission)\\n- [`os.grantUserRole(recordName, role, userId, expireTimeMs, options)`](ref:os.grantUserRole)\\n- [`os.hasBotInMiniPortal(bots)`](ref:os.hasBotInMiniPortal)\\n- [`os.hideBarcode()`](ref:os.hideBarcode)\\n- [`os.hideChat()`](ref:os.hideChat)\\n- [`os.hideHtml()`](ref:os.hideHtml)\\n- [`os.hideQRCode()`](ref:os.hideQRCode)\\n- [`os.hideTips(tipIds)`](ref:os.hideTips)\\n- [`os.importAUX(urlOrJSON)`](ref:os.importAUX)\\n- [`os.inSheet()`](ref:os.inSheet)\\n- [`os.instStatuses()`](ref:os.instStatuses)\\n- [`os.instances()`](ref:os.instances)\\n- [`os.isCollaborative()`](ref:os.isCollaborative)\\n- [`os.isInDimension(dimension)`](ref:os.isInDimension)\\n- [`os.isRecordKey(key)`](ref:os.isRecordKey)\\n- [`os.joinRoom(roomName, options)`](ref:os.joinRoom)\\n- [`os.leaveRoom(roomName, options)`](ref:os.leaveRoom)\\n- [`os.listBuiltinTags()`](ref:os.listBuiltinTags)\\n- [`os.listData(recordKeyOrName, startingAddress, endpoint)`](ref:os.listData)\\n- [`os.listFormAnimations(botOrAddress)`](ref:os.listFormAnimations)\\n- [`os.listInstUpdates()`](ref:os.listInstUpdates)\\n- [`os.loadInst(id)`](ref:os.loadInst)\\n- [`os.loadInst(id)`](ref:os.loadInst)\\n- [`os.log(...args)`](ref:os.log)\\n- [`os.meetCommand(command, ...args)`](ref:os.meetCommand)\\n- [`os.meetFunction(functionName, ...args)`](ref:os.meetFunction)\\n- [`os.openBarcodeScanner(camera)`](ref:os.openBarcodeScanner)\\n- [`os.openCircleWipe(options)`](ref:os.openCircleWipe)\\n- [`os.openDevConsole()`](ref:os.openDevConsole)\\n- [`os.openImageClassifier(options)`](ref:os.openImageClassifier)\\n- [`os.openPhotoCamera(options)`](ref:os.openPhotoCamera)\\n- [`os.openQRCodeScanner(camera)`](ref:os.openQRCodeScanner)\\n- [`os.openURL(url)`](ref:os.openURL)\\n- [`os.parseBotsFromData(jsonOrPdf)`](ref:os.parseBotsFromData)\\n- [`os.playSound(url)`](ref:os.playSound)\\n- [`os.raycast(portal, origin, direction)`](ref:os.raycast)\\n- [`os.raycastFromCamera(portal, viewportCoordinates)`](ref:os.raycastFromCamera)\\n- [`os.recordData(recordKeyOrRecordName, address, data, endpointOrOptions)`](ref:os.recordData)\\n- [`os.recordEvent(recordKeyOrName, eventName, endpoint)`](ref:os.recordEvent)\\n- [`os.recordFile(recordKeyOrName, data, options, endpoint)`](ref:os.recordFile)\\n- [`os.recordManualApprovalData(recordKeyOrRecordName, address, data, endpointOrOptions)`](ref:os.recordManualApprovalData)\\n- [`os.registerApp(portalId, bot)`](ref:os.registerApp)\\n- [`os.registerTagPrefix(prefix, options)`](ref:os.registerTagPrefix)\\n- [`os.remoteCount(inst)`](ref:os.remoteCount)\\n- [`os.remotes()`](ref:os.remotes)\\n- [`os.replaceDragBot(bot)`](ref:os.replaceDragBot)\\n- [`os.requestAuthBot()`](ref:os.requestAuthBot)\\n- [`os.requestFullscreenMode()`](ref:os.requestFullscreenMode)\\n- [`os.requestWakeLock()`](ref:os.requestWakeLock)\\n- [`os.revokeInstRole(recordName, role, inst, options)`](ref:os.revokeInstRole)\\n- [`os.revokeRecordMarkerPermission(recordName, marker, permission, options)`](ref:os.revokeRecordMarkerPermission)\\n- [`os.revokeUserRole(recordName, role, userId, options)`](ref:os.revokeUserRole)\\n- [`os.run(script)`](ref:os.run)\\n- [`os.setClipboard(text)`](ref:os.setClipboard)\\n- [`os.setRoomOptions(roomName, options)`](ref:os.setRoomOptions)\\n- [`os.setRoomTrackOptions(roomName, address, options)`](ref:os.setRoomTrackOptions)\\n- [`os.share(options)`](ref:os.share)\\n- [`os.showBarcode(code, format)`](ref:os.showBarcode)\\n- [`os.showConfirm(options)`](ref:os.showConfirm)\\n- [`os.showHtml(html)`](ref:os.showHtml)\\n- [`os.showInputForTag(bot, tag, options)`](ref:os.showInputForTag)\\n- [`os.showJoinCode(inst, dimension)`](ref:os.showJoinCode)\\n- [`os.showQRCode(code)`](ref:os.showQRCode)\\n- [`os.showUploadAuxFile()`](ref:os.showUploadAuxFile)\\n- [`os.showUploadFiles()`](ref:os.showUploadFiles)\\n- [`os.sleep(time)`](ref:os.sleep)\\n- [`os.startFormAnimation(botOrBots, nameOrIndex, options)`](ref:os.startFormAnimation)\\n- [`os.stopFormAnimation(botOrBots, options)`](ref:os.stopFormAnimation)\\n- [`os.tip(message, pixelX, pixelY, duration)`](ref:os.tip)\\n- [`os.toast(message, duration)`](ref:os.toast)\\n- [`os.totalRemoteCount()`](ref:os.totalRemoteCount)\\n- [`os.unloadInst(id)`](ref:os.unloadInst)\\n- [`os.unloadInst(id)`](ref:os.unloadInst)\\n- [`os.unregisterApp(appId)`](ref:os.unregisterApp)\\n- [`os.version()`](ref:os.version)\\n- [`os.vrSupported()`](ref:os.vrSupported)\\n- [`os.agreedUponTime`](ref:os.agreedUponTime)\\n- [`os.deadReckoningTime`](ref:os.deadReckoningTime)\\n- [`os.instLatency`](ref:os.instLatency)\\n- [`os.instTimeOffset`](ref:os.instTimeOffset)\\n- [`os.instTimeOffsetSpread`](ref:os.instTimeOffsetSpread)\\n- [`os.localTime`](ref:os.localTime)\\n- [`os.registerTagPrefix(prefix, options)`](ref:os.registerTagPrefix)\\n- [`os.remotes()`](ref:os.remotes)\\n- [`os.remotes()`](ref:os.remotes)\\n- [`os.remoteCount(inst)`](ref:os.remoteCount)\\n- [`os.remoteCount(inst)`](ref:os.remoteCount)\\n- [`os.instStatuses()`](ref:os.instStatuses)\\n- [`os.instances()`](ref:os.instances)\\n- [`os.instances()`](ref:os.instances)\\n- [`os.totalRemoteCount()`](ref:os.totalRemoteCount)\\n- [`os.totalRemoteCount()`](ref:os.totalRemoteCount)\\n- [`os.sleep(time)`](ref:os.sleep)\\n"},{"id":2414,"name":"web","kind":1024,"kindString":"Property","flags":[],"comment":{"shortText":"The web actions that are available in this debugger.","tags":[{"tag":"docreferenceactions","paramName":"","text":"^web\\\\."},{"tag":"docsource","paramName":"","text":"WebActions\\n"}]},"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":1207,"character":4}],"type":{"type":"reflection","declaration":{"id":2415,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"inheritedFrom":{"type":"reference","name":"DebuggerBase.web"},"typeText":"interface WebActions {\\n}","typeReference":"WebActions","references":"- [`web.get(url, options)`](ref:web.get)\\n- [`web.hook(options)`](ref:web.hook)\\n- [`web.post(url, data, options)`](ref:web.post)\\n"},{"id":2316,"name":"_setPauseTrigger_botOrId","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2317,"name":"_setPauseTrigger_botOrId","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers or updates a pause trigger with this debugger.\\nPause triggers can be used to tell the debugger when you want it to stop execution.\\nYou specify the bot, tag, line and column numbers and the debugger will stop before/after it executes the code at that location.","tags":[{"tag":"example","paramName":"","text":"Set a pause trigger on a script\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nconst trigger = debug.setPauseTrigger(b, \'test\', {\\n    lineNumber: 1,\\n    columnNumber: 1\\n});\\n"},{"tag":"example","paramName":"","text":"Update a pause trigger on a script\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nlet trigger = debug.setPauseTrigger(b, \'test\', {\\n    lineNumber: 1,\\n    columnNumber: 1\\n});\\n\\ntrigger = debug.setPauseTrigger({\\n    ...trigger,\\n    states: [\'before\', \'after\']\\n});\\n"},{"tag":"docname","paramName":"","text":"setPauseTrigger"},{"tag":"docid","paramName":"","text":"debug.setPauseTrigger-botOrId\\n"}]},"parameters":[{"id":2318,"name":"botOrIdOrTrigger","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the bot, or bot ID that should be registered.","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2687,"name":"Bot"}]}},{"id":2319,"name":"tag","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"the name of the tag that the trigger should be set on.","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":2320,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The options that go with this pause trigger.\\n","tags":[]},"type":{"type":"reference","id":2433,"name":"PauseTriggerOptions"}}],"type":{"type":"reference","id":2425,"name":"PauseTrigger"}}]},{"id":2313,"name":"_setPauseTrigger_trigger","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2314,"name":"_setPauseTrigger_trigger","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers or updates a pause trigger with a debugger. Returns the newly created trigger.","text":"Pause triggers can be used to tell the debugger where you want it to temporarily stop execution. You specify the bot, tag, line and column numbers, and the debugger will stop before it executes the code at that location.\\nAdditionally, the debugger will call all handlers that have been registered with debug.onPause.\\n","tags":[{"tag":"docname","paramName":"","text":"setPauseTrigger"},{"tag":"docid","paramName":"","text":"debug.setPauseTrigger-trigger\\n"}]},"parameters":[{"id":2315,"name":"trigger","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The trigger that should be registered or updated.\\n","tags":[]},"type":{"type":"reference","id":2425,"name":"PauseTrigger"}}],"type":{"type":"reference","id":2425,"name":"PauseTrigger"}}]},{"id":2360,"name":"changeState","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2361,"name":"changeState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Changes the state that the given bot is in.","tags":[]},"parameters":[{"id":2362,"name":"bot","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The bot to change.","tags":[]},"type":{"type":"reference","id":2687,"name":"Bot"}},{"id":2363,"name":"stateName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The state that the bot should move to.","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":2364,"name":"groupName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The group of states that the bot\'s state should change in. (Defaults to \\"state\\")\\n","tags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":2341,"name":"create","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2342,"name":"create","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new bot and returns it.","returns":"The bot(s) that were created.\\n","tags":[{"tag":"example","paramName":"","text":"Create a red bot without a parent.\\nlet debugger = await os.createDebugger({\\n    pausable: true\\n});\\nlet redBot = await debugger.create(null, { \\"color\\": \\"red\\" });\\n"},{"tag":"example","paramName":"","text":"Create a red bot and a blue bot with `this` as the parent.\\nlet debugger = await os.createDebugger({\\n    pausable: true\\n});\\nlet [redBot, blueBot] = await debugger.create(this, [\\n   { \\"color\\": \\"red\\" },\\n   { \\"color\\": \\"blue\\" }\\n]);\\n"}]},"parameters":[{"id":2343,"name":"mods","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"shortText":"The mods which specify the new bot\'s tag values. If given a mod with no tags, then an error will be thrown.","tags":[]},"type":{"type":"array","elementType":{"type":"reference","id":2120,"name":"Mod"}}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":2687,"name":"Bot"},{"type":"array","elementType":{"type":"reference","id":2687,"name":"Bot"}}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":2344,"name":"destroy","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2345,"name":"destroy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Destroys the given bot, bot ID, or list of bots.","tags":[]},"parameters":[{"id":2346,"name":"bot","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The bot, bot ID, or list of bots to destroy.\\n","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2687,"name":"Bot"},{"type":"array","elementType":{"type":"reference","id":2687,"name":"Bot"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":2324,"name":"disablePauseTrigger","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2325,"name":"disablePauseTrigger","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Disables the given pause trigger.\\nDisabled pause triggers will continue to be listed with debug.listPauseTriggers, but will not cause a pause to happen while they are disabled.","tags":[{"tag":"example","paramName":"","text":"Disable a pause trigger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nconst trigger = debug.setPauseTrigger(b, \'test\', {\\n    lineNumber: 1,\\n    columnNumber: 1\\n});\\n\\ndebug.disablePauseTrigger(trigger);\\n"}]},"parameters":[{"id":2326,"name":"triggerOrId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The trigger or trigger ID that should be disabled.\\n","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2425,"name":"PauseTrigger"}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2327,"name":"enablePauseTrigger","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2328,"name":"enablePauseTrigger","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Enables the given pause trigger","tags":[{"tag":"example","paramName":"","text":"Enable a pause trigger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nconst trigger = debug.setPauseTrigger(b, \'test\', {\\n    lineNumber: 1,\\n    columnNumber: 1,\\n    enabled: false\\n});\\n\\ndebug.enablePauseTrigger(trigger);\\n"}]},"parameters":[{"id":2329,"name":"triggerOrId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The trigger or trigger ID that should be enabled.\\n","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2425,"name":"PauseTrigger"}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2367,"name":"getAllActions","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2368,"name":"getAllActions","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the list of action objects that have been performed by bots in the current debugger.\\nAction objects are used by CasualOS to represent changes to bots or external effects that should be performed.\\nExamples of this are [`create(...mods)`](ref:create), [`os.toast(message, duration)`](ref:os.toast) and [`os.enableVR(options)`](ref:os.enableVR).","tags":[{"tag":"example","paramName":"","text":"Get the list of bot changes and actions that have been performed in a debugger\\nconst debug = await os.createDebugger();\\ndebug.create({\\n    test: \'@os.toast(\\"Hello\\")\'\\n});\\ndebug.shout(\\"test\\");\\n\\nconst actions = debug.getAllActions();\\n\\nassertEqual(actions, [\\n    {\\n        type: \'add_bot\',\\n        id: \'uuid-1\',\\n        bot: {\\n            id: \'uuid-1\',\\n            tags: {\\n                test: \'@os.toast(\\"Hello\\")\'\\n            }\\n        }\\n    },\\n    {\\n        type: \'show_toast\',\\n        message: \'Hello\',\\n        duration: 2000\\n    }\\n]);\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"BotAction"}},"inheritedFrom":{"type":"reference","name":"DebuggerBase.getAllActions"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.getAllActions"}},{"id":2371,"name":"getBotActions","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2372,"name":"getBotActions","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the list of bot actions that have been performed by bots in the current debugger.\\nAction objects are used by CasualOS to represent changes to bots or external effects that should be performed.\\nBot actions are actions that immediately change bots or bot tags or masks.","text":"Examples of bot actions are [`create(...mods)`](ref:create), [`destroy(bot)`](ref:destroy) or [`setTagMask(bot, tag, value, space)`](ref:setTagMask).\\n","tags":[{"tag":"example","paramName":"","text":"Get the list of bot changes that have been performed in a debugger\\nconst debug = await os.createDebugger();\\ndebug.create({\\n    test: \'@os.toast(\\"Hello\\")\'\\n});\\ndebug.shout(\\"test\\");\\n\\nconst actions = debug.getBotActions();\\n\\nassertEqual(actions, [\\n    {\\n        type: \'add_bot\',\\n        id: \'uuid-1\',\\n        bot: {\\n            id: \'uuid-1\',\\n            tags: {\\n                test: \'@os.toast(\\"Hello\\")\'\\n            }\\n        }\\n    },\\n]);\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"BotAction"}},"inheritedFrom":{"type":"reference","name":"DebuggerBase.getBotActions"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.getBotActions"}},{"id":2339,"name":"getCallStack","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2340,"name":"getCallStack","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the current call stack for the debugger. Call stacks are useful for determining program flow and how scripts interact with each other.","tags":[{"tag":"example","paramName":"","text":"Get the call stack from a debugger\\nconst debug = os.createDebugger({\\n    pausable: true\\n});\\n\\nconst callStack = debug.getCallStack();\\n"}]},"type":{"type":"array","elementType":{"type":"reference","id":2438,"name":"DebuggerCallFrame"}}}]},{"id":2369,"name":"getCommonActions","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2370,"name":"getCommonActions","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the list of common action objects that have been performed by bots in the current debugger. Action objects are used by CasualOS to represent changes to bots or external effects that should be performed.\\nCommon actions are actions that do not immediately change bots or bot tags or masks.","text":"Examples of common actions are [`os.toast(message, duration)`](ref:os.toast) and [`os.enableVR(options)`](ref:os.enableVR).\\n","tags":[{"tag":"example","paramName":"","text":"Get the list of actions that have been performed in a debugger\\nconst debug = await os.createDebugger();\\ndebug.create({\\n    test: \'@os.toast(\\"Hello\\")\'\\n});\\ndebug.shout(\\"test\\");\\n\\nconst actions = debug.getCommonActions();\\n\\nassertEqual(actions, [\\n    {\\n        type: \'show_toast\',\\n        message: \'Hello\',\\n        duration: 2000\\n    }\\n]);\\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"BotAction"}},"inheritedFrom":{"type":"reference","name":"DebuggerBase.getCommonActions"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.getCommonActions"}},{"id":2373,"name":"getErrors","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2374,"name":"getErrors","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the list of errors that have occurred in the current debugger. Errors occur when an exceptional event happens in a script and prevents the rest of the script from executing.","text":"Debuggers capture these errors and let you inspect them afterwards.\\n","tags":[{"tag":"example","paramName":"","text":"Get the list of errors that have happened in a debugger\\nconst debug = await os.createDebugger();\\ndebug.create({\\n    test: \'@throw new Error(\\"My Error\\")\'\\n});\\ndebug.shout(\\"test\\");\\n\\nconst errors = debug.getErrors();\\n\\nassertEqual(errors.length, 1);\\nassertEqual(errors[0].error, new Error(\\"My Error\\"));\\nassertEqual(errors[0].tag, \\"test\\");\\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","name":"DebuggerBase.getErrors"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.getErrors"}},{"id":2365,"name":"getPortalBots","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2366,"name":"getPortalBots","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the list of portal bots in the debugger.","tags":[]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2687,"name":"Bot"}],"qualifiedName":"Map","package":"typescript","name":"Map"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.getPortalBots"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.getPortalBots"}},{"id":2332,"name":"listCommonPauseTriggers","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2333,"name":"listCommonPauseTriggers","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets a list of common trigger locations for the specified tag on the specified bot. Returns an array containing the list of possible pause trigger locations.","tags":[{"tag":"example","paramName":"","text":"List common trigger locations for a script\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nconst triggerLocations = debug.listCommonPauseTriggers(b, \'test\');\\n"},{"tag":"example","paramName":"","text":"Register a trigger from a common location\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nconst triggerLocations = debug.listCommonPauseTriggers(b, \'test\');\\n\\nconst trigger = debug.setPauseTrigger(b, \'test\', {\\n    lineNumber: triggerLocations[0].lineNumber,\\n    columnNumber: triggerLocations[0].columnNumber,\\n    states: triggerLocations[0].possibleStates\\n});\\n"}]},"parameters":[{"id":2334,"name":"botOrId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the bot or bot ID that the locations should be listed for.","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2687,"name":"Bot"}]}},{"id":2335,"name":"tag","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the name of the tag that the locations should be listed for.\\n","tags":[]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"reference","id":2420,"name":"PossiblePauseTriggerLocation"}}}]},{"id":2330,"name":"listPauseTriggers","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2331,"name":"listPauseTriggers","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the list of pause triggers that have been registered with this debugger.","tags":[{"tag":"example","paramName":"","text":"List the triggers that are set on this debugger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nconst trigger = debug.setPauseTrigger(b, \'test\', {\\n    lineNumber: 1,\\n    columnNumber: 1,\\n    enabled: false\\n});\\n\\nconst triggers = debug.listPauseTriggers();\\n"},{"tag":"docname","paramName":"","text":"listPauseTriggers"},{"tag":"docid","paramName":"","text":"debug.listPauseTriggers\\n"}]},"type":{"type":"array","elementType":{"type":"reference","id":2425,"name":"PauseTrigger"}}}]},{"id":2381,"name":"onAfterAction","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2382,"name":"onAfterAction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers the given handler to be called after a bot action is executed in this debugger.","tags":[]},"parameters":[{"id":2383,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The handler that should be called.\\n","tags":[]},"type":{"type":"reflection","declaration":{"id":2384,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2385,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2386,"name":"action","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BotAction"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.onAfterAction"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.onAfterAction"}},{"id":2399,"name":"onAfterScriptUpdatedTag","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2400,"name":"onAfterScriptUpdatedTag","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers the given handler function to be called after any tag is updated in the debugger.","tags":[{"tag":"example","paramName":"","text":"Listen for tag updates in a debugger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\n// Register a listener that gets called whenever a tag is updated.\\ndebug.onAfterScriptUpdatedTag(update => {\\n    console.log(\'tag updated\', update);\\n});\\n\\n// Because the debugger is pausable, the create() function returns a promise\\n// because it calls @onCreate which could cause a pause trigger to be hit.\\nconst debuggerBot = await debug.create({\\n    test: \'@tags.message = \\"hello, world\\";\'\\n});\\n\\n// Send a shout. Just like the create() function above, we recieve a promise that we can await.\\nawait debug.shout(\'test\');\\n"}]},"parameters":[{"id":2401,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the function that should be called when a tag is updated.\\n","tags":[]},"type":{"type":"reflection","declaration":{"id":2402,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2403,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2404,"name":"update","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2452,"name":"DebuggerTagUpdate"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.onAfterScriptUpdatedTag"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.onAfterScriptUpdatedTag"}},{"id":2405,"name":"onAfterScriptUpdatedTagMask","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2406,"name":"onAfterScriptUpdatedTagMask","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers the given handler function to be called after any tag mask is updated in the debugger.","tags":[{"tag":"example","paramName":"","text":"Listen for tag mask updates in a debugger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\n// Register a listener that gets called whenever a tag mask is updated.\\ndebug.onAfterScriptUpdatedTagMask(update => {\\n    console.log(\'tag mask updated\', update);\\n});\\n\\n// Because the debugger is pausable, the create() function returns a promise\\n// because it calls @onCreate which could cause a pause trigger to be hit.\\nconst debuggerBot = await debug.create({\\n    test: \'@masks.message = \\"hello, world\\";\'\\n});\\n\\n// Send a shout. Just like the create() function above, we recieve a promise that we can await.\\nawait debug.shout(\'test\');\\n"}]},"parameters":[{"id":2407,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the function that should be called when a tag mask is updated.\\n","tags":[]},"type":{"type":"reflection","declaration":{"id":2408,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2409,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2410,"name":"update","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2446,"name":"DebuggerTagMaskUpdate"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.onAfterScriptUpdatedTagMask"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.onAfterScriptUpdatedTagMask"}},{"id":2375,"name":"onBeforeAction","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2376,"name":"onBeforeAction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers the given handler to be called before a bot action is executed in this debugger.","tags":[]},"parameters":[{"id":2377,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The handler that should be called.\\n","tags":[]},"type":{"type":"reflection","declaration":{"id":2378,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2379,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2380,"name":"action","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BotAction"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.onBeforeAction"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.onBeforeAction"}},{"id":2387,"name":"onBeforeUserAction","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2388,"name":"onBeforeUserAction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers the given handler function to be called before a user action is performed in the debugger.","text":"User actions are like normal actions, except they are generated by the CasualOS frontend.\\nGenerally, this only happens for built-in shouts and whispers.\\nAdditionally, these actions can only be automatically created for debuggers that are attached using [`os.attachDebugger(debug, options)`](ref:os.attachDebugger).\\n","tags":[{"tag":"example","paramName":"","text":"Listen for tag updates in a debugger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\n// Register a listener that gets called whenever a user action is about to be performed.\\ndebug.onBeforeUserAction(update => {\\n    console.log(\'user action\', update);\\n});\\n\\n// Because the debugger is pausable, the create() function returns a promise\\n// because it calls @onCreate which could cause a pause trigger to be hit.\\nconst debuggerBot = await debug.create({\\n    home: true,\\n});\\n\\n// Attach the debugger to the front end\\nawait os.attachDebugger(debug);\\n"},{"tag":"docname","paramName":"","text":"onBeforeUserAction"},{"tag":"docid","paramName":"","text":"debug.onBeforeUserAction\\n"}]},"parameters":[{"id":2389,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the function that should be called before a user action is performed.\\n","tags":[]},"type":{"type":"reflection","declaration":{"id":2390,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2391,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2392,"name":"action","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BotAction"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.onBeforeUserAction"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.onBeforeUserAction"}},{"id":2307,"name":"onPause","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2308,"name":"onPause","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers the given function to be called whenever the debugger is paused by hitting a pause trigger.","tags":[{"tag":"example","paramName":"","text":"Listen for pauses on a debugger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\ndebug.onPause(pause => {\\n    console.log(\'pause happened!\', pause);\\n});\\n"},{"tag":"docname","paramName":"","text":"onPause"},{"tag":"docid","paramName":"","text":"debug.onPause\\n"}]},"parameters":[{"id":2309,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the function that should be called when the debugger is paused.\\n","tags":[]},"type":{"type":"reflection","declaration":{"id":2310,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2311,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2312,"name":"pause","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2467,"name":"DebuggerPause"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2393,"name":"onScriptActionEnqueued","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2394,"name":"onScriptActionEnqueued","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Registers the given handler function to be called by the debugger whenever a script enqueues an action.\\nThis occurrs for common actions like [`os.toast(message, duration)`](ref:os.toast) and [`os.showInput(currentValue, options)`](ref:os.showInput).","text":"Every action that is enqueued ends up being performed.\\n","tags":[{"tag":"example","paramName":"","text":"Listen for actions to be enqueued in a debugger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\n// Register a listener that gets called whenever an action is scheduled to be performed.\\ndebug.onScriptActionEnqueued(action => {\\n    console.log(\'action enqueued\', action);\\n});\\n\\n// Because the debugger is pausable, the create() function returns a promise\\n// because it calls @onCreate which could cause a pause trigger to be hit.\\nconst debuggerBot = await debug.create({\\n    test: \'@let abc = 123; os.toast(abc);\'\\n});\\n\\n// Send a shout. Just like the create() function above, we recieve a promise that we can await.\\nawait debug.shout(\'test\');\\n"}]},"parameters":[{"id":2395,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the function that should be called whenever an action is scheduled to be performed.\\n","tags":[]},"type":{"type":"reflection","declaration":{"id":2396,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":2397,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2398,"name":"action","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BotAction"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.onScriptActionEnqueued"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.onScriptActionEnqueued"}},{"id":2411,"name":"performUserAction","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2412,"name":"performUserAction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Performs the given actions in order as if they were user actions.","text":"This function works similarly to [`action.perform(action)`](ref:action.perform) except that actions performed with it will also call handlers registered with debug.onBeforeUserAction.","tags":[]},"parameters":[{"id":2413,"name":"actions","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"shortText":"the actions that should be performed.\\n","tags":[]},"type":{"type":"array","elementType":{"type":"reference","name":"BotAction"}}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"DebuggerBase.performUserAction"}}],"inheritedFrom":{"type":"reference","name":"DebuggerBase.performUserAction"}},{"id":2347,"name":"priorityShout","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2348,"name":"priorityShout","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shouts the given events in order until a bot returns a result.\\nReturns the result that was produced or undefined if no result was produced.","tags":[]},"parameters":[{"id":2349,"name":"eventNames","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The names of the events to shout.","tags":[]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2350,"name":"arg","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The argument to shout.\\n","tags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":2321,"name":"removePauseTrigger","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2322,"name":"removePauseTrigger","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes the given pause trigger from the debugger.","tags":[{"tag":"example","paramName":"","text":"Remove a pause trigger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\nconst b = await debug.create({\\n    test: \'@os.toast(\\"Hello, World!\\")\'\\n});\\n\\nconst trigger = debug.setPauseTrigger(b, \'test\', {\\n    lineNumber: 1,\\n    columnNumber: 1\\n});\\n\\ndebug.removePauseTrigger(trigger);\\n"}]},"parameters":[{"id":2323,"name":"triggerOrId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the trigger or trigger ID that should be removed from the debugger.\\n","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2425,"name":"PauseTrigger"}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2336,"name":"resume","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2337,"name":"resume","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resumes the debugger execution from the given pause.","tags":[{"tag":"example","paramName":"","text":"Resume execution on a debugger\\nconst debug = await os.createDebugger({\\n    pausable: true\\n});\\n\\n// Register a listener that gets called whenever a pause happens in this debugger.\\ndebug.onPause(pause => {\\n    // Get the current stack frame from the pause\\n    const currentFrame = pause.callStack[pause.callStack.length - 1];\\n\\n    // Set the abc variable to 999\\n    currentFrame.setVariableValue(\'abc\', 999);\\n\\n    // Resume execution after the pause.\\n    debug.resume(pause);\\n});\\n\\n// Because the debugger is pausable, the create() function returns a promise\\n// because it calls @onCreate which could cause a pause trigger to be hit.\\nconst debuggerBot = await debug.create({\\n    test: \'@let abc = 123; os.toast(abc);\'\\n});\\n\\n// Set a pause trigger in the \\"test\\" script of the bot we just created\\n// at line 1 column 16\\nconst trigger = debug.setPauseTrigger(debuggerBot, \'test\', {\\n    lineNumber: 1,\\n    columnNumber: 16\\n});\\n\\n// Send a shout. Just like the create() function above, we recieve a promise that we can await.\\nawait debug.shout(\'test\');\\n\\n// Get the resulting actions from the debugger\\n// and perform the first one. This should be the os.toast(), but instead of printing 123,\\n// it should print 999 because we changed the value of abc during the debugger pause.\\nconst actions = debug.getCommonActions();\\naction.perform(actions[0]);\\n"}]},"parameters":[{"id":2338,"name":"pause","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"the debugger pause that was passed to the handler of debug.onPause.\\n","tags":[]},"type":{"type":"reference","id":2467,"name":"DebuggerPause"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2351,"name":"shout","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2352,"name":"shout","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Asks every bot in the inst to run the given action.\\nIn effect, this is like shouting to a bunch of people in a room.","returns":"Returns a list which contains the values returned from each script that was run for the shout.\\n","tags":[{"tag":"example","paramName":"","text":"Tell every bot to reset themselves.\\nlet debugger = await os.createDebugger({\\n    pausable: true\\n});\\nawait debugger.shout(\\"reset()\\");\\n"},{"tag":"example","paramName":"","text":"Ask every bot for its name.\\nlet debugger = await os.createDebugger({\\n    pausable: true\\n});\\nconst names = await debugger.shout(\\"getName()\\");\\n"},{"tag":"example","paramName":"","text":"Tell every bot say \\"Hi\\" to you.\\nlet debugger = await os.createDebugger({\\n    pausable: true\\n});\\nawait debugger.shout(\\"sayHi()\\", \\"My Name\\");\\n"}]},"parameters":[{"id":2353,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The event name.","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":2354,"name":"arg","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The optional argument to include in the shout.","tags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"id":2355,"name":"whisper","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":2356,"name":"whisper","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Asks the given bots to run the given action.\\nIn effect, this is like whispering to a specific set of people in a room.","returns":"Returns a list which contains the values returned from each script that was run for the shout.\\n","tags":[]},"parameters":[{"id":2357,"name":"bot","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The bot(s) to send the event to.","tags":[]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2687,"name":"Bot"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":2687,"name":"Bot"}]}}]}},{"id":2358,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The name of the event to send.","tags":[]},"type":{"type":"intrinsic","name":"string"}},{"id":2359,"name":"arg","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The optional argument to include.","tags":[]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[2418,2416,2414]},{"title":"Methods","kind":2048,"children":[2316,2313,2360,2341,2344,2324,2327,2367,2371,2339,2369,2373,2365,2332,2330,2381,2399,2405,2375,2387,2307,2393,2411,2347,2321,2336,2351,2355]}],"sources":[{"fileName":"src/aux-common/runtime/AuxLibrary.ts","line":1300,"character":17}],"extendedTypes":[{"type":"reference","name":"DebuggerBase"}],"references":"- [`updateBotLinks(bot, idMap)`](ref:updateBotLinks)\\n- [`applyDiffToSnapshot(snapshot, diff)`](ref:applyDiffToSnapshot)\\n- [`applyMod(bot, ...mods)`](ref:applyMod)\\n- [`assert(condition, message)`](ref:assert)\\n- [`assertEqual(first, second)`](ref:assertEqual)\\n- [`atPosition(dimension, x, y)`](ref:atPosition)\\n- [`byCreator(bot)`](ref:byCreator)\\n- [`byID(id)`](ref:byID)\\n- [`byMod(mod)`](ref:byMod)\\n- [`bySpace(space)`](ref:bySpace)\\n- [`byTag(tag, filter)`](ref:byTag)\\n- [`clearAnimations(bot, tag)`](ref:clearAnimations)\\n- [`clearTagMasks(bot, space)`](ref:clearTagMasks)\\n- [`deleteTagMaskText(bot, tag, index, count, space)`](ref:deleteTagMaskText)\\n- [`deleteTagText(bot, tag, index, count)`](ref:deleteTagText)\\n- [`diffSnapshots(first, second)`](ref:diffSnapshots)\\n- [`either(...filters)`](ref:either)\\n- [`getBotLinks(bot)`](ref:getBotLinks)\\n- [`getBotPosition(bot, dimension)`](ref:getBotPosition)\\n- [`getBotRotation(bot, dimension)`](ref:getBotRotation)\\n- [`getBotTagValues(tag, filter)`](ref:getBotTagValues)\\n- [`getFormattedJSON(data)`](ref:getFormattedJSON)\\n- [`getID(bot)`](ref:getID)\\n- [`getJSON(data)`](ref:getJSON)\\n- [`getLink(...bots)`](ref:getLink)\\n- [`getMod(bot, ...tags)`](ref:getMod)\\n- [`getSnapshot(bots)`](ref:getSnapshot)\\n- [`getTag(bot, ...tags)`](ref:getTag)\\n- [`inDimension(dimension)`](ref:inDimension)\\n- [`inStack(bot, dimension)`](ref:inStack)\\n- [`insertTagMaskText(bot, tag, index, text, space)`](ref:insertTagMaskText)\\n- [`insertTagText(bot, tag, index, text)`](ref:insertTagText)\\n- [`neighboring(bot, dimension, direction)`](ref:neighboring)\\n- [`not(filter)`](ref:not)\\n- [`removeTags(bot, tagSection)`](ref:removeTags)\\n- [`renameTag(bot, originalTag, newTag)`](ref:renameTag)\\n- [`setTag(bot, tag, value)`](ref:setTag)\\n- [`setTagMask(bot, tag, value, space)`](ref:setTagMask)\\n- [`subtractMods(bot, ...mods)`](ref:subtractMods)\\n- [`superShout(eventName, arg)`](ref:superShout)\\n- [`uuid()`](ref:uuid)\\n"},"comment":{"shortText":"Defines an interface that represents a pausable debugger.","text":"","tags":[{"tagName":"dochash","paramName":"","text":"types/debuggers/pausable-debugger"},{"tagName":"doctitle","paramName":"","text":"Pausable Debugger"},{"tagName":"docsidebar","paramName":"","text":"Pausable Debugger"},{"tagName":"docdescription","paramName":"","text":"Defines an interface that represents a pausable debugger."},{"tagName":"docname","paramName":"","text":"PausableDebugger"},{"tagName":"docreferenceactions","paramName":"","text":"^\\\\w+$\\n"}]},"group":null}],"references":{"Quaternion":"types/math/rotations","id-3219":"Quaternion","Rotation":"types/math/rotations","id-3251":"Rotation","Vector2":"types/math/vectors","id-3085":"Vector2","Vector3":"types/math/vectors","id-3142":"Vector3","AddCountFailure":"types/records/events","id-3032":"AddCountFailure","AddCountSuccess":"types/records/events","id-3027":"AddCountSuccess","AnimateTagOptions":"types/animation","id-2110":"AnimateTagOptions","AttachDebuggerOptions":"types/debuggers/common","id-2485":"AttachDebuggerOptions","CasualOSDevice":"types/os","id-2851":"CasualOSDevice","CasualOSVersion":"types/os","id-2843":"CasualOSVersion","AxisAndAngle":"types/math/rotations","id-3297":"AxisAndAngle","BotTagMasks":"types/core","id-2820":"BotTagMasks","BotTags":"types/core","id-2735":"BotTags","BotState":"types/core","id-2833":"BotState","CompiledBotListeners":"types/core","id-2814":"CompiledBotListeners","ConvertGeolocationToWhat3WordsOptions":"types/os","id-2527":"ConvertGeolocationToWhat3WordsOptions","CreatePublicRecordKeyFailure":"types/records/key","id-2865":"CreatePublicRecordKeyFailure","CreatePublicRecordKeySuccess":"types/records/key","id-2861":"CreatePublicRecordKeySuccess","DebuggerCallFrame":"types/debuggers/common","id-2438":"DebuggerCallFrame","DebuggerFunctionLocation":"types/debuggers/common","id-2473":"DebuggerFunctionLocation","DebuggerPause":"types/debuggers/common","id-2467":"DebuggerPause","DebuggerTagMaskUpdate":"types/debuggers/common","id-2446":"DebuggerTagMaskUpdate","DebuggerTagUpdate":"types/debuggers/common","id-2452":"DebuggerTagUpdate","DebuggerVariable":"types/debuggers/common","id-2479":"DebuggerVariable","Easing":"types/animation","id-2507":"Easing","EnableXROptions":"types/os","id-2601":"EnableXROptions","EraseDataFailure":"types/records/data","id-3000":"EraseDataFailure","EraseDataSuccess":"types/records/data","id-2996":"EraseDataSuccess","EraseFileFailure":"types/records/files","id-3022":"EraseFileFailure","EraseFileSuccess":"types/records/files","id-3018":"EraseFileSuccess","EulerAnglesRotation":"types/math/rotations","id-3300":"EulerAnglesRotation","FocusOnOptions":"types/os","id-2561":"FocusOnOptions","FocusOnRotation":"types/os","id-2573":"FocusOnRotation","FormAnimationData":"types/os","id-2619":"FormAnimationData","FromToRotation":"types/math/rotations","id-3294":"FromToRotation","GetCountFailure":"types/records/events","id-3043":"GetCountFailure","GetCountSuccess":"types/records/events","id-3037":"GetCountSuccess","GetDataFailure":"types/records/data","id-2991":"GetDataFailure","GetDataSuccess":"types/records/data","id-2982":"GetDataSuccess","GetRoomOptionsFailure":"types/os","id-2200":"GetRoomOptionsFailure","GetRoomOptionsSuccess":"types/os","id-2196":"GetRoomOptionsSuccess","GetRoomRemoteOptionsFailure":"types/os","id-2243":"GetRoomRemoteOptionsFailure","GetRoomRemoteOptionsSuccess":"types/os","id-2238":"GetRoomRemoteOptionsSuccess","GetRoomTrackOptionsFailure":"types/os","id-2219":"GetRoomTrackOptionsFailure","GetRoomTrackOptionsSuccess":"types/os","id-2214":"GetRoomTrackOptionsSuccess","GrantMarkerPermissionFailure":"types/records/policies","id-3071":"GrantMarkerPermissionFailure","GrantMarkerPermissionSuccess":"types/records/policies","id-3069":"GrantMarkerPermissionSuccess","GrantRoleFailure":"types/records/roles","id-3057":"GrantRoleFailure","GrantRoleSuccess":"types/records/roles","id-3055":"GrantRoleSuccess","ImageClassifierOptions":"types/os","id-2579":"ImageClassifierOptions","InstUpdate":"types/os","id-2856":"InstUpdate","JoinRoomFailure":"types/os","id-2181":"JoinRoomFailure","JoinRoomSuccess":"types/os","id-2178":"JoinRoomSuccess","LeaveRoomFailure":"types/os","id-2190":"LeaveRoomFailure","LeaveRoomSuccess":"types/os","id-2187":"LeaveRoomSuccess","ListDataFailure":"types/records/data","id-3013":"ListDataFailure","ListDataSuccess":"types/records/data","id-3005":"ListDataSuccess","LookRotation":"types/math/rotations","id-3317":"LookRotation","MediaPermissionOptions":"types/os","id-2598":"MediaPermissionOptions","Debugger":"types/debuggers/debugger","id-2250":"Debugger","NormalDebuggerOptions":"types/debuggers/common","id-2457":"NormalDebuggerOptions","PhotoCameraOptions":"types/camera","id-2676":"PhotoCameraOptions","ParsedBotLink":"types/core","id-2839":"ParsedBotLink","PartialBotState":"types/core","id-2836":"PartialBotState","PausableDebugger":"types/debuggers/pausable-debugger","id-2306":"PausableDebugger","PausableDebuggerOptions":"types/debuggers/common","id-2462":"PausableDebuggerOptions","PauseTrigger":"types/debuggers/common","id-2425":"PauseTrigger","PauseTriggerOptions":"types/debuggers/common","id-2433":"PauseTriggerOptions","Photo":"types/camera","id-2683":"Photo","PossiblePauseTriggerLocation":"types/debuggers/common","id-2420":"PossiblePauseTriggerLocation","PseudoRandomNumberGenerator":"types/core","id-2494":"PseudoRandomNumberGenerator","QuaternionRotation":"types/math/rotations","id-3310":"QuaternionRotation","RaycastRay":"types/os","id-2174":"RaycastRay","RaycastResult":"types/os","id-2171":"RaycastResult","RecordActionOptions":"types/records/extra","id-2510":"RecordActionOptions","RecordDataFailure":"types/records/data","id-2977":"RecordDataFailure","RecordDataSuccess":"types/records/data","id-2973":"RecordDataSuccess","RecordFileFailure":"types/records/files","id-2141":"RecordFileFailure","RecordFileSuccess":"types/records/files","id-2137":"RecordFileSuccess","RecordedFile":"types/experimental","id-2663":"RecordedFile","Recording":"types/experimental","id-2661":"Recording","RecordingOptions":"types/experimental","id-2668":"RecordingOptions","RegisterPrefixOptions":"types/core","id-2658":"RegisterPrefixOptions","RevokeMarkerPermissionFailure":"types/records/policies","id-3078":"RevokeMarkerPermissionFailure","RevokeMarkerPermissionSuccess":"types/records/policies","id-3076":"RevokeMarkerPermissionSuccess","RevokeRoleFailure":"types/records/roles","id-3064":"RevokeRoleFailure","RevokeRoleSuccess":"types/records/roles","id-3062":"RevokeRoleSuccess","RoomJoinOptions":"types/os","id-2624":"RoomJoinOptions","RoomOptions":"types/os","id-2633":"RoomOptions","RoomRemoteOptions":"types/os","id-2649":"RoomRemoteOptions","RoomTrackOptions":"types/os","id-2637":"RoomTrackOptions","RuntimeBot":"types/core","id-2687":"RuntimeBot","RuntimeBotLinks":"types/core","id-2826":"RuntimeBotLinks","RuntimeBotVars":"types/core","id-2823":"RuntimeBotVars","SequenceRotation":"types/math/rotations","id-3308":"SequenceRotation","SetRoomOptionsSuccess":"types/os","id-2205":"SetRoomOptionsSuccess","SetRoomTrackOptions":"types/os","id-2655":"SetRoomTrackOptions","SetRoomTrackOptionsFailure":"types/os","id-2231":"SetRoomTrackOptionsFailure","SetRoomTrackOptionsSuccess":"types/os","id-2226":"SetRoomTrackOptionsSuccess","ShareOptions":"types/os","id-2557":"ShareOptions","ShowChatOptions":"types/os","id-2551":"ShowChatOptions","ShowConfirmOptions":"types/os","id-2593":"ShowConfirmOptions","ShowInputOptions":"types/os","id-2584":"ShowInputOptions","SnapAxis":"types/os","id-2531":"SnapAxis","SnapGridTarget":"types/os","id-2146":"SnapGridTarget","SnapPoint":"types/os","id-2543":"SnapPoint","SpeakTextOptions":"types/experimental","id-2490":"SpeakTextOptions","StartFormAnimationOptions":"types/os","id-2603":"StartFormAnimationOptions","StopFormAnimationOptions":"types/os","id-2616":"StopFormAnimationOptions","SuccessfulGeolocation":"types/os","id-2513":"SuccessfulGeolocation","SyntheticVoice":"types/experimental","id-2672":"SyntheticVoice","TweenOptions":"types/experimental","id-2487":"TweenOptions","UnsuccessfulGeolocation":"types/os","id-2523":"UnsuccessfulGeolocation","UpdateEventRecordFailure":"types/records/events","id-3050":"UpdateEventRecordFailure","UpdateEventRecordSuccess":"types/records/events","id-3048":"UpdateEventRecordSuccess","UploadedFile":"types/os","id-2167":"UploadedFile","WebhookOptions":"types/web","id-2091":"WebhookOptions","WebhookResult":"types/web","id-2103":"WebhookResult","AddCountResult":"types/records/events","id-3026":"AddCountResult","AvailablePermissions":"types/permissions","id-2870":"AvailablePermissions","BarcodeFormat":"types/os","id-2578":"BarcodeFormat","BotFilter":"types/core","id-2125":"BotFilter","BotSpace":"types/core","id-2810":"BotSpace","CameraType":"types/os","id-2577":"CameraType","CreatePublicRecordKeyResult":"types/records/key","id-2860":"CreatePublicRecordKeyResult","EaseMode":"types/animation","id-2506":"EaseMode","EaseType":"types/animation","id-2505":"EaseType","EraseDataResult":"types/records/data","id-2995":"EraseDataResult","EraseFileResult":"types/records/files","id-3017":"EraseFileResult","Geolocation":"types/os","id-2512":"Geolocation","GetCountResult":"types/records/events","id-3036":"GetCountResult","GetDataResult":"types/records/data","id-2981":"GetDataResult","GetRoomOptionsResult":"types/os","id-2195":"GetRoomOptionsResult","GetRoomRemoteOptionsResult":"types/os","id-2237":"GetRoomRemoteOptionsResult","GetRoomTrackOptionsResult":"types/os","id-2213":"GetRoomTrackOptionsResult","GrantMarkerPermissionResult":"types/records/policies","id-3068":"GrantMarkerPermissionResult","GrantRoleResult":"types/records/roles","id-3054":"GrantRoleResult","JoinRoomResult":"types/os","id-2177":"JoinRoomResult","LeaveRoomResult":"types/os","id-2186":"LeaveRoomResult","ListDataResult":"types/records/data","id-3004":"ListDataResult","Mod":"types/core","id-2120":"Mod","PortalType":"types/core","id-2842":"PortalType","PossiblePauseTriggerStates":"types/debuggers/common","id-2424":"PossiblePauseTriggerStates","RecordDataResult":"types/records/data","id-2972":"RecordDataResult","RecordFileResult":"types/records/files","id-2136":"RecordFileResult","RevokeMarkerPermissionResult":"types/records/policies","id-3075":"RevokeMarkerPermissionResult","RevokeRoleResult":"types/records/roles","id-3061":"RevokeRoleResult","SetRoomOptionsResult":"types/os","id-2204":"SetRoomOptionsResult","SetRoomTrackOptionsResult":"types/os","id-2225":"SetRoomTrackOptionsResult","SnapTarget":"types/os","id-2550":"SnapTarget","TagFilter":"types/core","id-2121":"TagFilter","UpdateEventRecordResult":"types/records/events","id-3047":"UpdateEventRecordResult","animateTag-byOptions":"actions/utility","id-364":"animateTag-byOptions","getbot-tag":"actions/data","id-33":"getbot-tag","getbots-tag":"actions/data","id-17":"getbots-tag","animateTag-byTag":"actions/utility","id-358":"animateTag-byTag","changeState":"actions/data","id-177":"changeState","create":"actions/data","id-162":"create","destroy":"actions/data","id-166":"destroy","getbot-filters":"actions/data","id-26":"getbot-filters","getbots-filters":"actions/data","id-10":"getbots-filters","priorityShout":"actions/event","id-225":"priorityShout","shout":"actions/event","id-237":"shout","updateBotLinks":"actions/data","id-198":"updateBotLinks","whisper":"actions/event","id-263":"whisper","action.perform":"actions/event","id-1600":"action.perform","action.reject":"actions/event","id-1604":"action.reject","applyDiffToSnapshot":"actions/data","id-83":"applyDiffToSnapshot","applyMod":"actions/mods","id-152":"applyMod","assert":"actions/debuggers","id-407":"assert","assertEqual":"actions/debuggers","id-412":"assertEqual","atPosition":"actions/bot-filters","id-293":"atPosition","byCreator":"actions/bot-filters","id-314":"byCreator","byID":"actions/bot-filters","id-281":"byID","byMod":"actions/bot-filters","id-285":"byMod","bySpace":"actions/bot-filters","id-310":"bySpace","byTag":"actions/bot-filters","id-276":"byTag","bytes.fromBase64String":"actions/bytes","id-1824":"bytes.fromBase64String","bytes.fromHexString":"actions/bytes","id-1832":"bytes.fromHexString","bytes.toBase64String":"actions/bytes","id-1820":"bytes.toBase64String","bytes.toHexString":"actions/bytes","id-1828":"bytes.toHexString","clearAnimations":"actions/utility","id-378":"clearAnimations","clearTagMasks":"actions/data","id-106":"clearTagMasks","crypto.hash-raw":"actions/crypto","id-1838":"crypto.hash-raw","crypto.hash-string":"actions/crypto","id-1844":"crypto.hash-string","crypto.hmac-raw":"actions/crypto","id-1875":"crypto.hmac-raw","crypto.hmac-string":"actions/crypto","id-1868":"crypto.hmac-string","crypto.asymmetric.decrypt":"actions/crypto","id-1933":"crypto.asymmetric.decrypt","crypto.asymmetric.encrypt":"actions/crypto","id-1928":"crypto.asymmetric.encrypt","crypto.asymmetric.isEncrypted":"actions/crypto","id-1939":"crypto.asymmetric.isEncrypted","crypto.asymmetric.isKeypair":"actions/crypto","id-1924":"crypto.asymmetric.isKeypair","crypto.asymmetric.keypair":"actions/crypto","id-1920":"crypto.asymmetric.keypair","crypto.encrypt":"actions/crypto","id-1904":"crypto.encrypt","crypto.hmacSha256":"actions/crypto","id-1894":"crypto.hmacSha256","crypto.hmacSha512":"actions/crypto","id-1899":"crypto.hmacSha512","crypto.isEncrypted":"actions/crypto","id-1914":"crypto.isEncrypted","crypto.keypair":"actions/crypto","id-1943":"crypto.keypair","crypto.sha256":"actions/crypto","id-1860":"crypto.sha256","crypto.sha512":"actions/crypto","id-1864":"crypto.sha512","crypto.sign":"actions/crypto","id-1947":"crypto.sign","deleteTagMaskText":"actions/data","id-133":"deleteTagMaskText","deleteTagText":"actions/data","id-126":"deleteTagText","diffSnapshots":"actions/data","id-78":"diffSnapshots","either":"actions/bot-filters","id-318":"either","os.beginAudioRecording":"actions/audio","id-1658":"os.beginAudioRecording","experiment.beginRecording":"actions/experimental","id-1665":"experiment.beginRecording","os.endAudioRecording":"actions/audio","id-1662":"os.endAudioRecording","experiment.endRecording":"actions/experimental","id-1669":"experiment.endRecording","experiment.getAnchorPointPosition":"actions/experimental","id-1648":"experiment.getAnchorPointPosition","experiment.getVoices":"actions/experimental","id-1677":"experiment.getVoices","experiment.localFormAnimation":"actions/experimental","id-1621":"experiment.localFormAnimation","experiment.localPositionTween":"actions/experimental","id-1626":"experiment.localPositionTween","experiment.localRotationTween":"actions/experimental","id-1637":"experiment.localRotationTween","experiment.speakText":"actions/experimental","id-1672":"experiment.speakText","getBotLinks":"actions/data","id-194":"getBotLinks","getBotPosition":"actions/data","id-52":"getBotPosition","getBotRotation":"actions/data","id-57":"getBotRotation","getBotTagValues":"actions/data","id-42":"getBotTagValues","getFormattedJSON":"actions/data","id-70":"getFormattedJSON","getID":"actions/data","id-62":"getID","getJSON":"actions/data","id-66":"getJSON","getLink":"actions/data","id-190":"getLink","getMod":"actions/mods","id-47":"getMod","getSnapshot":"actions/data","id-74":"getSnapshot","getTag":"actions/data","id-88":"getTag","inDimension":"actions/bot-filters","id-289":"inDimension","inStack":"actions/bot-filters","id-299":"inStack","insertTagMaskText":"actions/data","id-118":"insertTagMaskText","insertTagText":"actions/data","id-111":"insertTagText","math.abs":"actions/math","id-1694":"math.abs","math.addVectors":"actions/math","id-1764":"math.addVectors","math.areClose":"actions/math","id-1795":"math.areClose","math.avg":"actions/math","id-1686":"math.avg","math.degreesToRadians":"actions/math","id-1720":"math.degreesToRadians","math.getAnchorPointOffset":"actions/math","id-1760":"math.getAnchorPointOffset","math.getForwardDirection":"actions/math","id-1728":"math.getForwardDirection","math.getSeededRandomNumberGenerator":"actions/math","id-1702":"math.getSeededRandomNumberGenerator","math.intersectPlane":"actions/math","id-1737":"math.intersectPlane","math.negateVector":"actions/math","id-1774":"math.negateVector","math.normalizeVector":"actions/math","id-1779":"math.normalizeVector","math.radiansToDegrees":"actions/math","id-1724":"math.radiansToDegrees","math.random":"actions/math","id-1715":"math.random","math.randomInt":"actions/math","id-1710":"math.randomInt","math.scaleVector":"actions/math","id-1789":"math.scaleVector","math.setRandomSeed":"actions/math","id-1706":"math.setRandomSeed","math.sqrt":"actions/math","id-1690":"math.sqrt","math.stdDev":"actions/math","id-1698":"math.stdDev","math.subtractVectors":"actions/math","id-1769":"math.subtractVectors","math.sum":"actions/math","id-1682":"math.sum","math.vectorLength":"actions/math","id-1784":"math.vectorLength","neighboring":"actions/bot-filters","id-304":"neighboring","not":"actions/bot-filters","id-325":"not","os.attachDebugger":"actions/debuggers","id-1298":"os.attachDebugger","os.createDebugger-normal":"actions/debuggers","id-1287":"os.createDebugger-normal","os.createDebugger-pausable":"actions/debuggers","id-1291":"os.createDebugger-pausable","os.focusOn-bot":"actions/portals","id-480":"os.focusOn-bot","os.focusOn-position":"actions/portals","id-485":"os.focusOn-position","os.getExecutingDebugger":"actions/debuggers","id-1295":"os.getExecutingDebugger","showChat-options":"actions/os","id-507":"showChat-options","showChat-placeholder":"actions/os","id-503":"showChat-placeholder","os.showInput":"actions/portals","id-723":"os.showInput","os.addBotDropGrid":"actions/portals","id-797":"os.addBotDropGrid","os.addBotDropSnap":"actions/portals","id-788":"os.addBotDropSnap","os.addDropGrid":"actions/portals","id-793":"os.addDropGrid","os.addDropSnap":"actions/portals","id-784":"os.addDropSnap","os.applyUpdatesToInst":"actions/os","id-1241":"os.applyUpdatesToInst","os.arSupported":"actions/xr","id-548":"os.arSupported","os.bufferFormAddressGLTF":"actions/animations","id-1194":"os.bufferFormAddressGLTF","os.bufferSound":"actions/audio","id-760":"os.bufferSound","os.calculateRayFromCamera":"actions/portals","id-1189":"os.calculateRayFromCamera","os.cancelSound":"actions/audio","id-764":"os.cancelSound","os.capturePhoto":"actions/camera","id-643":"os.capturePhoto","os.closeBarcodeScanner":"actions/barcodes","id-621":"os.closeBarcodeScanner","os.closeCircleWipe":"actions/portals","id-776":"os.closeCircleWipe","os.closeImageClassifier":"actions/image-classification","id-636":"os.closeImageClassifier","os.closePhotoCamera":"actions/camera","id-647":"os.closePhotoCamera","os.closeQRCodeScanner":"actions/barcodes","id-607":"os.closeQRCodeScanner","os.compileApp":"actions/app","id-911":"os.compileApp","os.convertGeolocationToWhat3Words":"actions/os","id-1174":"os.convertGeolocationToWhat3Words","os.countEvents":"actions/records","id-1168":"os.countEvents","os.createInitializationUpdate":"actions/os","id-1237":"os.createInitializationUpdate","os.device":"actions/os","id-525":"os.device","os.disableAR":"actions/xr","id-538":"os.disableAR","os.disablePointOfView":"actions/portals","id-563":"os.disablePointOfView","os.disableVR":"actions/xr","id-545":"os.disableVR","os.disableWakeLock":"actions/os","id-569":"os.disableWakeLock","os.download":"actions/files","id-575":"os.download","os.downloadBots":"actions/files","id-581":"os.downloadBots","os.downloadBotsAsInitialzationUpdate":"actions/files","id-586":"os.downloadBotsAsInitialzationUpdate","os.downloadInst":"actions/files","id-594":"os.downloadInst","os.enableAR":"actions/xr","id-534":"os.enableAR","os.enableCustomDragging":"actions/portals","id-802":"os.enableCustomDragging","os.enablePointOfView":"actions/portals","id-554":"os.enablePointOfView","os.enableVR":"actions/xr","id-541":"os.enableVR","os.eraseData":"actions/records","id-1111":"os.eraseData","os.eraseManualApprovalData":"actions/records","id-1117":"os.eraseManualApprovalData","os.exitFullscreenMode":"actions/portals","id-451":"os.exitFullscreenMode","os.getAverageFrameRate":"actions/os","id-859":"os.getAverageFrameRate","os.getCameraPosition":"actions/portals","id-815":"os.getCameraPosition","os.getCameraRotation":"actions/portals","id-819":"os.getCameraRotation","os.getCurrentDimension":"actions/portals","id-694":"os.getCurrentDimension","os.getCurrentInst":"actions/portals","id-700":"os.getCurrentInst","os.getCurrentInstUpdate":"actions/os","id-1245":"os.getCurrentInstUpdate","os.getData":"actions/records","id-1093":"os.getData","os.getDimensionalDepth":"actions/portals","id-713":"os.getDimensionalDepth","os.getFocusPoint":"actions/portals","id-827":"os.getFocusPoint","os.getGeolocation":"actions/os","id-809":"os.getGeolocation","os.getInputList":"actions/portals","id-852":"os.getInputList","os.getInputState":"actions/portals","id-847":"os.getInputState","os.getInstStateFromUpdates":"actions/os","id-1233":"os.getInstStateFromUpdates","os.getManualApprovalData":"actions/records","id-1099":"os.getManualApprovalData","os.getMediaPermission":"actions/os","id-855":"os.getMediaPermission","os.getMenuDimension":"actions/portals","id-703":"os.getMenuDimension","os.getMiniPortalDimension":"actions/portals","id-706":"os.getMiniPortalDimension","os.getPointerDirection":"actions/portals","id-843":"os.getPointerDirection","os.getPointerPosition":"actions/portals","id-831":"os.getPointerPosition","os.getPointerRotation":"actions/portals","id-835":"os.getPointerRotation","os.getPortalDimension":"actions/portals","id-709":"os.getPortalDimension","os.getPublicRecordKey":"actions/records","id-1018":"os.getPublicRecordKey","os.getRoomOptions":"actions/rooms","id-877":"os.getRoomOptions","os.getRoomRemoteOptions":"actions/rooms","id-892":"os.getRoomRemoteOptions","os.getRoomTrackOptions":"actions/rooms","id-881":"os.getRoomTrackOptions","os.getSubjectlessPublicRecordKey":"actions/records","id-1022":"os.getSubjectlessPublicRecordKey","os.getWakeLockConfiguration":"actions/os","id-572":"os.getWakeLockConfiguration","os.goToDimension":"actions/portals","id-737":"os.goToDimension","os.goToURL":"actions/portals","id-741":"os.goToURL","os.grantInstAdminPermission":"actions/records","id-1040":"os.grantInstAdminPermission","os.grantInstRole":"actions/records","id-1060":"os.grantInstRole","os.grantRecordMarkerPermission":"actions/records","id-1026":"os.grantRecordMarkerPermission","os.grantUserRole":"actions/records","id-1045":"os.grantUserRole","os.hasBotInMiniPortal":"actions/portals","id-768":"os.hasBotInMiniPortal","os.hideBarcode":"actions/barcodes","id-629":"os.hideBarcode","os.hideChat":"actions/os","id-515":"os.hideChat","os.hideHtml":"actions/os","id-458":"os.hideHtml","os.hideQRCode":"actions/barcodes","id-614":"os.hideQRCode","os.hideTips":"actions/portals","id-439":"os.hideTips","os.importAUX":"actions/files","id-678":"os.importAUX","os.inSheet":"actions/portals","id-812":"os.inSheet","os.instStatuses":"actions/os","id-1262":"os.instStatuses","os.instances":"actions/os","id-1252":"os.instances","os.isCollaborative":"actions/os","id-528":"os.isCollaborative","os.isInDimension":"actions/portals","id-690":"os.isInDimension","os.isRecordKey":"actions/records","id-1075":"os.isRecordKey","os.joinRoom":"actions/rooms","id-862":"os.joinRoom","os.leaveRoom":"actions/rooms","id-867":"os.leaveRoom","os.listBuiltinTags":"actions/app","id-1012":"os.listBuiltinTags","os.listData":"actions/records","id-1105":"os.listData","os.listFormAnimations":"actions/animations","id-1209":"os.listFormAnimations","os.listInstUpdates":"actions/os","id-1230":"os.listInstUpdates","os.loadInst":"actions/os","id-670":"os.loadInst","os.log":"actions/os","id-805":"os.log","os.meetCommand":"actions/os","id-1275":"os.meetCommand","os.meetFunction":"actions/os","id-1280":"os.meetFunction","os.openBarcodeScanner":"actions/barcodes","id-617":"os.openBarcodeScanner","os.openCircleWipe":"actions/portals","id-780":"os.openCircleWipe","os.openDevConsole":"actions/os","id-749":"os.openDevConsole","os.openImageClassifier":"actions/image-classification","id-632":"os.openImageClassifier","os.openPhotoCamera":"actions/camera","id-639":"os.openPhotoCamera","os.openQRCodeScanner":"actions/barcodes","id-603":"os.openQRCodeScanner","os.openURL":"actions/portals","id-745":"os.openURL","os.parseBotsFromData":"actions/files","id-682":"os.parseBotsFromData","os.playSound":"actions/audio","id-756":"os.playSound","os.raycast":"actions/portals","id-1183":"os.raycast","os.raycastFromCamera":"actions/portals","id-1178":"os.raycastFromCamera","os.recordData":"actions/records","id-1079":"os.recordData","os.recordEvent":"actions/records","id-1162":"os.recordEvent","os.recordFile":"actions/records","id-1123":"os.recordFile","os.recordManualApprovalData":"actions/records","id-1086":"os.recordManualApprovalData","os.registerApp":"actions/app","id-902":"os.registerApp","os.registerTagPrefix":"actions/app","id-897":"os.registerTagPrefix","os.remoteCount":"actions/os","id-1255":"os.remoteCount","os.remotes":"actions/os","id-1227":"os.remotes","os.replaceDragBot":"actions/portals","id-686":"os.replaceDragBot","os.requestAuthBot":"actions/records","id-1015":"os.requestAuthBot","os.requestFullscreenMode":"actions/portals","id-448":"os.requestFullscreenMode","os.requestWakeLock":"actions/os","id-566":"os.requestWakeLock","os.revokeInstRole":"actions/records","id-1068":"os.revokeInstRole","os.revokeRecordMarkerPermission":"actions/records","id-1033":"os.revokeRecordMarkerPermission","os.revokeUserRole":"actions/records","id-1053":"os.revokeUserRole","os.run":"actions/os","id-518":"os.run","os.setClipboard":"actions/os","id-461":"os.setClipboard","os.setRoomOptions":"actions/rooms","id-872":"os.setRoomOptions","os.setRoomTrackOptions":"actions/rooms","id-886":"os.setRoomTrackOptions","os.share":"actions/os","id-772":"os.share","os.showBarcode":"actions/barcodes","id-624":"os.showBarcode","os.showConfirm":"actions/portals","id-733":"os.showConfirm","os.showHtml":"actions/os","id-454":"os.showHtml","os.showInputForTag":"actions/portals","id-717":"os.showInputForTag","os.showJoinCode":"actions/barcodes","id-443":"os.showJoinCode","os.showQRCode":"actions/barcodes","id-610":"os.showQRCode","os.showUploadAuxFile":"actions/files","id-597":"os.showUploadAuxFile","os.showUploadFiles":"actions/files","id-600":"os.showUploadFiles","os.sleep":"actions/os","id-423":"os.sleep","os.startFormAnimation":"actions/animations","id-1198":"os.startFormAnimation","os.stopFormAnimation":"actions/animations","id-1204":"os.stopFormAnimation","os.tip":"actions/portals","id-432":"os.tip","os.toast":"actions/os","id-427":"os.toast","os.totalRemoteCount":"actions/os","id-1259":"os.totalRemoteCount","os.unloadInst":"actions/os","id-674":"os.unloadInst","os.unregisterApp":"actions/app","id-907":"os.unregisterApp","os.version":"actions/os","id-522":"os.version","os.vrSupported":"actions/xr","id-551":"os.vrSupported","os.agreedUponTime":"actions/time","id-651":"os.agreedUponTime","os.deadReckoningTime":"actions/time","id-659":"os.deadReckoningTime","os.instLatency":"actions/time","id-653":"os.instLatency","os.instTimeOffset":"actions/time","id-655":"os.instTimeOffset","os.instTimeOffsetSpread":"actions/time","id-657":"os.instTimeOffsetSpread","os.localTime":"actions/time","id-649":"os.localTime","removeTags":"actions/data","id-141":"removeTags","renameTag":"actions/data","id-146":"renameTag","setTag":"actions/data","id-93":"setTag","setTagMask":"actions/data","id-99":"setTagMask","subtractMods":"actions/mods","id-157":"subtractMods","superShout":"actions/event","id-220":"superShout","uuid":"actions/data","id-355":"uuid","web.get":"actions/web","id-1990":"web.get","web.hook":"actions/web","id-2001":"web.hook","web.post":"actions/web","id-1995":"web.post","configBot":"actions/os","id-418":"configBot"}}'),i=n(4629),c=(n(2503),n(9960),["components"]),d={id:"pausable-debugger",title:"Pausable Debugger",sidebar_label:"Pausable Debugger",description:"Defines an interface that represents a pausable debugger."},l=void 0,g={unversionedId:"types/debuggers/pausable-debugger",id:"types/debuggers/pausable-debugger",title:"Pausable Debugger",description:"Defines an interface that represents a pausable debugger.",source:"@site/docs/types/debuggers/pausable-debugger.mdx",sourceDirName:"types/debuggers",slug:"/types/debuggers/pausable-debugger",permalink:"/types/debuggers/pausable-debugger",draft:!1,editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/types/debuggers/pausable-debugger.mdx",tags:[],version:"current",frontMatter:{id:"pausable-debugger",title:"Pausable Debugger",sidebar_label:"Pausable Debugger",description:"Defines an interface that represents a pausable debugger."},sidebar:"docs",previous:{title:"Debugger",permalink:"/types/debuggers/debugger"},next:{title:"Experimental",permalink:"/types/experimental"}},u={},m=[].concat((0,i.KO)(s)),p={toc:m};function f(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i.hl,{doc:s,mdxType:"ApiContents"}))}f.isMDXComponent=!0}}]);